{"version":3,"sources":["webpack://c2wasm/./node_modules/moo/moo.js","webpack://c2wasm/./demos/parsetree.ts","webpack://c2wasm/./src/c_error.ts","webpack://c2wasm/./src/parsing/index.ts","webpack://c2wasm/./src/parsing/lexer.ts","webpack://c2wasm/./src/parsing/parser.ts","webpack://c2wasm/./src/parsing/parsetree.ts","webpack://c2wasm/./src/parsing/validation.ts","webpack://c2wasm/./src/tree/types.ts","webpack://c2wasm/./src/parsing/gen/c_grammar.js","webpack://c2wasm/webpack/bootstrap","webpack://c2wasm/webpack/startup"],"names":["hasOwnProperty","Object","prototype","toString","hasSticky","RegExp","sticky","isRegExp","o","call","isObject","Array","isArray","reEscape","s","replace","reGroups","exec","length","reCapture","reUnion","regexps","map","join","regexpOrLiteral","obj","ignoreCase","Error","global","multiline","source","objectToRules","object","keys","getOwnPropertyNames","result","i","key","thing","rules","concat","match","forEach","rule","push","ruleOptions","j","include","arrayToRules","array","type","JSON","stringify","options","defaultType","lineBreaks","error","fallback","pop","next","value","shouldThrow","sort","a","b","toRules","spec","defaultErrorRule","compileRules","hasStates","errorRule","fast","create","fastAllowed","unicodeFlag","groups","parts","slice","shift","charCodeAt","unicode","pat","regexp","test","fallbackRule","flags","suffix","compile","Lexer","start","checkStateGroup","g","name","state","compileStates","states","all","$all","ruleMap","included","splice","newRules","k","newRule","indexOf","apply","fastKeys","keywordTransform","reverseMap","byLength","types","tokenType","item","keyword","str","x","keywords","Function","this","startState","buffer","stack","reset","data","info","index","line","col","queuedToken","queuedThrow","setState","save","re","popState","pushState","eat","tokenToString","_getGroup","groupCount","undefined","queuedGroup","token","_token","queuedText","group","charAt","lastIndex","text","offset","matchNL","nl","size","formatError","Symbol","iterator","LexerIterator","lexer","done","message","Math","max","eol","firstLine","substring","clone","has","freeze","testInput","trimStart","parseTree","input","showLocations","tree","parse","startsWith","l","first_line","first_column","last_line","last_column","e","console","debug","window","document","write","textInput","getElementById","output","showLoc","handler","textContent","checked","addEventListener","log","CError","node","node2","super","loc","locationString","label","lines","_source","split","lnumDigits","ceil","log10","outputLine","lnum","padStart","ParseNode","ParseTreeValidationError","$comment","IDENTIFIER","fromEntries","toUpperCase","CONSTANT_FLOAT","CONSTANT_HEX","CONSTANT_OCTAL","CONSTANT_INT","CONSTANT_CHAR","STRING_LITERAL","ELLIPSIS","RIGHT_ASSIGN","LEFT_ASSIGN","ADD_ASSIGN","SUB_ASSIGN","MUL_ASSIGN","DIV_ASSIGN","MOD_ASSIGN","AND_ASSIGN","XOR_ASSIGN","OR_ASSIGN","RIGHT_OP","LEFT_OP","INC_OP","DEC_OP","PTR_OP","AND_OP","OR_OP","LE_OP","GE_OP","EQ_OP","NE_OP","$whitespace","tok","nextSourceId","generatedParser","parser","WrappedLexer","yylloc","_sourceId","yylineno","Map","yytext","get","clear","d","typeInfo","storageList","declarator","list","parsetree","IdentifierDeclarator","body","set","id","validate","hash","Expression","_expression","Identifier","Constant","valueType","StringLiteral","UnaryOperations","UnaryExpression","_unaryExpr","BinaryOperations","BinaryExpression","lhs","rhs","_binaryExpr","SizeofExpression","CastExpression","targetType","FunctionCallExpression","fn","args","MemberAccessExpression","pointer","ConditionalExpression","condition","trueValue","falseValue","AssignmentExpression","assignType","ConstantExpression","expr","CustomTypeSpecifier","SpecifierQualifiers","specifierList","qualifierList","specifier","DeclarationSpecifiers","fnSpecifierList","EnumSpecifier","Enumerator","Declaration","InitDeclarator","initializer","exploreInitializer","StructUnionSpecifier","structure","declarations","StructDeclaration","PointerDeclarator","abstractDeclarator","ArrayDeclarator","FunctionDeclarator","variadic","ParameterDeclaration","Pointer","TypeName","AbstractPointerDeclarator","AbstractArrayDeclarator","AbstractFunctionDeclarator","Statement","_statement","IfStatement","expression","ifBody","elseBody","SwitchStatement","CaseStatement","DefaultStatement","CompoundStatement","ExpressionStatement","NoOp","ForLoop","init","update","WhileLoop","DoWhileLoop","GotoStatement","target","ContinueStatement","BreakStatement","ReturnStatement","FunctionDefinition","validatorMap","nodeList","parents","children","validator","getPrototypeOf","constructor","validators","typeValidation","every","v","getArithmeticType","typeLookup","constExprValidation","n","pt","parent","CFuncType","returnType","parameterTypes","parameterNames","typeName","bytes","alignment","incomplete","CVoid","checkTypeComplete","t","equals","other","CPointer","constant","qualifier","CArray","CCompoundMember","CStruct","_members","members","reduce","total","m","member","find","getQualifier","CUnion","hasConstMember","CEnum","_values","CArithmetic","BOOL","Infinity","BigInt","Fp32","Fp64","U8","S8","U16","S16","U32","S32","U64","S64","CSizeT","constType","integerPromotion","baseType","setPrototypeOf","_base","t1","t2","copy","remove","idx","check","c_grammar","JisonParserError","msg","stacktrace","defineProperty","enumerable","writable","exception","ex2","captureStackTrace","c","u","rv","trace","yy","hasPartialLrUpgradeOnConflict","errorRecoveryTokenDiscardCount","symbols_","terminals_","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","TERROR","EOF","originalQuoteName","originalParseError","cleanupAfterParse","constructParseErrorInfo","yyMergeLocationInfo","__reentrant_call_depth","__error_infos","__error_recovery_infos","quoteName","id_str","getSymbolName","symbol","describeSymbol","terminal_descriptions_","collect_expected_token_set","do_not_describe","tokenset","state_descriptions_","p","table","productions_","r","bp","performAction","yyloc","yystate","yysp","yyvstack","yylstack","yyparser","yylexer","$","_$","setLabel","externalDeclaration","len","y","mode","goto","q","z","bt","defaultActions","bda","parseError","ExceptionClass","recoverable","destroy","self","sstack","vstack","lstack","sp","NO_ACTION","__lexer__","sharedState_yy","pre_parse","post_parse","pre_lex","post_lex","shallow_copy","src","dst","shallow_copy_noclobber","copy_yylloc","range","fastLex","assert","yyGetSharedState","resultValue","invoke_post_methods","do_not_nuke_errorinfos","cleanupAfterLex","el","first_index","last_index","first_yylloc","last_yylloc","dont_look_back","i1","i2","l1","l2","ex","expected","pei","errStr","token_id","action","new_state","newState","symbol_stack","state_stack","value_stack","location_stack","stack_pointer","rec","yyrulelen","this_production","lex","yyval","retval","setInput","canIUse","errSymbolDescr","showPosition","ntsymbol","JisonLexerError","Parser","exports","arguments","__webpack_module_cache__","__webpack_require__","moduleId","module","__webpack_modules__"],"mappings":"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AK0X,EAAE,CACP,GACA,GACA,GACAta,EACA,CAAC,GAAI,GACL,GACA,GACA,GACAA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,GACL,GACA,GACAA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,GACL,GACA,GACAA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,IAAK,GACN,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACAA,EACA,CAAC,IAAK,IACN,IACA,IACA,IACA,IACA,IACAA,EACA,CAAC,IAAK,GACN,IACA,IACA,IACA,IACAA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,GACN,IACA,IACA,IACA,IACA,IACAA,EACA,CAAC,IAAK,GACN,IACA,IACA,IACAA,EACA,CAAC,IAAK,GACN,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACAA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,IAAK,GACN,IACA,IACA,IACA,IACA,IACA,IACAA,EACA,CAAC,IAAK,GACN,IACA,IACAA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,IAAK,GACN,IACA,IACAA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,IAAK,GACN,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACAA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,IAAK,GACN,IACA,IACA,IACA,IACA,MAEA6B,KAAMyY,EAAE,CACR,EACAta,EACA,CAAC,EAAG,GACJqa,EACA,CAAC,GAAI,GACL,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACAA,EACA,CAAC,GAAI,GACLra,EACA,CAAC,EAAG,GACJ,EACAA,EACA,CAAC,EAAG,GACJ,EACA,EACAA,EACA,CAAC,EAAG,GACJqa,EACA,CAAC,EAAG,GACJA,EACA,CAAC,EAAG,GACJA,EACA,CAAC,EAAG,GACJA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,EAAG,GACJ,EACAA,EACA,CAAC,EAAG,GACJra,EACA,CAAC,EAAG,IACJqa,EACA,CAAC,GAAI,GACLA,EACA,CAAC,EAAG,GACJA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,EAAG,GACJA,EACA,CAAC,GAAI,GACLra,EACA,CAAC,EAAG,IACJ,EACA,EACAqa,EACA,CAAC,IAAK,GACN,EACA,EACAA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,IAAK,GACN,EACA,EACA,EACAA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,GACL,EACA,EACA,EACAA,EACA,CAAC,EAAG,GACJA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,GACL,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACAA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,GACL,MAGF0H,cAAe,SAA+B9S,EAAQ+S,EAAOC,EAAyBC,EAAMC,EAAUC,GAK5F,IAAI3H,EAAKjU,KAAKiU,GACV4H,EAAW5H,EAAG9L,OACd2T,EAAU7H,EAAG3R,MAIjB,OAAQmZ,GAClB,KAAK,EAIDzb,KAAK+b,OAAI1a,EACTrB,KAAKgc,GAAKJ,EAASF,EAAO,GAE1B,MAEJ,KAAK,EASD,OALA1b,KAAK+b,OAAI1a,EACTrB,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAI1CC,EAASD,EAAO,GAG3B,KAAK,EASD,OALA1b,KAAK+b,OAAI1a,EACTrB,KAAKgc,GAAKJ,EAASF,GAIZ,GAGX,KAAK,EAEL,KAAK,EAEL,KAAK,IAEL,KAAK,IAEL,KAAK,IAEL,KAAK,IAEL,KAAK,IAEL,KAAK,IAEL,KAAK,IAEL,KAAK,IAEL,KAAK,IAEL,KAAK,IAEL,KAAK,IAEL,KAAK,IAEL,KAAK,IAID1b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,EACT,MAEJ,KAAK,EAID/b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,IAAK3L,EAAEzG,SAAS3J,KAAKgc,GAAIvT,EAAQ,SAC1C,MAEJ,KAAK,EAIDzI,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,IAAK3L,EAAEzG,SAAS3J,KAAKgc,GAAIvT,EAAQ,OAC1C,MAEJ,KAAK,EAIDzI,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,IAAK3L,EAAEzG,SAAS3J,KAAKgc,GAAIvT,EAAQ,OAC1C,MAEJ,KAAK,EAIDzI,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,IAAK3L,EAAEzG,SAAS3J,KAAKgc,GAAIvT,EAAQ,OAC1C,MAEJ,KAAK,EAIDzI,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,IAAK3L,EAAEzG,SAAS3J,KAAKgc,GAAIvT,EAAQ,QAC1C,MAEJ,KAAK,GAEL,KAAK,GAEL,KAAK,GAEL,KAAK,GAEL,KAAK,GAEL,KAAK,GAEL,KAAK,GAEL,KAAK,GAEL,KAAK,GAEL,KAAK,GAEL,KAAK,GAEL,KAAK,GAEL,KAAK,GAEL,KAAK,GAEL,KAAK,GAEL,KAAK,GAEL,KAAK,GAEL,KAAK,GAEL,KAAK,GAEL,KAAK,IAEL,KAAK,IAEL,KAAK,IAEL,KAAK,IAEL,KAAK,IAEL,KAAK,IAEL,KAAK,IAEL,KAAK,IAEL,KAAK,IAEL,KAAK,IAEL,KAAK,IAEL,KAAK,IAEL,KAAK,IAEL,KAAK,IAEL,KAAK,IAIDzI,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAKJ,EAASD,GACnB,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAKJ,EAASD,EAAO,GAAKC,EAASD,GACxC,MAEJ,KAAK,GAID1b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,IAAK3L,EAAE1G,WAAW1J,KAAKgc,GAAIvT,GACpC,MAEJ,KAAK,GAIDzI,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,IAAK3L,EAAEvG,cAAc7J,KAAKgc,GAAIL,EAASD,IAChD,MAEJ,KAAK,GAEL,KAAK,IAEL,KAAK,IAEL,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAKJ,EAASD,EAAO,GAC1B,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAElG,iBAAiBlK,KAAKgc,GAAI,iBAAkBL,EAASD,EAAO,GAAIC,EAASD,EAAO,IAChG,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAE3F,uBAAuBzK,KAAKgc,GAAIL,EAASD,EAAO,IAChE,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAE3F,uBAAuBzK,KAAKgc,GAAIL,EAASD,EAAO,GAAIC,EAASD,EAAO,IACpF,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAExF,uBAAuB5K,KAAKgc,IAAI,EAAOL,EAASD,EAAO,GAAIC,EAASD,IACpF,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAExF,uBAAuB5K,KAAKgc,IAAI,EAAML,EAASD,EAAO,GAAIC,EAASD,IACnF,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAErG,gBAAgB/J,KAAKgc,GAAI,mBAAoBL,EAASD,EAAO,IAC7E,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAErG,gBAAgB/J,KAAKgc,GAAI,mBAAoBL,EAASD,EAAO,IAC7E,MAEJ,KAAK,GAEL,KAAK,GAEL,KAAK,IAEL,KAAK,IAEL,KAAK,IAEL,KAAK,IAEL,KAAK,IAEL,KAAK,IAEL,KAAK,IAEL,KAAK,IAID1b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,CAAEJ,EAASD,IACpB,MAEJ,KAAK,GAEL,KAAK,GAEL,KAAK,IAEL,KAAK,IAEL,KAAK,IAEL,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,GAAMJ,EAASD,EAAO,GAAGpgB,KAAKqgB,EAASD,IAAQC,EAASD,EAAO,IACpE,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAErG,gBAAgB/J,KAAKgc,GAAI,kBAAmBL,EAASD,IACrE,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAErG,gBAAgB/J,KAAKgc,GAAI,kBAAmBL,EAASD,IACrE,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAErG,gBAAgB/J,KAAKgc,GAAIL,EAASD,EAAO,GAAIC,EAASD,IACtE,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAE9F,iBAAiBtK,KAAKgc,GAAIL,EAASD,IACnD,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAE9F,iBAAiBtK,KAAKgc,GAAIL,EAASD,EAAO,IAC1D,MAEJ,KAAK,GAID1b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,YACT,MAEJ,KAAK,GAID/b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,cACT,MAEJ,KAAK,GAID/b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,YACT,MAEJ,KAAK,GAID/b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,aACT,MAEJ,KAAK,GAID/b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,aACT,MAEJ,KAAK,GAID/b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,aACT,MAEJ,KAAK,GAID/b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAE7F,eAAevK,KAAKgc,GAAIL,EAASD,EAAO,GAAIC,EAASD,IACrE,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAElG,iBAAiBlK,KAAKgc,GAAI,MAAOL,EAASD,EAAO,GAAIC,EAASD,IAC9E,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAElG,iBAAiBlK,KAAKgc,GAAI,MAAOL,EAASD,EAAO,GAAIC,EAASD,IAC9E,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAElG,iBAAiBlK,KAAKgc,GAAI,MAAOL,EAASD,EAAO,GAAIC,EAASD,IAC9E,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAElG,iBAAiBlK,KAAKgc,GAAI,MAAOL,EAASD,EAAO,GAAIC,EAASD,IAC9E,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAElG,iBAAiBlK,KAAKgc,GAAI,MAAOL,EAASD,EAAO,GAAIC,EAASD,IAC9E,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAElG,iBAAiBlK,KAAKgc,GAAI,mBAAoBL,EAASD,EAAO,GAAIC,EAASD,IAC3F,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAElG,iBAAiBlK,KAAKgc,GAAI,oBAAqBL,EAASD,EAAO,GAAIC,EAASD,IAC5F,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAElG,iBAAiBlK,KAAKgc,GAAI,eAAgBL,EAASD,EAAO,GAAIC,EAASD,IACvF,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAElG,iBAAiBlK,KAAKgc,GAAI,eAAgBL,EAASD,EAAO,GAAIC,EAASD,IACvF,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAElG,iBAAiBlK,KAAKgc,GAAI,gBAAiBL,EAASD,EAAO,GAAIC,EAASD,IACxF,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAElG,iBAAiBlK,KAAKgc,GAAI,gBAAiBL,EAASD,EAAO,GAAIC,EAASD,IACxF,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAElG,iBAAiBlK,KAAKgc,GAAI,eAAgBL,EAASD,EAAO,GAAIC,EAASD,IACvF,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAElG,iBAAiBlK,KAAKgc,GAAI,gBAAiBL,EAASD,EAAO,GAAIC,EAASD,IACxF,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAElG,iBAAiBlK,KAAKgc,GAAI,aAAcL,EAASD,EAAO,GAAIC,EAASD,IACrF,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAElG,iBAAiBlK,KAAKgc,GAAI,aAAcL,EAASD,EAAO,GAAIC,EAASD,IACrF,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAElG,iBAAiBlK,KAAKgc,GAAI,YAAaL,EAASD,EAAO,GAAIC,EAASD,IACpF,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAElG,iBAAiBlK,KAAKgc,GAAI,aAAcL,EAASD,EAAO,GAAIC,EAASD,IACrF,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAElG,iBAAiBlK,KAAKgc,GAAI,YAAaL,EAASD,EAAO,GAAIC,EAASD,IACpF,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAEtF,sBAAsB9K,KAAKgc,GAAIL,EAASD,EAAO,GAAIC,EAASD,EAAO,GAAIC,EAASD,IAChG,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAElF,qBAAqBlL,KAAKgc,GAAIL,EAASD,EAAO,GAAIC,EAASD,EAAO,GAAIC,EAASD,IAC/F,MAEJ,KAAK,GAID1b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,OAAI,EACT,MAEJ,KAAK,GAID/b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,MACT,MAEJ,KAAK,GAID/b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,MACT,MAEJ,KAAK,GAID/b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,MACT,MAEJ,KAAK,GAID/b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,MACT,MAEJ,KAAK,GAID/b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,MACT,MAEJ,KAAK,GAID/b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,YACT,MAEJ,KAAK,GAID/b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,aACT,MAEJ,KAAK,GAID/b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,aACT,MAEJ,KAAK,GAID/b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,aACT,MAEJ,KAAK,GAID/b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,YACT,MAEJ,KAAK,GAID/b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAElG,iBAAiBlK,KAAKgc,GAAI,QAASL,EAASD,EAAO,GAAIC,EAASD,IAChF,MAEJ,KAAK,GAID1b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,IAAK3L,EAAEhF,mBAAmBpL,KAAKgc,GAAIL,EAASD,IACrD,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAErE,YAAY/L,KAAKgc,GAAIL,EAASD,EAAO,IACrD,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAErE,YAAY/L,KAAKgc,GAAIL,EAASD,EAAO,GAAIC,EAASD,EAAO,IACzE,MAEJ,KAAK,GAID1b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,IAAK3L,EAAEzE,sBAAsB3L,KAAKgc,GAAI,GAAI,GAAI,CAACL,EAASD,IAAQ,IACzE,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAEzE,sBAAsB3L,KAAKgc,GAAIL,EAASD,GAAMlQ,cAAemQ,EAASD,GAAMjQ,cAAe,CAACkQ,EAASD,EAAO,MAAOC,EAASD,GAAM5S,aAAc6S,EAASD,GAAM9P,iBAC/K,MAEJ,KAAK,GAID5L,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,IAAK3L,EAAEzE,sBAAsB3L,KAAKgc,GAAI,CAACL,EAASD,IAAQ,GAAI,GAAI,IACzE,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAEzE,sBAAsB3L,KAAKgc,GAAI,CAACL,EAASD,EAAO,MAAOC,EAASD,GAAMlQ,eAAgBmQ,EAASD,GAAMjQ,cAAekQ,EAASD,GAAM5S,YAAa6S,EAASD,GAAM9P,iBAC/K,MAEJ,KAAK,GAID5L,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,IAAK3L,EAAEzE,sBAAsB3L,KAAKgc,GAAI,GAAI,CAACL,EAASD,IAAQ,GAAI,IACzE,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAEzE,sBAAsB3L,KAAKgc,GAAIL,EAASD,GAAMlQ,cAAe,CAACmQ,EAASD,EAAO,MAAOC,EAASD,GAAMjQ,eAAgBkQ,EAASD,GAAM5S,YAAa6S,EAASD,GAAM9P,iBAC/K,MAEJ,KAAK,GAID5L,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,IAAK3L,EAAEzE,sBAAsB3L,KAAKgc,GAAI,GAAI,GAAI,GAAI,CAACL,EAASD,KACrE,MAEJ,KAAK,GAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAEzE,sBAAsB3L,KAAKgc,GAAIL,EAASD,GAAMlQ,cAAemQ,EAASD,GAAMjQ,cAAekQ,EAASD,GAAM5S,YAAa,CAAC6S,EAASD,EAAO,MAAOC,EAASD,GAAM9P,kBAC9K,MAEJ,KAAK,GAID5L,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAEpE,eAAehM,KAAKgc,GAAIL,EAASD,EAAO,GAAIC,EAASD,IACrE,MAEJ,KAAK,IAID1b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,OACT,MAEJ,KAAK,IAID/b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,IAAK3L,EAAE9E,oBAAoBtL,KAAKgc,GAAIL,EAASD,IACtD,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAEjE,qBAAqBnM,KAAKgc,GAAIL,EAASD,EAAO,GAAIC,EAASD,EAAO,GAAIC,EAASD,EAAO,IACtG,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAEjE,qBAAqBnM,KAAKgc,GAAIL,EAASD,EAAO,QAAIra,EAAWsa,EAASD,EAAO,IAC7F,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAEjE,qBAAqBnM,KAAKgc,GAAIL,EAASD,EAAO,GAAIC,EAASD,IAC3E,MAEJ,KAAK,IAID1b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,SACT,MAEJ,KAAK,IAID/b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,QACT,MAEJ,KAAK,IAEL,KAAK,IAEL,KAAK,IAEL,KAAK,IAID/b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,GAAMJ,EAASD,EAAO,GAAGpgB,KAAKqgB,EAASD,IAAQC,EAASD,EAAO,IACpE,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAE9D,kBAAkBtM,KAAKgc,GAAIL,EAASD,EAAO,GAAIC,EAASD,EAAO,IAC/E,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAE7E,oBAAoBvL,KAAKgc,GAAI,CAACL,EAASD,EAAO,MAAOC,EAASD,GAAMlQ,eAAgBmQ,EAASD,GAAMjQ,eACnH,MAEJ,KAAK,IAIDzL,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,IAAK3L,EAAE7E,oBAAoBvL,KAAKgc,GAAI,CAACL,EAASD,IAAQ,IAC/D,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAE7E,oBAAoBvL,KAAKgc,GAAIL,EAASD,GAAMlQ,cAAe,CAACmQ,EAASD,EAAO,MAAOC,EAASD,GAAMjQ,gBAClH,MAEJ,KAAK,IAIDzL,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,IAAK3L,EAAE7E,oBAAoBvL,KAAKgc,GAAI,GAAI,CAACL,EAASD,KAC3D,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAEvE,cAAc7L,KAAKgc,QAAI3a,EAAWsa,EAASD,EAAO,IAClE,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAEvE,cAAc7L,KAAKgc,GAAIL,EAASD,EAAO,GAAIC,EAASD,EAAO,IAC3E,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAEvE,cAAc7L,KAAKgc,QAAI3a,EAAWsa,EAASD,EAAO,IAClE,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAEvE,cAAc7L,KAAKgc,GAAIL,EAASD,EAAO,GAAIC,EAASD,EAAO,IAC3E,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAEvE,cAAc7L,KAAKgc,GAAIL,EAASD,IAChD,MAEJ,KAAK,IAID1b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,IAAK3L,EAAEtE,WAAW9L,KAAKgc,GAAIL,EAASD,IAC7C,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAEtE,WAAW9L,KAAKgc,GAAIL,EAASD,EAAO,GAAIC,EAASD,IACjE,MAEJ,KAAK,IAID1b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,QACT,MAEJ,KAAK,IAID/b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,SACT,MAEJ,KAAK,IAID/b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAE7D,kBAAkBvM,KAAKgc,GAAIL,EAASD,EAAO,GAAIC,EAASD,IACxE,MAEJ,KAAK,IAID1b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,IAAK3L,EAAElH,qBAAqBlJ,KAAKgc,GAAIL,EAASD,IACvD,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAE3D,gBAAgBzM,KAAKgc,GAAIL,EAASD,EAAO,GAAIC,EAASD,EAAO,IAC7E,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAE3D,gBAAgBzM,KAAKgc,GAAIL,EAASD,EAAO,IACzD,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAE1D,mBAAmB1M,KAAKgc,GAAIL,EAASD,EAAO,GAAIC,EAASD,EAAO,GAAIC,EAASD,EAAO,GAAG/O,UACvG,MAEJ,KAAK,IAID3M,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAE1D,mBAAmB1M,KAAKgc,GAAIL,EAASD,EAAO,IAC5D,MAEJ,KAAK,IAID1b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,IAAK3L,EAAEvD,QAAQ7M,KAAKgc,IAC7B,MAEJ,KAAK,IAIDhc,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAEvD,QAAQ7M,KAAKgc,GAAIL,EAASD,IAC1C,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAEvD,QAAQ7M,KAAKgc,QAAI3a,EAAWsa,EAASD,IACrD,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAEvD,QAAQ7M,KAAKgc,GAAIL,EAASD,EAAO,GAAIC,EAASD,IAC9D,MAEJ,KAAK,IAID1b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,GAAMJ,EAASD,GAAM/O,UAAW,EAAOgP,EAASD,IACrD,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,GAAMJ,EAASD,EAAO,GAAG/O,UAAW,EAAMgP,EAASD,EAAO,IAC/D,MAEJ,KAAK,IAEL,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAExD,qBAAqB5M,KAAKgc,GAAIL,EAASD,EAAO,GAAIC,EAASD,IAC3E,MAEJ,KAAK,IAID1b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,IAAK3L,EAAExD,qBAAqB5M,KAAKgc,GAAIL,EAASD,IACvD,MAEJ,KAAK,IAID1b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,IAAK3L,EAAEtD,SAAS9M,KAAKgc,GAAIL,EAASD,IAC3C,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAEtD,SAAS9M,KAAKgc,GAAIL,EAASD,EAAO,GAAIC,EAASD,IAC/D,MAEJ,KAAK,IAID1b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,IAAK3L,EAAErD,0BAA0B/M,KAAKgc,GAAIL,EAASD,IAC5D,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAErD,0BAA0B/M,KAAKgc,GAAIL,EAASD,EAAO,GAAIC,EAASD,IAChF,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAEpD,wBAAwBhN,KAAKgc,IAC7C,MAEJ,KAAK,IAIDhc,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAEpD,wBAAwBhN,KAAKgc,QAAI3a,EAAWsa,EAASD,EAAO,IAC5E,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAEpD,wBAAwBhN,KAAKgc,GAAIL,EAASD,EAAO,IACjE,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAEpD,wBAAwBhN,KAAKgc,GAAIL,EAASD,EAAO,GAAIC,EAASD,EAAO,IACrF,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAEnD,2BAA2BjN,KAAKgc,IAChD,MAEJ,KAAK,IAIDhc,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAEnD,2BAA2BjN,KAAKgc,QAAI3a,EAAWsa,EAASD,EAAO,GAAIC,EAASD,EAAO,GAAG/O,UACtG,MAEJ,KAAK,IAID3M,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAEnD,2BAA2BjN,KAAKgc,GAAIL,EAASD,EAAO,IACpE,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAEnD,2BAA2BjN,KAAKgc,GAAIL,EAASD,EAAO,GAAIC,EAASD,EAAO,GAAIC,EAASD,EAAO,GAAG/O,UAC/G,MAEJ,KAAK,IAID3M,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAKJ,EAASD,EAAO,GAC1B,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAKJ,EAASD,GAAMO,SAASN,EAASD,EAAO,IAClD,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAE3C,cAAczN,KAAKgc,GAAIL,EAASD,EAAO,GAAIC,EAASD,IACpE,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAE1C,iBAAiB1N,KAAKgc,GAAIL,EAASD,IACnD,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAEzC,kBAAkB3N,KAAKgc,GAAI,IAC3C,MAEJ,KAAK,IAIDhc,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAEzC,kBAAkB3N,KAAKgc,GAAIL,EAASD,EAAO,IAC3D,MAEJ,KAAK,IAID1b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,EAAI,IAAK3L,EAAEvC,KAAK7N,KAAKgc,IAC1B,MAEJ,KAAK,IAIDhc,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAExC,oBAAoB5N,KAAKgc,GAAIL,EAASD,EAAO,IAC7D,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAEhD,YAAYpN,KAAKgc,GAAIL,EAASD,EAAO,GAAIC,EAASD,IAClE,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAEhD,YAAYpN,KAAKgc,GAAIL,EAASD,EAAO,GAAIC,EAASD,EAAO,GAAIC,EAASD,IACtF,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAE5C,gBAAgBxN,KAAKgc,GAAIL,EAASD,EAAO,GAAIC,EAASD,IACtE,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAEnC,UAAUjO,KAAKgc,GAAIL,EAASD,EAAO,GAAIC,EAASD,IAChE,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAElC,YAAYlO,KAAKgc,GAAIL,EAASD,EAAO,GAAIC,EAASD,EAAO,IACzE,MAEJ,KAAK,IAEL,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAEtC,QAAQ9N,KAAKgc,GAAIL,EAASD,EAAO,GAAIC,EAASD,EAAO,QAAIra,EAAWsa,EAASD,IAC7F,MAEJ,KAAK,IAEL,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAEtC,QAAQ9N,KAAKgc,GAAIL,EAASD,EAAO,GAAIC,EAASD,EAAO,GAAIC,EAASD,EAAO,GAAIC,EAASD,IACtG,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAEjC,cAAcnO,KAAKgc,GAAIL,EAASD,EAAO,IACvD,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAE/B,kBAAkBrO,KAAKgc,IACvC,MAEJ,KAAK,IAIDhc,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAE9B,eAAetO,KAAKgc,IACpC,MAEJ,KAAK,IAIDhc,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAE7B,gBAAgBvO,KAAKgc,IACrC,MAEJ,KAAK,IAIDhc,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAE7B,gBAAgBvO,KAAKgc,GAAIL,EAASD,EAAO,IACzD,MAEJ,KAAK,IAID1b,KAAKgc,GAAKJ,EAASF,GAInB1b,KAAK+b,GAAMD,EAAQI,oBAAoBP,EAASD,IAAQC,EAASD,IACjE,MAEJ,KAAK,IAID1b,KAAKgc,GAAKH,EAASzB,oBAAoBsB,EAAO,EAAGA,GAIjD1b,KAAK+b,EAAI,IAAK3L,EAAE5B,mBAAmBxO,KAAKgc,GAAIL,EAASD,EAAO,GAAIC,EAASD,EAAO,GAAIC,EAASD,MAKjGP,MAp+EQ,SAAY3hB,GAQR,IAPA,IAAIua,EAAK,GACLnL,EAAIpP,EAAE2iB,IACNC,EAAI5iB,EAAEmhB,OACNvK,EAAI5W,EAAEoC,KACNa,EAAIjD,EAAE+E,MACN0S,EAAIzX,EAAE6iB,KACNhe,EAAI7E,EAAE8iB,KACDxhB,EAAI,EAAG2I,EAAImF,EAAEhP,OAAQkB,EAAI2I,EAAG3I,IAAK,CAGtC,IAFA,IAAIyU,EAAI3G,EAAE9N,GACNyhB,EAAI,GACC/gB,EAAI,EAAGA,EAAI+T,EAAG/T,IAAK,CACxB,IAAIghB,EAAIJ,EAAE5e,QACV,OAAQ4S,EAAE5S,SACV,KAAK,EACD+e,EAAEC,GAAK,CACHvL,EAAEzT,QACFa,EAAEb,SAEN,MAEJ,KAAK,EACD+e,EAAEC,GAAK/f,EAAEe,QACT,MAEJ,QAEI+e,EAAEC,GAAK,CACH,IAIZzI,EAAGzY,KAAKihB,GAEZ,OAAOxI,EAk8EZ0I,CAAG,CACRN,IAAKrI,EAAE,CACP,GACA,EACA,GACAta,EACA,CAAC,EAAG,GACJ,GACAA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,EAAG,IACJ,EACA,EACAA,EACA,CAAC,EAAG,GACJ,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,EACAA,EACA,CAAC,EAAG,GACJ,GACA,GACA,EACA,GACA,EACA,GACA,GACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,EACA,EACA,GACA,GACA,EACA,EACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,GACA,EACA,GACA,GACA,GACA,GACA,GACAqa,EACA,CAAC,GAAI,GACLra,EACA,CAAC,EAAG,GACJ,GACA,EACA,EACA,GACA,GACA,GACAA,EACA,CAAC,EAAG,GACJ,GACA,EACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACAqa,EACA,CAAC,GAAI,GACLra,EACA,CAAC,EAAG,GACJ,GACA,GACA,EACA,EACA,EACAA,EACA,CAAC,EAAG,GACJ,GACA,EACAqa,EACA,CAAC,EAAG,GACJ,GACAA,EACA,CAAC,IAAK,GACN,EACAra,EACA,CAAC,EAAG,GACJqa,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,GACL,EACA,EACA,GACA,EACAA,EACA,CAAC,EAAG,GACJra,EACA,CAAC,EAAG,GACJ,EACA,GACA,EACA,EACA,EACA,GACAA,EACA,CAAC,EAAG,IACJ,GACA,GACA,GACA,GACAqa,EACA,CAAC,GAAI,GACLA,EACA,CAAC,EAAG,GACJra,EACA,CAAC,EAAG,GACJ,GACA,GACA,GACAqa,EACA,CAAC,GAAI,GACL,EACA,GACA,GACA,GACA,GACAra,EACA,CAAC,GAAI,GACL,GACA,GACA,GACA,GACAA,EACA,CAAC,GAAI,GACL,EACA,EACA,GACA,EACA,GACA,EACA,GACAA,EACA,CAAC,GAAI,GACL,EACA,GACAqa,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,GACL,GACA,EACA,EACA,EACA,EACA,GACAA,EACA,CAAC,GAAI,GACL,EACAA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,IAAK,GACN,EACA,EACA,EACAA,EACA,CAAC,GAAI,GACL,EACA,GACA,GACA,EACA,GACAA,EACA,CAAC,IAAK,GACN,GACA,GACA,GACA,GACAra,EACA,CAAC,GAAI,GACL,GACA,GACA,GACAqa,EACA,CAAC,IAAK,GACNA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,GACL,EACA,EACA,EACA,GACA,GACAA,EACA,CAAC,GAAI,GACL,GACA,GACA,EACAA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,GAAI,GACL,EACA,GACA,EACAA,EACA,CAAC,IAAK,GACNra,EACA,CAAC,GAAI,GACL,GACA,GACA,GACAqa,EACA,CAAC,GAAI,GACL,EACA,GACAA,EACA,CAAC,GAAI,GACL,GACA,EACA,GACAA,EACA,CAAC,GAAI,GACL,GACA,EACAA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,GACL,EACA,IAEA8G,OAAQ7G,EAAE,CACV,EACAta,EACA,CAAC,GAAI,GAAI,GACT,GACA,IACA,IACAA,EACA,CAAC,IAAK,EAAG,GACT,IACA,IACA,IACA,IACA,IACA,IACA,EACAqa,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,GACL,IACA,IACA,EACA,GACA,GACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,EACA,EACA,EACA,EACAA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,KACL,GACA,GACA,GACAA,EACA,CAAC,EAAG,GACJ,EACA,GACA,GACA,GACA,IACA,EACA,GACA,EACA,GACA,GACA,IACAA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,GACL,GACA,GACA,IACA,IACA,IACA,EACA,GACA,GACA,GACAA,EACA,CAAC,IAAK,GACN,GACAA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,IACLra,EACA,CAAC,IAAK,EAAG,GACT,IACA,IACA,GACA,GACA,IACA,IACAqa,EACA,CAAC,GAAI,IACL,EACAra,EACA,CAAC,EAAG,EAAG,GACP,GACAA,EACA,CAAC,GAAI,EAAG,GACR,GACA,GACA,GACAA,EACA,CAAC,GAAI,EAAG,GACRA,EACA,CAAC,GAAI,GAAI,GACT,IACAqa,EACA,CAAC,GAAI,GACLra,EACA,CAAC,GAAI,GAAI,GACTqa,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,IACL,GACA,GACA,GACAra,EACA,CAAC,GAAI,EAAG,GACRqa,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,IAAK,GACNra,EACA,CAAC,IAAK,EAAG,GACTqa,EACA,CAAC,IAAK,GACNA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,IAAK,GACN,EACAA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,IAAK,IACN,IACA,EACAA,EACA,CAAC,IAAK,IACN,IACA,IACA,IACAA,EACA,CAAC,IAAK,GACN,EACAA,EACA,CAAC,IAAK,IACN,GACAA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,IAAK,GACN,IACA,IACAA,EACA,CAAC,IAAK,GACN,GACA,GACAA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,IACL,EACA,GACA,EACA,GACA,GACAA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,IAAK,IACN,IACA,EACA,EACAra,EACA,CAAC,EAAG,EAAG,GACPA,EACA,CAAC,GAAI,GAAI,GACT,GACAA,EACA,CAAC,GAAI,GAAI,GACT,IACAqa,EACA,CAAC,GAAI,GACL,GACA,GACA,GACA,GACA,GACAra,EACA,CAAC,EAAG,GAAI,GACRqa,EACA,CAAC,GAAI,IACL,GACA,GACA,GACAA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,GAAI,IACL,GACAA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,IAAK,GACN,GACA,GACAA,EACA,CAAC,EAAG,GACJA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,IAAK,IACNra,EACA,CAAC,GAAI,EAAG,GACRqa,EACA,CAAC,IAAK,IACN,GACAA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,GACN,IACAA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,IAAK,GACN,EACAA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,IAAK,GACN,GACA,GACAA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,GAAI,GACL,GACA,GACAA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,KAAM,GACP,EACAA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,IACN,GACAA,EACA,CAAC,KAAM,GACPra,EACA,CAAC,EAAG,GACJqa,EACA,CAAC,IAAK,GACNA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,IAAK,GACN,GACA,GACA,GACA,GACAA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,IAAK,IACN,IACAA,EACA,CAAC,IAAK,GACN,EACA,EACA,EACA,EACAA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,KAAM,GACP,IACA,IACAA,EACA,CAAC,IAAK,IACN,EACA,GACAA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,GACN,GACAA,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,IACL,EACAA,EACA,CAAC,GAAI,IACLra,EACA,CAAC,GAAI,GAAI,GACT,GACA,GACA,GACA,GACAqa,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,GAAI,IACL,EACA,EACA,EACAA,EACA,CAAC,KAAM,GACPA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,KACLA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,IAAK,IACN,GACAA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,IAAK,KACNA,EACA,CAAC,GAAI,IACL,GACAA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,KAAM,IACP,IACA,GACA,EACA,GACAra,EACA,CAAC,GAAI,GAAI,GACTqa,EACA,CAAC,GAAI,GACLA,EACA,CAAC,KAAM,GACPA,EACA,CAAC,KAAM,GACP,IACAA,EACA,CAAC,EAAG,GACJA,EACA,CAAC,KAAM,GACPA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,KAAM,GACPA,EACA,CAAC,KAAM,GACPA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,KAAM,GACPA,EACA,CAAC,KAAM,GACPA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,KAAM,IACP,EACA,GACAA,EACA,CAAC,KAAM,GACP,EACA,EACAA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,IAAK,IACN,EACA,EACAA,EACA,CAAC,IAAK,GACN,GACAA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,KAAM,GACPA,EACA,CAAC,IAAK,IACN,IACAA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,GAAI,KACLA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,GAAI,IACL,EACA,EACAA,EACA,CAAC,KAAM,IACPra,EACA,CAAC,GAAI,EAAG,GACRqa,EACA,CAAC,IAAK,GACNA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,GAAI,KACLA,EACA,CAAC,KAAM,GACPA,EACA,CAAC,IAAK,OAENjY,KAAMkY,EAAE,CACRta,EACA,CAAC,EAAG,IACJA,EACA,CAAC,EAAG,IACJ,EACAqa,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,IACLra,EACA,CAAC,EAAG,IACJqa,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,KACLA,EACA,CAAC,EAAG,GACJA,EACA,CAAC,EAAG,GACJA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,IACNra,EACA,CAAC,EAAG,IACJA,EACA,CAAC,EAAG,IACJqa,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,IACNra,EACA,CAAC,EAAG,IACJqa,EACA,CAAC,IAAK,IACNA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,IACNra,EACA,CAAC,EAAG,KACJqa,EACA,CAAC,IAAK,IACNA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,KAAM,GACPA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,KACLA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,KAAM,GACPA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,IACNra,EACA,CAAC,EAAG,KACJqa,EACA,CAAC,IAAK,IACNA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,GAAI,KACLA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,GAAI,KACLA,EACA,CAAC,IAAK,MAENtV,MAAOuV,EAAE,CACT,EACAta,EACA,CAAC,EAAG,EAAG,GACP,GACA,GACA,GACA,GACA,GACA,EACAA,EACA,CAAC,EAAG,EAAG,GACPqa,EACA,CAAC,GAAI,GACL,GACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACAA,EACA,CAAC,GAAI,GACL,GACAA,EACA,CAAC,EAAG,GACJ,GACAA,EACA,CAAC,EAAG,GACJ,GACAA,EACA,CAAC,EAAG,GACJ,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IACA,GACA,GACA,GACA,GACA,GACAra,EACA,CAAC,IAAK,GAAI,GACV,IACA,IACA,GACA,GACA,GACA,GACA,GACA,GACA,IACAqa,EACA,CAAC,GAAI,IACL,IACA,IACA,IACA,IACAA,EACA,CAAC,GAAI,GACL,IACA,IACA,IACA,IACA,IACAra,EACA,CAAC,IAAK,EAAG,GACT,GACA,IACA,IACA,GACA,GACAqa,EACA,CAAC,GAAI,GACL,IACAA,EACA,CAAC,GAAI,IACL,IACA,IACA,IACAA,EACA,CAAC,GAAI,GACL,IACA,IACA,IACA,IACA,IACAA,EACA,CAAC,IAAK,GACN,IACAA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,EAAG,GACJ,IACAA,EACA,CAAC,EAAG,GACJ,GACA,IACA,IACA,IACAA,EACA,CAAC,IAAK,GACN,IACAA,EACA,CAAC,GAAI,GACL,IACAA,EACA,CAAC,IAAK,GACN,IACAA,EACA,CAAC,IAAK,IACN,IACA,IACA,IACAA,EACA,CAAC,GAAI,GACL,IACA,GACAA,EACA,CAAC,EAAG,GACJ,IACAA,EACA,CAAC,EAAG,GACJ,IACA,GACA,IACAA,EACA,CAAC,EAAG,GACJ,IACA,GACA,IACAA,EACA,CAAC,GAAI,IACL,IACA,IACAA,EACA,CAAC,GAAI,GACL,IACA,GACA,GACA,IACAA,EACA,CAAC,IAAK,IACN,IACAA,EACA,CAAC,IAAK,GACN,GACA,GACAA,EACA,CAAC,IAAK,IACN,IACAA,EACA,CAAC,GAAI,IACL,IACAra,EACA,CAAC,IAAK,EAAG,GACT,IACAqa,EACA,CAAC,IAAK,IACN,IACA,GACA,IACA,GACA,IACA,IACA,IACAA,EACA,CAAC,IAAK,GACN,GACA,IACAA,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,GAAI,GACL,IACAA,EACA,CAAC,GAAI,IACL,IACA,IACA,IACAA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,IACN,IACAA,EACA,CAAC,IAAK,IACN,IACAA,EACA,CAAC,GAAI,IACL,IACA,IACA,IACA,IACAA,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,GAAI,GACL,IACAA,EACA,CAAC,GAAI,GACL,IACAA,EACA,CAAC,GAAI,GACL,IACAA,EACA,CAAC,EAAG,GACJ,IACAA,EACA,CAAC,EAAG,GACJ,IACAA,EACA,CAAC,IAAK,IACN,IACAra,EACA,CAAC,IAAK,EAAG,GACTqa,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,IAAK,IACN,IACAA,EACA,CAAC,IAAK,IACN,IACAA,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,GAAI,IACL,IACA,IACAA,EACA,CAAC,IAAK,GACN,IACAA,EACA,CAAC,IAAK,GACN,IACA,GACA,GACA,IACA,GACAA,EACA,CAAC,GAAI,GACL,GACA,GACA,IACA,IACA,IACA,IACA,IACAA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,GACN,IACA,GACA,IACAA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,IAAK,IACN,IACAA,EACA,CAAC,GAAI,GACL,IACA,IACAA,EACA,CAAC,GAAI,GACL,IACAA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,IAAK,IACN,IACAA,EACA,CAAC,IAAK,IACN,IACA,IACA,IACAA,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,IAAK,IACN,IACAA,EACA,CAAC,IAAK,GACN,IACA,IACA,IACAA,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,IAAK,IACN,IACAA,EACA,CAAC,IAAK,IACN,IACAA,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,IAAK,IACN,IACAA,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,IAAK,IACN,IACAA,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,GAAI,KAELwI,KAAMvI,EAAE,CACRta,EACA,CAAC,EAAG,IACJA,EACA,CAAC,EAAG,GACJqa,EACA,CAAC,GAAI,KACLA,EACA,CAAC,GAAI,GACL,EACAA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,EAAG,GACJA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,GACLra,EACA,CAAC,EAAG,IACJqa,EACA,CAAC,IAAK,IACNA,EACA,CAAC,GAAI,IACLra,EACA,CAAC,EAAG,IACJqa,EACA,CAAC,GAAI,GACLA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,EAAG,IACJA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,IAAK,GACNra,EACA,CAAC,EAAG,KACJqa,EACA,CAAC,IAAK,KACNra,EACA,CAAC,EAAG,KACJqa,EACA,CAAC,IAAK,GACNA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,KAAM,IACPA,EACA,CAAC,IAAK,KACNra,EACA,CAAC,EAAG,IACJqa,EACA,CAAC,IAAK,IACNra,EACA,CAAC,EAAG,OAEJ8iB,KAAMxI,EAAE,CACR,EACAta,EACA,CAAC,GAAI,GAAI,GACT,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACAqa,EACA,CAAC,GAAI,IACL,GACA,GACA,GACA,GACAra,EACA,CAAC,GAAI,GACLqa,EACA,CAAC,GAAI,IACLra,EACA,CAAC,GAAI,GACLqa,EACA,CAAC,GAAI,IACLra,EACA,CAAC,GAAI,GACLqa,EACA,CAAC,GAAI,IACLra,EACA,CAAC,GAAI,GACLqa,EACA,CAAC,GAAI,IACL,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IACA,GACAra,EACA,CAAC,IAAK,GACNA,EACA,CAAC,IAAK,GACN,GACA,IACA,GACA,GACA,GACA,GACAA,EACA,CAAC,IAAK,GACN,GACAA,EACA,CAAC,IAAK,IACNqa,EACA,CAAC,GAAI,IACL,GACAra,EACA,CAAC,IAAK,GACN,GACAA,EACA,CAAC,IAAK,IACN,IACAA,EACA,CAAC,GAAI,EAAG,GACR,GACA,GACAA,EACA,CAAC,IAAK,EAAG,GACT,IACA,GACA,GACA,GACAqa,EACA,CAAC,GAAI,GACL,IACA,GACA,IACAA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,IAAK,IACN,IACA,IACAra,EACA,CAAC,IAAK,EAAG,GACTqa,EACA,CAAC,IAAK,GACN,GACA,IACA,GACAra,EACA,CAAC,IAAK,GACN,IACA,IACAqa,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,GAAI,IACLra,EACA,CAAC,IAAK,GACN,GACA,IACA,GACA,IACAqa,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,GACLra,EACA,CAAC,IAAK,GACNqa,EACA,CAAC,GAAI,IACLra,EACA,CAAC,IAAK,GACNqa,EACA,CAAC,GAAI,IACL,IACA,IACA,IACA,IACA,IACA,GACAA,EACA,CAAC,IAAK,IACNra,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,IAAK,GAAI,GACVA,EACA,CAAC,GAAI,GACL,IACAA,EACA,CAAC,GAAI,GACL,IACA,IACA,GACA,IACA,GACA,IACAA,EACA,CAAC,GAAI,IACL,IACA,IACA,IACAA,EACA,CAAC,GAAI,IACL,IACAqa,EACA,CAAC,IAAK,IACNA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,GAAI,IACLra,EACA,CAAC,GAAI,GACL,IACA,GACAA,EACA,CAAC,GAAI,GACL,IACAA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,GAAI,IACLqa,EACA,CAAC,GAAI,IACLA,EACA,CAAC,IAAK,IACNra,EACA,CAAC,GAAI,GACL,IACAA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,GACL,IACAA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,IACL,IACA,IACA,GACA,GACAA,EACA,CAAC,GAAI,GACL,IACA,IACAA,EACA,CAAC,GAAI,GACL,IACA,IACAA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,IACL,IACA,IACAA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,GACL,IACA,IACAA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,GACL,IACA,GACA,GACA,IACA,IACAA,EACA,CAAC,GAAI,IACLqa,EACA,CAAC,IAAK,GACN,IACAA,EACA,CAAC,IAAK,IACN,GACA,GACAra,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,GAAI,IACLqa,EACA,CAAC,IAAK,IACN,IACA,IACA,IACA,IACA,IACA,IACAA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,IACL,IACA,GACA,IACA,IACAA,EACA,CAAC,GAAI,GACL,IACAA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,IAAK,GACN,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,IACAA,EACA,CAAC,IAAK,IACN,IACA,IACA,IACAA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,GAAI,IACL,IACA,IACA,IACA,IACAA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,GAAI,IACL,GACAA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,GAAI,IACL,IACA,IACA,IACA,IACA,IACA,IACA,GACAA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,GAAI,KACLA,EACA,CAAC,IAAK,IACN,IACAA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,IAAK,IACN,IACAA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,IAAK,IACN,IACA,IACA,IACAA,EACA,CAAC,GAAI,IACL,IACA,IACA,IACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACAA,EACA,CAAC,GAAI,IACL,IACA,IACAA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,KAAM,GACP,IACAA,EACA,CAAC,KAAM,GACP,IACAA,EACA,CAAC,GAAI,IACL,IACA,IACAra,EACA,CAAC,GAAI,GACL,IACA,GACA,IACA,IACA,IACA,IACA,IACAA,EACA,CAAC,GAAI,GACL,IACAA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,GACL,IACAA,EACA,CAAC,GAAI,GACLqa,EACA,CAAC,IAAK,IACN,IACA,IACA,IACA,IACAA,EACA,CAAC,IAAK,GACNA,EACA,CAAC,IAAK,IACNra,EACA,CAAC,GAAI,GACL,IACAA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,IACL,IACA,IACA,GACA,GACAA,EACA,CAAC,GAAI,GACL,IACA,IACAA,EACA,CAAC,GAAI,GACL,IACA,IACAA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,GACL,IACA,IACAA,EACA,CAAC,GAAI,GACL,IACA,IACAA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,IACL,IACA,IACAA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,IACL,IACA,IACAA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,IACL,IACA,IACAA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,IACL,IACA,IACAA,EACA,CAAC,GAAI,GACLA,EACA,CAAC,GAAI,GACL,IACA,IACAA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,GACL,IACA,IACAA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,GACL,IACA,GACA,GACA,IACA,IACAA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,GAAI,GACL,IACA,GACA,GACA,IACA,IACAA,EACA,CAAC,GAAI,IACLqa,EACA,CAAC,IAAK,IACN,IACA,IACA,IACA,IACA,IACA,IACA,IACAA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,GAAI,IACL,IACA,IACA,IACA,IACA,IACA,IACAA,EACA,CAAC,IAAK,IACN,IACAA,EACA,CAAC,IAAK,IACN,IACA,IACA,IACAA,EACA,CAAC,IAAK,IACNA,EACA,CAAC,GAAI,IACLA,EACA,CAAC,IAAK,IACN,IACAA,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,GAAI,IACL,IACA,IACAra,EACA,CAAC,IAAK,IACN,IACAA,EACA,CAAC,IAAK,GACN,IACA,IACAqa,EACA,CAAC,IAAK,IACN,IACAA,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,GAAI,IACL,IACAA,EACA,CAAC,IAAK,QAGR6I,eA5+IQ,SAAaljB,GAIT,IAHA,IAAIua,EAAK,GACLnL,EAAIpP,EAAEyZ,IACN5U,EAAI7E,EAAE8iB,KACDxhB,EAAI,EAAG2I,EAAImF,EAAEhP,OAAQkB,EAAI2I,EAAG3I,IAAK,CAEtCiZ,EADQnL,EAAE9N,IACFuD,EAAEvD,GAEd,OAAOiZ,EAo+IH4I,CAAI,CAClB1J,IAAKa,EAAE,CACPta,EACA,CAAC,EAAG,EAAG,GACPA,EACA,CAAC,GAAI,GAAI,GACTA,EACA,CAAC,GAAI,EAAG,GACR,GACA,GACA,GACAA,EACA,CAAC,GAAI,EAAG,GACR,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACAA,EACA,CAAC,GAAI,EAAG,GACR,GACA,GACAA,EACA,CAAC,IAAK,EAAG,GACT,IACA,IACA,IACA,IACA,IACA,IACAA,EACA,CAAC,IAAK,EAAG,GACT,IACA,IACA,IACA,IACA,IACAA,EACA,CAAC,IAAK,EAAG,GACT,IACA,IACA,IACA,IACAA,EACA,CAAC,IAAK,EAAG,GACT,IACAA,EACA,CAAC,IAAK,GAAI,GACV,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACAA,EACA,CAAC,IAAK,EAAG,GACT,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACAA,EACA,CAAC,IAAK,EAAG,GACT,IACA,IACAA,EACA,CAAC,IAAK,EAAG,GACT,IACA,IACAA,EACA,CAAC,IAAK,EAAG,GACT,IACA,IACA,IACA,IACA,IACA,IACA,IACAA,EACA,CAAC,IAAK,EAAG,GACT,IACA,IACA,IACA,IACA,IACA,IACAA,EACA,CAAC,IAAK,EAAG,KAET8iB,KAAMxI,EAAE,CACR,EACA,IACA,IACA,IACAta,EACA,CAAC,IAAK,GAAI,GACV,IACA,IACA,IACA,IACA,IACA,EACA,IACA,GACA,GACA,IACA,EACAA,EACA,CAAC,GAAI,EAAG,GACR,IACA,GACA,IACA,IACA,IACA,IACA,GACA,IACA,GACA,GACAA,EACA,CAAC,GAAI,EAAG,GACR,GACA,GACAA,EACA,CAAC,EAAG,EAAG,GACP,GACA,EACA,GACA,IACA,IACA,IACA,IACAA,EACA,CAAC,IAAK,EAAG,GACT,IACA,GACA,GACA,IACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACAA,EACA,CAAC,GAAI,GAAI,GACT,GACA,GACAA,EACA,CAAC,GAAI,EAAG,GACR,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,GACA,GACA,GACA,GACA,IACA,GACA,GACA,GACA,IACA,IACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,GACA,GACA,GACA,GACA,IACA,IACA,IACA,IACA,IACA,IACA,GAC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","file":"parsetree.js","sourcesContent":["(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory) /* global define */\n  } else if (typeof module === 'object' && module.exports) {\n    module.exports = factory()\n  } else {\n    root.moo = factory()\n  }\n}(this, function() {\n  'use strict';\n\n  var hasOwnProperty = Object.prototype.hasOwnProperty\n  var toString = Object.prototype.toString\n  var hasSticky = typeof new RegExp().sticky === 'boolean'\n\n  /***************************************************************************/\n\n  function isRegExp(o) { return o && toString.call(o) === '[object RegExp]' }\n  function isObject(o) { return o && typeof o === 'object' && !isRegExp(o) && !Array.isArray(o) }\n\n  function reEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')\n  }\n  function reGroups(s) {\n    var re = new RegExp('|' + s)\n    return re.exec('').length - 1\n  }\n  function reCapture(s) {\n    return '(' + s + ')'\n  }\n  function reUnion(regexps) {\n    if (!regexps.length) return '(?!)'\n    var source =  regexps.map(function(s) {\n      return \"(?:\" + s + \")\"\n    }).join('|')\n    return \"(?:\" + source + \")\"\n  }\n\n  function regexpOrLiteral(obj) {\n    if (typeof obj === 'string') {\n      return '(?:' + reEscape(obj) + ')'\n\n    } else if (isRegExp(obj)) {\n      // TODO: consider /u support\n      if (obj.ignoreCase) throw new Error('RegExp /i flag not allowed')\n      if (obj.global) throw new Error('RegExp /g flag is implied')\n      if (obj.sticky) throw new Error('RegExp /y flag is implied')\n      if (obj.multiline) throw new Error('RegExp /m flag is implied')\n      return obj.source\n\n    } else {\n      throw new Error('Not a pattern: ' + obj)\n    }\n  }\n\n  function objectToRules(object) {\n    var keys = Object.getOwnPropertyNames(object)\n    var result = []\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      var thing = object[key]\n      var rules = [].concat(thing)\n      if (key === 'include') {\n        for (var j = 0; j < rules.length; j++) {\n          result.push({include: rules[j]})\n        }\n        continue\n      }\n      var match = []\n      rules.forEach(function(rule) {\n        if (isObject(rule)) {\n          if (match.length) result.push(ruleOptions(key, match))\n          result.push(ruleOptions(key, rule))\n          match = []\n        } else {\n          match.push(rule)\n        }\n      })\n      if (match.length) result.push(ruleOptions(key, match))\n    }\n    return result\n  }\n\n  function arrayToRules(array) {\n    var result = []\n    for (var i = 0; i < array.length; i++) {\n      var obj = array[i]\n      if (obj.include) {\n        var include = [].concat(obj.include)\n        for (var j = 0; j < include.length; j++) {\n          result.push({include: include[j]})\n        }\n        continue\n      }\n      if (!obj.type) {\n        throw new Error('Rule has no type: ' + JSON.stringify(obj))\n      }\n      result.push(ruleOptions(obj.type, obj))\n    }\n    return result\n  }\n\n  function ruleOptions(type, obj) {\n    if (!isObject(obj)) {\n      obj = { match: obj }\n    }\n    if (obj.include) {\n      throw new Error('Matching rules cannot also include states')\n    }\n\n    // nb. error and fallback imply lineBreaks\n    var options = {\n      defaultType: type,\n      lineBreaks: !!obj.error || !!obj.fallback,\n      pop: false,\n      next: null,\n      push: null,\n      error: false,\n      fallback: false,\n      value: null,\n      type: null,\n      shouldThrow: false,\n    }\n\n    // Avoid Object.assign(), so we support IE9+\n    for (var key in obj) {\n      if (hasOwnProperty.call(obj, key)) {\n        options[key] = obj[key]\n      }\n    }\n\n    // type transform cannot be a string\n    if (typeof options.type === 'string' && type !== options.type) {\n      throw new Error(\"Type transform cannot be a string (type '\" + options.type + \"' for token '\" + type + \"')\")\n    }\n\n    // convert to array\n    var match = options.match\n    options.match = Array.isArray(match) ? match : match ? [match] : []\n    options.match.sort(function(a, b) {\n      return isRegExp(a) && isRegExp(b) ? 0\n           : isRegExp(b) ? -1 : isRegExp(a) ? +1 : b.length - a.length\n    })\n    return options\n  }\n\n  function toRules(spec) {\n    return Array.isArray(spec) ? arrayToRules(spec) : objectToRules(spec)\n  }\n\n  var defaultErrorRule = ruleOptions('error', {lineBreaks: true, shouldThrow: true})\n  function compileRules(rules, hasStates) {\n    var errorRule = null\n    var fast = Object.create(null)\n    var fastAllowed = true\n    var unicodeFlag = null\n    var groups = []\n    var parts = []\n\n    // If there is a fallback rule, then disable fast matching\n    for (var i = 0; i < rules.length; i++) {\n      if (rules[i].fallback) {\n        fastAllowed = false\n      }\n    }\n\n    for (var i = 0; i < rules.length; i++) {\n      var options = rules[i]\n\n      if (options.include) {\n        // all valid inclusions are removed by states() preprocessor\n        throw new Error('Inheritance is not allowed in stateless lexers')\n      }\n\n      if (options.error || options.fallback) {\n        // errorRule can only be set once\n        if (errorRule) {\n          if (!options.fallback === !errorRule.fallback) {\n            throw new Error(\"Multiple \" + (options.fallback ? \"fallback\" : \"error\") + \" rules not allowed (for token '\" + options.defaultType + \"')\")\n          } else {\n            throw new Error(\"fallback and error are mutually exclusive (for token '\" + options.defaultType + \"')\")\n          }\n        }\n        errorRule = options\n      }\n\n      var match = options.match.slice()\n      if (fastAllowed) {\n        while (match.length && typeof match[0] === 'string' && match[0].length === 1) {\n          var word = match.shift()\n          fast[word.charCodeAt(0)] = options\n        }\n      }\n\n      // Warn about inappropriate state-switching options\n      if (options.pop || options.push || options.next) {\n        if (!hasStates) {\n          throw new Error(\"State-switching options are not allowed in stateless lexers (for token '\" + options.defaultType + \"')\")\n        }\n        if (options.fallback) {\n          throw new Error(\"State-switching options are not allowed on fallback tokens (for token '\" + options.defaultType + \"')\")\n        }\n      }\n\n      // Only rules with a .match are included in the RegExp\n      if (match.length === 0) {\n        continue\n      }\n      fastAllowed = false\n\n      groups.push(options)\n\n      // Check unicode flag is used everywhere or nowhere\n      for (var j = 0; j < match.length; j++) {\n        var obj = match[j]\n        if (!isRegExp(obj)) {\n          continue\n        }\n\n        if (unicodeFlag === null) {\n          unicodeFlag = obj.unicode\n        } else if (unicodeFlag !== obj.unicode && options.fallback === false) {\n          throw new Error('If one rule is /u then all must be')\n        }\n      }\n\n      // convert to RegExp\n      var pat = reUnion(match.map(regexpOrLiteral))\n\n      // validate\n      var regexp = new RegExp(pat)\n      if (regexp.test(\"\")) {\n        throw new Error(\"RegExp matches empty string: \" + regexp)\n      }\n      var groupCount = reGroups(pat)\n      if (groupCount > 0) {\n        throw new Error(\"RegExp has capture groups: \" + regexp + \"\\nUse (?: … ) instead\")\n      }\n\n      // try and detect rules matching newlines\n      if (!options.lineBreaks && regexp.test('\\n')) {\n        throw new Error('Rule should declare lineBreaks: ' + regexp)\n      }\n\n      // store regex\n      parts.push(reCapture(pat))\n    }\n\n\n    // If there's no fallback rule, use the sticky flag so we only look for\n    // matches at the current index.\n    //\n    // If we don't support the sticky flag, then fake it using an irrefutable\n    // match (i.e. an empty pattern).\n    var fallbackRule = errorRule && errorRule.fallback\n    var flags = hasSticky && !fallbackRule ? 'ym' : 'gm'\n    var suffix = hasSticky || fallbackRule ? '' : '|'\n\n    if (unicodeFlag === true) flags += \"u\"\n    var combined = new RegExp(reUnion(parts) + suffix, flags)\n    return {regexp: combined, groups: groups, fast: fast, error: errorRule || defaultErrorRule}\n  }\n\n  function compile(rules) {\n    var result = compileRules(toRules(rules))\n    return new Lexer({start: result}, 'start')\n  }\n\n  function checkStateGroup(g, name, map) {\n    var state = g && (g.push || g.next)\n    if (state && !map[state]) {\n      throw new Error(\"Missing state '\" + state + \"' (in token '\" + g.defaultType + \"' of state '\" + name + \"')\")\n    }\n    if (g && g.pop && +g.pop !== 1) {\n      throw new Error(\"pop must be 1 (in token '\" + g.defaultType + \"' of state '\" + name + \"')\")\n    }\n  }\n  function compileStates(states, start) {\n    var all = states.$all ? toRules(states.$all) : []\n    delete states.$all\n\n    var keys = Object.getOwnPropertyNames(states)\n    if (!start) start = keys[0]\n\n    var ruleMap = Object.create(null)\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      ruleMap[key] = toRules(states[key]).concat(all)\n    }\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      var rules = ruleMap[key]\n      var included = Object.create(null)\n      for (var j = 0; j < rules.length; j++) {\n        var rule = rules[j]\n        if (!rule.include) continue\n        var splice = [j, 1]\n        if (rule.include !== key && !included[rule.include]) {\n          included[rule.include] = true\n          var newRules = ruleMap[rule.include]\n          if (!newRules) {\n            throw new Error(\"Cannot include nonexistent state '\" + rule.include + \"' (in state '\" + key + \"')\")\n          }\n          for (var k = 0; k < newRules.length; k++) {\n            var newRule = newRules[k]\n            if (rules.indexOf(newRule) !== -1) continue\n            splice.push(newRule)\n          }\n        }\n        rules.splice.apply(rules, splice)\n        j--\n      }\n    }\n\n    var map = Object.create(null)\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n      map[key] = compileRules(ruleMap[key], true)\n    }\n\n    for (var i = 0; i < keys.length; i++) {\n      var name = keys[i]\n      var state = map[name]\n      var groups = state.groups\n      for (var j = 0; j < groups.length; j++) {\n        checkStateGroup(groups[j], name, map)\n      }\n      var fastKeys = Object.getOwnPropertyNames(state.fast)\n      for (var j = 0; j < fastKeys.length; j++) {\n        checkStateGroup(state.fast[fastKeys[j]], name, map)\n      }\n    }\n\n    return new Lexer(map, start)\n  }\n\n  function keywordTransform(map) {\n    var reverseMap = Object.create(null)\n    var byLength = Object.create(null)\n    var types = Object.getOwnPropertyNames(map)\n    for (var i = 0; i < types.length; i++) {\n      var tokenType = types[i]\n      var item = map[tokenType]\n      var keywordList = Array.isArray(item) ? item : [item]\n      keywordList.forEach(function(keyword) {\n        (byLength[keyword.length] = byLength[keyword.length] || []).push(keyword)\n        if (typeof keyword !== 'string') {\n          throw new Error(\"keyword must be string (in keyword '\" + tokenType + \"')\")\n        }\n        reverseMap[keyword] = tokenType\n      })\n    }\n\n    // fast string lookup\n    // https://jsperf.com/string-lookups\n    function str(x) { return JSON.stringify(x) }\n    var source = ''\n    source += 'switch (value.length) {\\n'\n    for (var length in byLength) {\n      var keywords = byLength[length]\n      source += 'case ' + length + ':\\n'\n      source += 'switch (value) {\\n'\n      keywords.forEach(function(keyword) {\n        var tokenType = reverseMap[keyword]\n        source += 'case ' + str(keyword) + ': return ' + str(tokenType) + '\\n'\n      })\n      source += '}\\n'\n    }\n    source += '}\\n'\n    return Function('value', source) // type\n  }\n\n  /***************************************************************************/\n\n  var Lexer = function(states, state) {\n    this.startState = state\n    this.states = states\n    this.buffer = ''\n    this.stack = []\n    this.reset()\n  }\n\n  Lexer.prototype.reset = function(data, info) {\n    this.buffer = data || ''\n    this.index = 0\n    this.line = info ? info.line : 1\n    this.col = info ? info.col : 1\n    this.queuedToken = info ? info.queuedToken : null\n    this.queuedThrow = info ? info.queuedThrow : null\n    this.setState(info ? info.state : this.startState)\n    this.stack = info && info.stack ? info.stack.slice() : []\n    return this\n  }\n\n  Lexer.prototype.save = function() {\n    return {\n      line: this.line,\n      col: this.col,\n      state: this.state,\n      stack: this.stack.slice(),\n      queuedToken: this.queuedToken,\n      queuedThrow: this.queuedThrow,\n    }\n  }\n\n  Lexer.prototype.setState = function(state) {\n    if (!state || this.state === state) return\n    this.state = state\n    var info = this.states[state]\n    this.groups = info.groups\n    this.error = info.error\n    this.re = info.regexp\n    this.fast = info.fast\n  }\n\n  Lexer.prototype.popState = function() {\n    this.setState(this.stack.pop())\n  }\n\n  Lexer.prototype.pushState = function(state) {\n    this.stack.push(this.state)\n    this.setState(state)\n  }\n\n  var eat = hasSticky ? function(re, buffer) { // assume re is /y\n    return re.exec(buffer)\n  } : function(re, buffer) { // assume re is /g\n    var match = re.exec(buffer)\n    // will always match, since we used the |(?:) trick\n    if (match[0].length === 0) {\n      return null\n    }\n    return match\n  }\n\n  Lexer.prototype._getGroup = function(match) {\n    var groupCount = this.groups.length\n    for (var i = 0; i < groupCount; i++) {\n      if (match[i + 1] !== undefined) {\n        return this.groups[i]\n      }\n    }\n    throw new Error('Cannot find token type for matched text')\n  }\n\n  function tokenToString() {\n    return this.value\n  }\n\n  Lexer.prototype.next = function() {\n    var index = this.index\n\n    // If a fallback token matched, we don't need to re-run the RegExp\n    if (this.queuedGroup) {\n      var token = this._token(this.queuedGroup, this.queuedText, index)\n      this.queuedGroup = null\n      this.queuedText = \"\"\n      return token\n    }\n\n    var buffer = this.buffer\n    if (index === buffer.length) {\n      return // EOF\n    }\n\n    // Fast matching for single characters\n    var group = this.fast[buffer.charCodeAt(index)]\n    if (group) {\n      return this._token(group, buffer.charAt(index), index)\n    }\n\n    // Execute RegExp\n    var re = this.re\n    re.lastIndex = index\n    var match = eat(re, buffer)\n\n    // Error tokens match the remaining buffer\n    var error = this.error\n    if (match == null) {\n      return this._token(error, buffer.slice(index, buffer.length), index)\n    }\n\n    var group = this._getGroup(match)\n    var text = match[0]\n\n    if (error.fallback && match.index !== index) {\n      this.queuedGroup = group\n      this.queuedText = text\n\n      // Fallback tokens contain the unmatched portion of the buffer\n      return this._token(error, buffer.slice(index, match.index), index)\n    }\n\n    return this._token(group, text, index)\n  }\n\n  Lexer.prototype._token = function(group, text, offset) {\n    // count line breaks\n    var lineBreaks = 0\n    if (group.lineBreaks) {\n      var matchNL = /\\n/g\n      var nl = 1\n      if (text === '\\n') {\n        lineBreaks = 1\n      } else {\n        while (matchNL.exec(text)) { lineBreaks++; nl = matchNL.lastIndex }\n      }\n    }\n\n    var token = {\n      type: (typeof group.type === 'function' && group.type(text)) || group.defaultType,\n      value: typeof group.value === 'function' ? group.value(text) : text,\n      text: text,\n      toString: tokenToString,\n      offset: offset,\n      lineBreaks: lineBreaks,\n      line: this.line,\n      col: this.col,\n    }\n    // nb. adding more props to token object will make V8 sad!\n\n    var size = text.length\n    this.index += size\n    this.line += lineBreaks\n    if (lineBreaks !== 0) {\n      this.col = size - nl + 1\n    } else {\n      this.col += size\n    }\n\n    // throw, if no rule with {error: true}\n    if (group.shouldThrow) {\n      throw new Error(this.formatError(token, \"invalid syntax\"))\n    }\n\n    if (group.pop) this.popState()\n    else if (group.push) this.pushState(group.push)\n    else if (group.next) this.setState(group.next)\n\n    return token\n  }\n\n  if (typeof Symbol !== 'undefined' && Symbol.iterator) {\n    var LexerIterator = function(lexer) {\n      this.lexer = lexer\n    }\n\n    LexerIterator.prototype.next = function() {\n      var token = this.lexer.next()\n      return {value: token, done: !token}\n    }\n\n    LexerIterator.prototype[Symbol.iterator] = function() {\n      return this\n    }\n\n    Lexer.prototype[Symbol.iterator] = function() {\n      return new LexerIterator(this)\n    }\n  }\n\n  Lexer.prototype.formatError = function(token, message) {\n    if (token == null) {\n      // An undefined token indicates EOF\n      var text = this.buffer.slice(this.index)\n      var token = {\n        text: text,\n        offset: this.index,\n        lineBreaks: text.indexOf('\\n') === -1 ? 0 : 1,\n        line: this.line,\n        col: this.col,\n      }\n    }\n    var start = Math.max(0, token.offset - token.col + 1)\n    var eol = token.lineBreaks ? token.text.indexOf('\\n') : token.text.length\n    var firstLine = this.buffer.substring(start, token.offset + eol)\n    message += \" at line \" + token.line + \" col \" + token.col + \":\\n\\n\"\n    message += \"  \" + firstLine + \"\\n\"\n    message += \"  \" + Array(token.col).join(\" \") + \"^\"\n    return message\n  }\n\n  Lexer.prototype.clone = function() {\n    return new Lexer(this.states, this.state)\n  }\n\n  Lexer.prototype.has = function(tokenType) {\n    return true\n  }\n\n\n  return {\n    compile: compile,\n    states: compileStates,\n    error: Object.freeze({error: true}),\n    fallback: Object.freeze({fallback: true}),\n    keywords: keywordTransform,\n  }\n\n}));\n","import {parse, Location} from \"../src/parsing\";\n\nconst testInput = `\nint factorial(int v) {\n  return v < 2 ? 1 : v * factorial(v - 1);\n}\n`.trimStart();\n\nfunction parseTree(input: string, showLocations: boolean = false): string {\n    try {\n        const tree = parse(input);\n        return JSON.stringify(tree, (key, value) => {\n            if (key.startsWith(\"_\")) return undefined;\n            if (key === \"loc\" && typeof value === \"object\") {\n                if (!showLocations) return undefined;\n                const l = value as Location;\n                return `${l.first_line + 1}:${l.first_column} → ${l.last_line + 1}:${l.last_column}`;\n            }\n            return value;\n        }, 2);\n    } catch (e) {\n        console.debug(e);\n        return e.toString();\n    }\n}\n\nif (typeof window !== 'undefined' && window.document) {\n    window.document.write(`\n        <h1>c2wasm parse tree</h1>\n        <div>\n            <textarea id=\"textInput\" rows=\"20\" style=\"width: 100%; resize: vertical\">${testInput}</textarea>\n            <div style=\"position: absolute; right: 20px\">\n                <span>Show locations: </span> \n                <input type=\"checkbox\" id=\"showLoc\">\n            </div>\n            <pre id=\"output\">${parseTree(testInput)}</pre>\n        </div>\n    `);\n\n    const textInput = window.document.getElementById(\"textInput\") as HTMLTextAreaElement;\n    const output = window.document.getElementById(\"output\") as HTMLPreElement;\n    const showLoc = window.document.getElementById(\"showLoc\") as HTMLInputElement;\n\n    const handler = () => {\n        output.textContent = parseTree(textInput.value, showLoc.checked);\n    };\n    textInput.addEventListener(\"input\", handler);\n    showLoc.addEventListener(\"change\", handler);\n} else {\n    console.log(parseTree(testInput));\n}\n","import type {Location, ParseNode} from \"./parsing\";\n\nexport class CError extends Error {\n    name = \"CError\";\n\n    constructor(message: string, readonly node?: ParseNode, readonly node2?: ParseNode) {\n        super(message);\n\n        if (node?.loc) {\n            this.message += \"\\n\\n\" + locationString(node.loc);\n            if (node2?.loc) this.message += \"\\n\\n\" + locationString(node2.loc, \"Secondary location\");\n        }\n    }\n}\n\nexport function locationString(loc: Location, label: string = \"Location\"): string {\n    const lines = loc._source.split(\"\\n\");\n    if (loc.first_line >= lines.length) return `${label}: [UNKNOWN]`;\n\n    let output = `${label}:\\n`;\n\n    const lnumDigits = Math.ceil(Math.log10(loc.last_line + 4));\n    function outputLine(lnum: number) {\n        output += `L${(lnum + 1).toString().padStart(lnumDigits, '0')}: ${lines[lnum]}\\n`;\n    }\n\n    if (loc.first_line > 1) outputLine(loc.first_line - 2);\n    if (loc.first_line > 0) outputLine(loc.first_line - 1);\n    outputLine(loc.first_line);\n\n    // output ^^^ arrows\n    output += new Array(3 + lnumDigits + loc.first_column).join(\" \");\n    if (loc.first_line === loc.last_line) {\n        output += new Array(1 + loc.last_column - loc.first_column).join(\"^\");\n    } else {\n        output += \"^\";\n    }\n    output += \"\\n\";\n\n    if (loc.first_line + 1 < lines.length) outputLine(loc.first_line + 1);\n    if (loc.first_line + 2 < lines.length) outputLine(loc.first_line + 2);\n    return output;\n}\n","export * as pt from \"./parsetree\";\nexport {ParseNode, Location} from \"./parsetree\"; // the most common parsetree imports\nexport {ParseTreeValidationError} from \"./validation\";\nexport {parse} from \"./parser\";\n","import moo from \"moo\";\n\nconst keywords = [\n    \"if\", \"break\", \"case\", \"char\", \"const\", \"continue\", \"default\", \"do\", \"double\", \"else\", \"enum\", \"extern\", \"float\",\n    \"for\", \"inline\", \"int\", \"long\", \"return\", \"short\", \"signed\", \"sizeof\", \"static\", \"struct\", \"switch\", \"typedef\",\n    \"union\", \"unsigned\", \"void\", \"while\", \"_Bool\",\n\n    // currently unsupported (but still lex so parser throws error)\n    \"auto\", \"goto\", \"register\", \"volatile\",\n\n    // special for c2wasm, not on spec\n    \"import\"\n];\n\nconst simpleSymbols = [';','{','}',',',':','=','(',')','[',']','.','&','!','~','-','+','*','/','%','<','>','^','|','?'];\n\nexport const lexer = moo.compile({\n    $comment: {match: /(?:\\/\\*[^]*?\\*\\/)|(?:\\/\\/.*?$)/, multiline: true},\n    IDENTIFIER: {\n        match: /[a-zA-Z_][a-zA-Z0-9_]*/,\n        type: moo.keywords(Object.fromEntries(keywords.map(x => [x.toUpperCase(), x])))\n    },\n    CONSTANT_FLOAT: /(?:[0-9]+[Ee][+-]?[0-9]+|(?:[0-9]*\\.[0-9]+|[0-9]+\\.[0-9]*)(?:[Ee][+-]?[0-9]+)?)[fFlL]?|(?:[1-9][0-9]*|0)[fF]/,\n    CONSTANT_HEX: /0[xX][a-fA-F0-9]+(?:[uU][lL]{0,2}|[lL]{1,2}[uU]?|)/,\n    CONSTANT_OCTAL: /0[0-7]+(?:[uU][lL]{0,2}|[lL]{1,2}[uU]?|)/,\n    CONSTANT_INT: /(?:[1-9][0-9]*|0)(?:[uU][lL]{0,2}|[lL]{1,2}[uU]?|)/,\n    CONSTANT_CHAR: {match: /'(?:[^\\\\\\n']|\\\\(?:.|x[0-9a-fA-F]{1,2}|[0-7]{1,3}))'/, value: x => x.slice(1, -1)},\n    STRING_LITERAL: {match: /\"(?:[^\\\\\\n\"]|\\\\(?:[^x0-7\\n]|x[0-9a-fA-F]{1,2}|[0-7]{1,3}))*\"/, value: x => x.slice(1, -1)},\n    ELLIPSIS: \"...\",\n    RIGHT_ASSIGN: \">>=\",\n    LEFT_ASSIGN: \"<<=\",\n    ADD_ASSIGN: \"+=\",\n    SUB_ASSIGN: \"-=\",\n    MUL_ASSIGN: \"*=\",\n    DIV_ASSIGN: \"/=\",\n    MOD_ASSIGN: \"%=\",\n    AND_ASSIGN: \"&=\",\n    XOR_ASSIGN: \"^=\",\n    OR_ASSIGN: \"|=\",\n    RIGHT_OP: \">>\",\n    LEFT_OP: \"<<\",\n    INC_OP: \"++\",\n    DEC_OP: \"--\",\n    PTR_OP: \"->\",\n    AND_OP: \"&&\",\n    OR_OP: \"||\",\n    LE_OP: \"<=\",\n    GE_OP: \">=\",\n    EQ_OP: \"==\",\n    NE_OP: \"!=\",\n    ...Object.fromEntries(simpleSymbols.map(x => [x,x])),\n    $whitespace: [\n        {match: /[ \\t\\v\\f]+/},\n        {match: /\\n/, lineBreaks: true},\n    ],\n});\n\n// automatically skip tokens starting with \"$\", i.e. whitespace, line breaks and comments\nlexer.next = (next => () => {\n    let tok = next.call(lexer);\n    while (tok?.type?.charAt(0) === '$') tok = next.call(lexer);\n    return tok;\n})(lexer.next);\n","import {locationString} from \"../c_error\";\nimport {lexer} from \"./lexer\";\nimport gen from \"./gen/c_grammar\";\nimport * as parsetree from \"./parsetree\";\nimport {validate} from \"./validation\";\n\nfunction newLocation(): parsetree.Location {\n    return {first_line: 0, first_column: 0, last_line: 0, last_column: 0, _source: \"\", _sourceId: 0};\n}\nlet nextSourceId: number = 1;\n\n// adapt moo parser to work with Jison\nclass WrappedLexer {\n    yytext?: string;\n    yylloc: parsetree.Location = newLocation();\n    yylineno: number = 0;\n    types = new Map<string, boolean>();\n\n    /** return the token type and update yytext, yylloc, yylineno */\n    lex(): string {\n        const token = lexer.next();\n        this.yytext = token?.value;\n        if (!token || !token.type) {\n            // no more tokens, end of file reached\n            return \"EOF\";\n        }\n\n        this.yylloc = {\n            first_line: token.line - 1,\n            first_column: token.col,\n            last_line: token.line + token.lineBreaks - 1,\n            last_column: token.lineBreaks ? 0 : token.col + token.text.length,\n            _sourceId: this.yylloc._sourceId,\n            _source: this.yylloc._source\n        };\n        this.yylineno = this.yylloc.first_line;\n\n        if (token.type === \"IDENTIFIER\" && this.types.get(token.text)) {\n            return \"TYPE_NAME\";\n        }\n        return token.type;\n    }\n\n    setInput(input: string): void {\n        // completely reset all state\n        this.yylloc = newLocation();\n        this.yylineno = 0;\n        this.yytext = undefined;\n        this.types.clear();\n\n        lexer.reset(input);\n        this.yylloc._source = input; // store source on the parser tokens, allowing error information to be easily printed\n        this.yylloc._sourceId = nextSourceId++; // identifier which can be used to check if tokens are from the same file\n    }\n\n    externalDeclaration(d: parsetree.Declaration) {\n        if (d.typeInfo.storageList[0] !== \"typedef\") return;\n\n        for (let declarator of d.list) {\n            while (!(declarator instanceof parsetree.IdentifierDeclarator)) declarator = declarator.body;\n            this.types.set(declarator.id, true);\n        }\n    }\n}\n\n// provide the generated parser with our custom lexer\nconst generatedParser = gen as any;\ngeneratedParser.parser.lexer = new WrappedLexer();\n\n/**\n * Parse the input string into a parse tree and perform some basic validation\n */\nexport function parse(input: string): parsetree.TranslationUnit {\n    try {\n        const tree = generatedParser.parse(input);\n        return validate(tree);\n    } catch (e) {\n        if (e?.hash?.loc) { // Jison parse errors\n            e.message += \"\\n\\n\" + locationString(e.hash?.loc);\n        }\n        throw e;\n    }\n}\n","export type Location = {\n    first_line: number, last_line: number, first_column: number, last_column: number,\n    _source: string, _sourceId: number // hidden attributes for error printing\n};\n\n// Classes used to build up the C parse tree - mostly just simple objects storing the relevant fields.\n\nexport abstract class ParseNode {\n    abstract readonly type: string;\n\n    constructor(readonly loc: Location) {\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        // return any children of the node\n    }\n}\n\n// Expressions\n\nexport abstract class Expression extends ParseNode {\n    // typescript does structural equality when type checking, so for this class to be different from\n    // the base ParseNode add a simple private field.\n    private readonly _expression: boolean = true;\n}\n\nexport class Identifier extends Expression {\n    readonly type = \"identifier\";\n\n    constructor(loc: Location, readonly name: string) {\n        super(loc);\n    }\n}\n\nexport class Constant extends Expression {\n    readonly type = \"constant\";\n\n    constructor(loc: Location, readonly value: string, readonly valueType: \"float\" | \"char\" | \"int\" | \"oct\" | \"hex\") {\n        super(loc);\n    }\n}\n\nexport class StringLiteral extends Expression {\n    readonly type = \"stringLiteral\";\n\n    constructor(loc: Location, readonly value: string) {\n        super(loc);\n    }\n}\n\nexport const UnaryOperations = [\n    \"postfixIncrement\", \"postfixDecrement\", \"prefixIncrement\", \"prefixDecrement\",\n    \"addressOf\", \"dereference\", \"unaryPlus\", \"unaryMinus\", \"bitwiseNot\", \"logicalNot\"] as const;\nexport type UnaryOp = typeof UnaryOperations[number];\nexport class UnaryExpression extends Expression {\n    private readonly _unaryExpr = true;\n\n    constructor(loc: Location, readonly type: UnaryOp, readonly body: Expression) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        yield this.body;\n    }\n}\n\nexport const BinaryOperations = [\"arraySubscript\", \"comma\",\n    \"mul\", \"div\", \"mod\", \"add\", \"sub\", \"bitwiseShiftLeft\", \"bitwiseShiftRight\",\n    \"relationalLT\", \"relationalGT\", \"relationalLEq\", \"relationalGEq\", \"relationalEq\", \"relationalNEq\",\n    \"bitwiseAnd\", \"bitwiseXor\", \"bitwiseOr\", \"logicalAnd\", \"logicalOr\"] as const;\nexport type BinaryOp = typeof BinaryOperations[number];\nexport class BinaryExpression extends Expression {\n    private readonly _binaryExpr = true;\n\n    constructor(loc: Location, readonly type: BinaryOp, readonly lhs: Expression, readonly rhs: Expression) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        yield this.lhs;\n        yield this.rhs;\n    }\n}\n\nexport class SizeofExpression extends Expression {\n    readonly type = \"sizeof\";\n\n    constructor(loc: Location, readonly body: Expression | TypeName) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        yield this.body;\n    }\n}\n\nexport class CastExpression extends Expression {\n    readonly type = \"cast\";\n\n    constructor(loc: Location, readonly targetType: TypeName, readonly body: Expression) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        yield this.targetType;\n        yield this.body;\n    }\n}\n\nexport class FunctionCallExpression extends Expression {\n    readonly type = \"functionCall\";\n\n    constructor(loc: Location, readonly fn: Expression, readonly args: ReadonlyArray<Expression> = []) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        yield this.fn;\n        yield* this.args;\n    }\n}\n\nexport class MemberAccessExpression extends Expression {\n    readonly type = \"access\";\n\n    constructor(loc: Location, readonly pointer: boolean, readonly lhs: Expression, readonly rhs: string) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        yield this.lhs;\n    }\n}\n\nexport class ConditionalExpression extends Expression {\n    readonly type = \"conditional\";\n\n    constructor(loc: Location, readonly condition: Expression, readonly trueValue: Expression, readonly falseValue: Expression) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        yield this.condition;\n        yield this.trueValue;\n        yield this.falseValue;\n    }\n}\n\nexport type AssignmentType = undefined | \"mul\" | \"div\" | \"mod\" | \"add\" | \"sub\" | \"leftShift\"| \"rightShift\" | \"bitwiseAnd\" | \"bitwiseXor\" | \"bitwiseOr\";\nexport class AssignmentExpression extends Expression {\n    readonly type = \"assign\";\n\n    constructor(loc: Location, readonly assignType: AssignmentType, readonly lhs: Expression, readonly rhs: Expression) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        yield this.lhs;\n        yield this.rhs;\n    }\n}\n\nexport class ConstantExpression extends Expression {\n    readonly type = \"constantExpr\";\n\n    constructor(loc: Location, readonly expr: Expression) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        yield this.expr;\n    }\n}\n\n// Declarations\nexport class CustomTypeSpecifier extends ParseNode {\n    readonly type = \"customType\";\n\n    public constructor(loc: Location, readonly name: string) {\n        super(loc);\n    }\n}\n\nexport type StorageClass = \"typedef\" | \"extern\" | \"static\"; // | \"auto\" | \"register\";\nexport type TypeSpecifier =\n    \"void\" | \"char\" | \"short\" | \"int\" | \"long\" | \"float\" | \"double\" | \"signed\" | \"unsigned\" | \"bool\" // | \"complex\" | \"imaginary\"]\n    | StructUnionSpecifier\n    | EnumSpecifier\n    | CustomTypeSpecifier;\nexport type TypeQualifier = \"const\"; // | \"restrict\" | \"volatile\";\nexport type FnSpecifier = \"import\" | \"inline\";\n\nexport class SpecifierQualifiers extends ParseNode {\n    readonly type = \"specifiersAndQualifiers\";\n\n    constructor(loc: Location,\n                readonly specifierList: ReadonlyArray<TypeSpecifier>,\n                readonly qualifierList: ReadonlyArray<TypeQualifier>) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        for (const specifier of this.specifierList) {\n            if (specifier instanceof ParseNode) yield specifier;\n        }\n    }\n}\n\nexport class DeclarationSpecifiers extends ParseNode {\n    readonly type = \"declarationSpecifiers\";\n\n    constructor(loc: Location,\n                readonly specifierList: ReadonlyArray<TypeSpecifier>,\n                readonly qualifierList: ReadonlyArray<TypeQualifier>,\n                readonly storageList: ReadonlyArray<StorageClass>,\n                readonly fnSpecifierList: ReadonlyArray<FnSpecifier>) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        for (const specifier of this.specifierList) {\n            if (specifier instanceof ParseNode) yield specifier;\n        }\n    }\n}\n\nexport class EnumSpecifier extends ParseNode {\n    type = \"enum\";\n\n    constructor(loc: Location, readonly id?: string, readonly body?: ReadonlyArray<Enumerator>) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        if (this.body) yield* this.body;\n    }\n}\n\nexport class Enumerator extends ParseNode {\n    type = \"enumerator\";\n\n    constructor(loc: Location, readonly id: string, readonly value?: ConstantExpression) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        if (this.value) yield this.value;\n    }\n}\n\nexport class Declaration extends ParseNode{\n    readonly type = \"declaration\";\n\n    constructor(loc: Location, readonly typeInfo: DeclarationSpecifiers, readonly list: ReadonlyArray<Declarator | InitDeclarator> = []) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        yield this.typeInfo;\n        yield* this.list;\n    }\n}\n\nexport class InitDeclarator extends ParseNode {\n    readonly type= \"initDeclarator\";\n\n    constructor(loc: Location, readonly body: Declarator, readonly initializer: Initializer) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        yield this.body;\n        yield* this.exploreInitializer();\n    }\n\n    private *exploreInitializer(initializer: Initializer = this.initializer): Iterable<ParseNode> {\n        if (initializer instanceof AssignmentExpression) {\n            yield initializer;\n        } else if (Array.isArray(initializer)) {\n            for (const x of initializer) yield* this.exploreInitializer(x);\n        }\n    }\n}\n\nexport class StructUnionSpecifier extends ParseNode {\n    readonly type = \"structUnionSpecifier\";\n\n    constructor(loc: Location, readonly structure: \"struct\" | \"union\", readonly id?: string, readonly declarations?: ReadonlyArray<StructDeclaration>) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        if (this.declarations) yield* this.declarations;\n    }\n}\n\nexport class StructDeclaration extends ParseNode {\n    readonly type= \"structDeclaration\";\n\n    constructor(loc: Location, readonly typeInfo: DeclarationSpecifiers, readonly list: ReadonlyArray<Declarator> = []) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        yield this.typeInfo;\n        yield* this.list;\n    }\n}\n\nexport type Declarator = PointerDeclarator | IdentifierDeclarator | ArrayDeclarator | FunctionDeclarator;\n\nexport class PointerDeclarator extends ParseNode {\n    readonly type= \"pointerDeclarator\";\n    readonly abstractDeclarator = false;\n\n    constructor(loc: Location, readonly pointer: Pointer, readonly body: Declarator) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        yield this.pointer;\n        yield this.body;\n    }\n}\n\nexport class IdentifierDeclarator extends ParseNode {\n    readonly type= \"identifierDeclarator\";\n    readonly abstractDeclarator = false;\n\n    constructor(loc: Location, readonly id: string) {\n        super(loc);\n    }\n}\n\nexport class ArrayDeclarator extends ParseNode {\n    readonly type= \"arrayDeclarator\";\n    readonly abstractDeclarator = false;\n\n    constructor(loc: Location, readonly body: Declarator, readonly length?: ConstantExpression) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        yield this.body;\n        if (this.length) yield this.length;\n    }\n}\n\nexport class FunctionDeclarator extends ParseNode {\n    readonly type= \"functionDeclarator\";\n    readonly abstractDeclarator = false;\n\n    constructor(loc: Location, readonly body: Declarator, readonly args?: ReadonlyArray<ParameterDeclaration>, readonly variadic: boolean = false) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        yield this.body;\n        for (const value of this.args ?? []) {\n            if (value instanceof ParseNode) yield value;\n        }\n    }\n}\n\nexport class ParameterDeclaration extends ParseNode {\n    readonly type= \"parameterDeclaration\";\n\n    constructor(loc: Location, readonly typeInfo: DeclarationSpecifiers, readonly declarator?: Declarator | AbstractDeclarator) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        yield this.typeInfo;\n        if (this.declarator) yield this.declarator;\n    }\n}\n\nexport class Pointer extends ParseNode {\n    readonly type= \"pointer\";\n\n    constructor(loc: Location, readonly qualifierList?: ReadonlyArray<TypeQualifier>, readonly body?: Pointer) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        if (this.body) yield this.body;\n    }\n}\n\nexport class TypeName extends ParseNode {\n    readonly type= \"typeName\";\n\n    constructor(loc: Location, readonly typeInfo: SpecifierQualifiers, readonly declarator?: AbstractDeclarator) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        yield this.typeInfo;\n        if (this.declarator) yield this.declarator;\n    }\n}\n\nexport type AbstractDeclarator = AbstractPointerDeclarator | AbstractArrayDeclarator | AbstractFunctionDeclarator;\n\nexport class AbstractPointerDeclarator extends ParseNode {\n    readonly type= \"abstractPointerDeclarator\";\n    readonly abstractDeclarator = true;\n\n    constructor(loc: Location, readonly pointer: Pointer, readonly body?: AbstractDeclarator) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        yield this.pointer;\n        if (this.body) yield this.body;\n    }\n}\n\nexport class AbstractArrayDeclarator extends ParseNode {\n    readonly type= \"abstractArrayDeclarator\";\n    readonly abstractDeclarator = true;\n\n    constructor(loc: Location, readonly body?: AbstractDeclarator, readonly length?: ConstantExpression) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        if (this.body) yield this.body;\n        if (this.length) yield this.length;\n    }\n}\n\nexport class AbstractFunctionDeclarator extends ParseNode {\n    readonly type= \"abstractFunctionDeclarator\";\n    readonly abstractDeclarator = true;\n\n    constructor(loc: Location, readonly body?: AbstractDeclarator, readonly args?: ReadonlyArray<ParameterDeclaration>, readonly variadic: boolean = false) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        if (this.body) yield this.body;\n        if (this.args) yield* this.args;\n    }\n}\n\nexport type Initializer = Expression | ReadonlyArray<Initializer>;\n\n// Statements\n\nexport abstract class Statement extends ParseNode {\n    private readonly _statement: boolean = true;\n    label?: string;\n\n    setLabel(label: string): this {\n        this.label = label;\n        return this;\n    }\n}\n\nexport class IfStatement extends Statement {\n    readonly type = \"ifStatement\";\n\n    constructor(loc: Location, readonly expression: Expression, readonly ifBody: Statement, readonly elseBody?: Statement) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        yield this.expression;\n        yield this.ifBody;\n        if (this.elseBody) yield this.elseBody;\n    }\n}\n\nexport class SwitchStatement extends Statement {\n    readonly type = \"switchStatement\";\n\n    constructor(loc: Location, readonly expression: Expression, readonly body: Statement) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        yield this.expression;\n        yield this.body;\n    }\n}\n\nexport class CaseStatement extends Statement {\n    readonly type = \"caseStatement\";\n\n    constructor(loc: Location, readonly value: ConstantExpression, readonly body: Statement) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        yield this.value;\n        yield this.body;\n    }\n}\n\nexport class DefaultStatement extends Statement {\n    readonly type = \"defaultStatement\";\n\n    constructor(loc: Location, readonly body: Statement) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        yield this.body;\n    }\n}\n\nexport class CompoundStatement extends Statement {\n    readonly type = \"compoundStatement\";\n\n    constructor(loc: Location, readonly body: ReadonlyArray<Statement | Declaration>) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        yield* this.body;\n    }\n}\n\nexport class ExpressionStatement extends Statement {\n    readonly type = \"expressionStatement\";\n\n    constructor(loc: Location, readonly expression: Expression) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        yield this.expression;\n    }\n}\n\nexport class NoOp extends Statement {\n    readonly type= \"nopStatement\";\n\n    constructor(loc: Location) {\n        super(loc);\n    }\n}\n\nexport class ForLoop extends Statement {\n    readonly type = \"forStatement\";\n\n    constructor(loc: Location,\n                readonly init: ExpressionStatement | NoOp | Declaration,\n                readonly test: ExpressionStatement | NoOp,\n                readonly update: Expression | undefined,\n                readonly body: Statement) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        yield this.init;\n        yield this.test;\n        if (this.update) yield this.update;\n        yield this.body;\n    }\n}\n\nexport class WhileLoop extends Statement {\n    readonly type = \"whileStatement\";\n\n    constructor(loc: Location, readonly test: Expression, readonly body: Statement) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        yield this.test;\n        yield this.body;\n    }\n}\n\nexport class DoWhileLoop extends Statement {\n    readonly type = \"doWhileStatement\";\n\n    constructor(loc: Location, readonly body: Statement, readonly test: Expression) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        yield this.body;\n        yield this.test;\n    }\n}\n\nexport class GotoStatement extends Statement {\n    readonly type = \"gotoStatement\";\n\n    constructor(loc: Location, readonly target: string) {\n        super(loc);\n    }\n}\n\nexport class ContinueStatement extends Statement {\n    readonly type = \"continueStatement\";\n}\n\nexport class BreakStatement extends Statement {\n    readonly type = \"breakStatement\";\n}\n\nexport class ReturnStatement extends Statement {\n    readonly type = \"returnStatement\";\n\n    constructor(loc: Location, readonly value?: Expression) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        if (this.value) yield this.value;\n    }\n}\n\nexport class FunctionDefinition extends ParseNode {\n    readonly type = \"functionDefinition\";\n\n    constructor(loc: Location,\n                readonly typeInfo: DeclarationSpecifiers,\n                readonly declarator: Declarator,\n                readonly body: CompoundStatement) {\n        super(loc);\n    }\n\n    *children(): IterableIterator<ParseNode> {\n        yield this.typeInfo;\n        yield this.declarator;\n        yield this.body;\n    }\n}\n\nexport type TranslationUnit = ReadonlyArray<FunctionDefinition | Declaration>;\n","import {CError} from \"../c_error\";\nimport {getArithmeticType} from \"../tree/types\";\nimport * as pt from \"./parsetree\";\nimport {ParseNode, TypeSpecifier} from \"./parsetree\";\n\nconst validatorMap = new Map<typeof ParseNode, ((node: ParseNode, parents: ParseNode[]) => void)[]>();\n\nexport function validate<T extends Iterable<ParseNode>>(nodeList: T, parents: ParseNode[] = []): T {\n    for (const node of nodeList) {\n        parents.push(node);\n        validate(node.children(), parents);\n        parents.pop();\n\n        for (const validator of validatorMap.get(Object.getPrototypeOf(node).constructor) ?? []) {\n            validator(node, parents);\n        }\n    }\n    return nodeList;\n}\n\nexport class ParseTreeValidationError extends CError {\n    readonly name = \"TreeValidationError\";\n\n    constructor(node: ParseNode | undefined, message: string, node2?: ParseNode) {\n        super(node && node.loc ? `Line ${node.loc.first_line + 1}: ${message}` : message, node, node2);\n    }\n}\n\nfunction validator<T extends ParseNode>(type: { new(...args: any[]): T}, fn: (node: T, parents: ParseNode[]) => void) {\n    const validators = validatorMap.get(type);\n    if (validators) {\n        validators.push(fn as any);\n    } else {\n        validatorMap.set(type, [fn as any]);\n    }\n}\n\n// DeclarationSpecifiers/SpecifierQualifiers validation\nfunction typeLookup(specifierList: ReadonlyArray<pt.TypeSpecifier>, node?: ParseNode) {\n    if (specifierList.every(v => typeof v === 'string')) {\n        if (!getArithmeticType(specifierList as ReadonlyArray<TypeSpecifier & string>)) {\n            throw new ParseTreeValidationError(node, \"Invalid specifiers - \" + specifierList.join(\", \"));\n        }\n    }\n}\n\nconst typeValidation = (d: pt.SpecifierQualifiers | pt.DeclarationSpecifiers) => {\n    if (d.qualifierList.length > 1) throw new ParseTreeValidationError(d, \"Invalid qualifiers.\");\n    typeLookup(d.specifierList, d);\n};\n\nvalidator(pt.SpecifierQualifiers, typeValidation);\nvalidator(pt.DeclarationSpecifiers, typeValidation);\nvalidator(pt.DeclarationSpecifiers, (d, parents) => {\n    if (d.storageList.length > 1) throw new ParseTreeValidationError(d, \"Invalid storage class list.\");\n    if (d.fnSpecifierList.length > 1) throw new ParseTreeValidationError(d, \"Invalid fn specifier list.\");\n\n    if (d.storageList[0] === \"typedef\" && parents.length !== 1) {\n        throw new ParseTreeValidationError(d, \"Nested typedefs are not allowed\");\n    }\n});\n\n// Constant expr validation\nfunction constExprValidation(n: ParseNode, parents: ParseNode[]) {\n    for (let i = parents.length - 1; i >= 0; i--) {\n        if (!(parents[i] instanceof pt.Expression) || parents[i].type === \"sizeof\") return;\n        if (parents[i].type === \"constantExpr\") throw new ParseTreeValidationError(n, \"Invalid constant expr.\");\n    }\n}\n\nvalidator(pt.UnaryExpression, (node, parent) => {\n    switch (node.type) {\n    case \"postfixIncrement\":\n    case \"postfixDecrement\":\n    case \"prefixIncrement\":\n    case \"prefixDecrement\":\n    case \"addressOf\": // If integers are required (believe this is always the case?)\n    case \"dereference\":\n        constExprValidation(node, parent);\n    }\n});\nvalidator(pt.BinaryExpression, (node, parent) => {\n    switch (node.type) {\n    case \"comma\":\n    case \"arraySubscript\": // If int\n        constExprValidation(node, parent);\n    }\n});\nvalidator(pt.FunctionCallExpression, constExprValidation);\n\n// If int\nvalidator(pt.MemberAccessExpression, constExprValidation);\n","import {CError} from \"../c_error\";\nimport type {TypeSpecifier, TypeQualifier, ParseNode} from \"../parsing/parsetree\";\n\n// types for expressions and declarations in the IR\nexport type CType = CNotFuncType | CFuncType;\nexport type CNotFuncType = CArithmetic | CPointer | CArray | CStruct | CUnion | CVoid;\nexport type CQualifiedType<T extends CType> = T & {qualifier?: TypeQualifier};\n\nexport class CFuncType {\n    readonly typeName = \"function\";\n    readonly bytes = 0;\n    readonly alignment = 1;\n    readonly incomplete = false;\n\n    constructor(readonly node: ParseNode | undefined,\n                readonly returnType: CQualifiedType<CNotFuncType>,\n                readonly parameterTypes: CQualifiedType<CNotFuncType>[],\n                public parameterNames?: string[],\n                readonly variadic: boolean = false) {\n        // return type and parameter types must be complete\n        if (!(returnType instanceof CVoid)) checkTypeComplete(returnType);\n        parameterTypes.forEach(x => checkTypeComplete(x));\n    }\n\n    equals(t: Object): boolean {\n        return t instanceof CFuncType\n            && t.returnType.equals(this.returnType)\n            && t.parameterTypes.length === this.parameterTypes.length\n            && t.parameterTypes.every((other, i) => this.parameterTypes[i].equals(other))\n            && t.variadic === this.variadic;\n    }\n}\n\nexport class CPointer {\n    readonly typeName = \"pointer\";\n    readonly bytes = 4;\n    readonly alignment = 4;\n    readonly incomplete = false;\n    readonly qualifier?: TypeQualifier;\n\n    constructor(readonly node: ParseNode | undefined, readonly type: CType, constant: boolean = false) {\n        // allow pointers to incomplete types\n        if (constant) this.qualifier = \"const\";\n    }\n\n    equals(t: object): boolean {\n        return t instanceof CPointer && t.qualifier === this.qualifier && this.type.equals(t.type);\n    }\n}\n\nexport class CArray {\n    readonly typeName = \"array\";\n    readonly alignment: number;\n\n    constructor(readonly node: ParseNode | undefined, readonly type: CType, public length?: number) {\n        checkTypeComplete(type);\n        this.alignment = type.alignment;\n    }\n\n    get bytes(): number {\n        if (this.length === undefined) throw new Error(\"Tried to get size of incomplete type\");\n        return this.type.bytes * this.length;\n    }\n\n    get incomplete(): boolean {\n        return this.length === undefined;\n    }\n\n    equals(t: object): boolean {\n        return t instanceof CArray && t.length === this.length && this.type.equals(t.type);\n    }\n}\n\nexport type CCompound = CStruct | CUnion | CEnum;\n\nexport class CCompoundMember {\n    constructor(readonly node: ParseNode, readonly name: string, readonly type: CQualifiedType<CNotFuncType>) {}\n}\n\nexport class CStruct {\n    readonly typeName = \"struct\";\n    private _members: ReadonlyArray<CCompoundMember> | undefined;\n\n    constructor(public node: ParseNode | undefined, readonly name: string | undefined) {\n    }\n\n    get members(): ReadonlyArray<CCompoundMember> {\n        if (this._members === undefined) throw new Error(\"Can't get members of an incomplete struct\");\n        return this._members;\n    }\n\n    set members(children: ReadonlyArray<CCompoundMember>) {\n        if (this._members !== undefined) throw new Error(\"Can't redefine a struct's members\");\n        if (children.length === 0) throw new Error(\"Struct must have one or more member\");\n        this._members = children;\n    }\n\n    get bytes(): number {\n        if (this.incomplete) throw new Error(\"Tried to get size of incomplete type\");\n        return this.members.reduce((total, x) => {\n            // align member type\n            total = Math.ceil(total / x.type.alignment) * x.type.alignment;\n            return total + x.type.bytes;\n        }, 0);\n    }\n\n    get alignment(): number {\n        return Math.max(...this.members.map(x => x.type.alignment));\n    }\n\n    get incomplete(): boolean {\n        return this._members === undefined;\n    }\n\n    equals(t: object): boolean {\n        /** \"Structures, unions and enumerations with different tags are distinct,\n         * and a tagless union, structure, or enumeration specifies a unique type\" */\n        if (this.name === undefined) return this === t;\n        return t instanceof CStruct && t.name === this.name;\n    }\n\n    memberType(m: string): CType {\n        const member = this.members.find(x => x.name === m);\n        if (member) return member.type;\n        throw new Error(`Struct does not contain member \"${m}\"`);\n    }\n\n    hasConstMember(): boolean { // if the struct contains one or more const members\n        return this.members.find(m =>\n            getQualifier(m.type) || ((m.type instanceof CUnion || m.type instanceof CStruct) && m.type.hasConstMember())\n        ) !== undefined;\n    }\n}\n\nexport class CUnion {\n    readonly typeName = \"union\";\n    private _members: ReadonlyArray<CCompoundMember> | undefined;\n\n    constructor(public node: ParseNode | undefined, readonly name: string | undefined) {\n    }\n\n    get members(): ReadonlyArray<CCompoundMember> {\n        if (this._members === undefined) throw new Error(\"Can't get members of an incomplete union\");\n        return this._members;\n    }\n\n    set members(children: ReadonlyArray<CCompoundMember>) {\n        if (this._members !== undefined) throw new Error(\"Can't redefine a union's members\");\n        if (children.length === 0) throw new Error(\"Struct must have one or more member\");\n        this._members = children;\n    }\n\n    get bytes(): number {\n        if (this.incomplete) throw new Error(\"Tried to get size of incomplete type\");\n        return this.members.reduce((total, x) => Math.max(total, x.type.bytes), 0);\n    }\n\n    get alignment(): number {\n        return Math.max(...this.members.map(x => x.type.alignment));\n    }\n\n    get incomplete(): boolean {\n        return this._members === undefined;\n    }\n\n    equals(t: object): boolean {\n        if (this.name === undefined) return this === t;\n        return t instanceof CUnion && t.name === this.name;\n    }\n\n    memberType(m: string): CType {\n        const member = this.members.find(x => x.name === m);\n        if (member) return member.type;\n        throw new Error(`Union does not contain member \"${m}\"`);\n    }\n\n    hasConstMember(): boolean { // if the union has one or more const members\n        return this.members.find(m =>\n            getQualifier(m.type) || ((m.type instanceof CUnion || m.type instanceof CStruct) && m.type.hasConstMember())\n        ) !== undefined;\n    }\n}\n\nexport type CEnumValue = {name: string, value: bigint};\nexport class CEnum {\n    readonly typeName = \"enum\";\n    private _values: ReadonlyArray<CEnumValue> | undefined;\n\n    constructor(public node: ParseNode | undefined, readonly name: string | undefined) {\n    }\n\n    get values(): ReadonlyArray<CEnumValue> {\n        if (this._values === undefined) throw new Error(\"Can't get values of an incomplete enum\");\n        return this._values;\n    }\n\n    set values(children: ReadonlyArray<CEnumValue>) {\n        if (this._values !== undefined) throw new Error(\"Can't redefine an enum's values\");\n        if (children.length === 0) throw new Error(\"Enum must have one or more value\");\n        this._values = children;\n    }\n\n    get incomplete(): boolean {\n        return this._values === undefined;\n    }\n\n    equals(t: object): boolean {\n        if (this.name === undefined) return this === t;\n        return t instanceof CEnum && t.name === this.name;\n    }\n}\n\nexport class CVoid {\n    readonly typeName = \"void\";\n    readonly bytes = 0;\n    readonly alignment = 1;\n    readonly incomplete = true;\n    readonly node = undefined;\n\n    equals(t: object): boolean {\n        return t instanceof CVoid;\n    }\n}\n\nexport class CArithmetic {\n    readonly typeName = \"arithmetic\";\n    readonly incomplete = false;\n    readonly node = undefined;\n    readonly alignment: number;\n\n    private constructor(readonly name: string, readonly bytes: number, readonly type: \"float\" | \"signed\" | \"unsigned\") {\n        this.alignment = bytes;\n    }\n\n    equals(t: object): boolean {\n        return t instanceof CArithmetic && t.name === this.name && t.type === this.type && t.bytes === this.bytes;\n    }\n\n    get minValue(): bigint | number {\n        if (CArithmetic.BOOL.equals(this)) return 0;\n\n        switch (this.type) {\n        case \"float\":\n            return -Infinity;\n        case \"unsigned\":\n            return 0;\n        case \"signed\":\n            return -(2n ** (BigInt(this.bytes * 8) - 1n));\n        }\n    }\n\n    get maxValue(): bigint | number {\n        if (CArithmetic.BOOL.equals(this)) return 1;\n\n        switch (this.type) {\n        case \"float\":\n            return Infinity;\n        case \"unsigned\":\n            return 2n ** BigInt(this.bytes * 8) - 1n;\n        case \"signed\":\n            return 2n ** (BigInt(this.bytes * 8) - 1n) - 1n;\n        }\n    }\n\n    static readonly Fp32 = new CArithmetic(\"float\", 4, \"float\");\n    static readonly Fp64 = new CArithmetic(\"double\", 8, \"float\");\n\n    static readonly U8 = new CArithmetic(\"char\", 1, \"unsigned\");\n    static readonly S8 = new CArithmetic(\"signed char\", 1, \"signed\");\n    static readonly U16 = new CArithmetic(\"unsigned short\", 2, \"unsigned\");\n    static readonly S16 = new CArithmetic(\"short\", 2, \"signed\");\n    static readonly U32 = new CArithmetic(\"unsigned int\", 4, \"unsigned\");\n    static readonly S32 = new CArithmetic(\"int\", 4, \"signed\");\n    static readonly U64 = new CArithmetic(\"unsigned long\", 8, \"unsigned\");\n    static readonly S64 = new CArithmetic(\"long\", 8, \"signed\");\n\n    static readonly BOOL = new CArithmetic(\"bool\", 4, \"signed\");\n}\n\nexport const CSizeT = CArithmetic.U32;\n\n\nconst constType = Symbol(\"const\"); // hidden property key\n\n/**\n * Add a qualifier to a type.\n *\n * This creates a new object with the qualifier attached, using the existing type as its prototype, allowing it to be\n * treated as the existing type. This new object is also cached on the existing type using a field referenced by a\n * symbol, so it can't be accessed when enumerating the fields and doesn't affect existing code.\n */\nexport function addQualifier<T extends CType>(t: T, qualifier?: TypeQualifier): CQualifiedType<T> {\n    if (qualifier === undefined) return t;\n    if (Object.prototype.hasOwnProperty.call(t, \"qualifier\")) {\n        throw new Error(\"Type already has a qualifier\");\n    }\n\n    const baseType = t as Record<typeof constType, any>;\n    if (baseType[constType]) {\n        // const type already exists\n        return baseType[constType];\n    }\n\n    const type = Object.setPrototypeOf({qualifier, _base: t}, t);\n    baseType[constType] = type;\n    return type;\n}\n\nexport function getQualifier(t: CQualifiedType<CType>): TypeQualifier | undefined {\n    return t?.qualifier;\n}\n\n/** integer promotion from the C standard */\nexport function integerPromotion(t: CArithmetic): CArithmetic {\n    if (t.type === \"float\") return t;\n    if (t.bytes < CArithmetic.S32.bytes || t === CArithmetic.BOOL) return CArithmetic.S32;\n    return t;\n}\n\n/** \"The usual arithmetic conversions\" from the C standard */\nexport function usualArithmeticConversion(t1: CArithmetic, t2: CArithmetic): CArithmetic {\n    if (t1 === CArithmetic.Fp64 || t2 === CArithmetic.Fp64) return CArithmetic.Fp64;\n    if (t1 === CArithmetic.Fp32 || t2 === CArithmetic.Fp32) return CArithmetic.Fp32;\n\n    // integer promotion\n    t1 = integerPromotion(t1);\n    t2 = integerPromotion(t2);\n\n    if (t1 === CArithmetic.U64 || t2 === CArithmetic.U64) return CArithmetic.U64;\n    if (t1 === CArithmetic.S64 || t2 === CArithmetic.S64) return CArithmetic.S64;\n    if (t1 === CArithmetic.U32 || t2 === CArithmetic.U32) return CArithmetic.U32;\n    return CArithmetic.S32;\n}\n\n/** Convert a list of specifier strings (e.g. \"signed\", \"int\") into a CType instance. */\nexport function getArithmeticType(specifierList: ReadonlyArray<TypeSpecifier & string>): CArithmetic | CVoid | undefined {\n    const copy = specifierList.slice();\n\n    function remove(s: TypeSpecifier & string) { // remove an item from a list if present, and return whether it was\n        const idx = copy.indexOf(s);\n        if (idx > -1) {\n            copy.splice(idx, 1);\n            return true;\n        }\n        return false;\n    }\n\n    function check<T>(x: T): T | undefined { // check that there are no specifiers left to be processed\n        if (copy.length > 0) return undefined; // extra specifiers so this type is invalid (e.g. \"unsigned signed int\")\n        return x;\n    }\n\n    if (remove(\"void\")) { // if \"void\" in list\n        return check(new CVoid()); // then the type must be void, check no extra specifiers were provided\n    } else if (remove(\"double\")) {\n        remove(\"long\"); // remove \"long\" if present, as treating \"long double\" as normal doubles\n        return check(CArithmetic.Fp64);\n    } else if (remove(\"float\")) {\n        return check(CArithmetic.Fp32);\n    } else if (remove(\"char\")) {\n        if (remove(\"signed\")) return check(CArithmetic.S8);\n        remove(\"unsigned\");\n        return check(CArithmetic.U8);\n    } else if (remove(\"short\")) {\n        remove(\"int\"); // remove optional \"int\" (\"short int\" === \"int\")\n        if (remove(\"unsigned\")) return check(CArithmetic.U16);\n        remove(\"signed\");\n        return check(CArithmetic.S16);\n    } else if (remove(\"long\")) {\n        remove(\"long\"); // remove an 2nd \"long\" if present, as treating \"long long\" as \"long\"\n        remove(\"int\");\n        if (remove(\"unsigned\")) return check(CArithmetic.U64);\n        remove(\"signed\");\n        return check(CArithmetic.S64);\n    } else if (remove(\"int\")) {\n        if (remove(\"unsigned\")) return check(CArithmetic.U32);\n        remove(\"signed\");\n        return check(CArithmetic.S32);\n    } else if (remove(\"unsigned\")) { // support just `unsigned` and `signed`\n        return check(CArithmetic.U32);\n    } else if (remove(\"signed\")) {\n        return check(CArithmetic.S32);\n    } else if (remove(\"bool\")) {\n        return check(CArithmetic.BOOL);\n    }\n    return undefined;\n}\n\n/** Assert that type is complete */\nexport function checkTypeComplete<T extends CType>(type: T, node: ParseNode | undefined = type.node): T {\n    if (type.incomplete) {\n        throw new class extends CError {\n            name = \"IncompleteTypeError\";\n        }(\"Invalid use of an incomplete type\", node);\n    }\n    return type;\n}\n","\n/* parser generated by jison 0.6.1-215 */\n\n/*\n * Returns a Parser object of the following structure:\n *\n *  Parser: {\n *    yy: {}     The so-called \"shared state\" or rather the *source* of it;\n *               the real \"shared state\" `yy` passed around to\n *               the rule actions, etc. is a derivative/copy of this one,\n *               not a direct reference!\n *  }\n *\n *  Parser.prototype: {\n *    yy: {},\n *    EOF: 1,\n *    TERROR: 2,\n *\n *    trace: function(errorMessage, ...),\n *\n *    JisonParserError: function(msg, hash),\n *\n *    quoteName: function(name),\n *               Helper function which can be overridden by user code later on: put suitable\n *               quotes around literal IDs in a description string.\n *\n *    originalQuoteName: function(name),\n *               The basic quoteName handler provided by JISON.\n *               `cleanupAfterParse()` will clean up and reset `quoteName()` to reference this function\n *               at the end of the `parse()`.\n *\n *    describeSymbol: function(symbol),\n *               Return a more-or-less human-readable description of the given symbol, when\n *               available, or the symbol itself, serving as its own 'description' for lack\n *               of something better to serve up.\n *\n *               Return NULL when the symbol is unknown to the parser.\n *\n *    symbols_: {associative list: name ==> number},\n *    terminals_: {associative list: number ==> name},\n *    nonterminals: {associative list: rule-name ==> {associative list: number ==> rule-alt}},\n *    terminal_descriptions_: (if there are any) {associative list: number ==> description},\n *    productions_: [...],\n *\n *    performAction: function parser__performAction(yytext, yyleng, yylineno, yyloc, yystate, yysp, yyvstack, yylstack, yystack, yysstack),\n *\n *               The function parameters and `this` have the following value/meaning:\n *               - `this`    : reference to the `yyval` internal object, which has members (`$` and `_$`)\n *                             to store/reference the rule value `$$` and location info `@$`.\n *\n *                 One important thing to note about `this` a.k.a. `yyval`: every *reduce* action gets\n *                 to see the same object via the `this` reference, i.e. if you wish to carry custom\n *                 data from one reduce action through to the next within a single parse run, then you\n *                 may get nasty and use `yyval` a.k.a. `this` for storing you own semi-permanent data.\n *\n *                 `this.yy` is a direct reference to the `yy` shared state object.\n *\n *                 `%parse-param`-specified additional `parse()` arguments have been added to this `yy`\n *                 object at `parse()` start and are therefore available to the action code via the\n *                 same named `yy.xxxx` attributes (where `xxxx` represents a identifier name from\n *                 the %parse-param` list.\n *\n *               - `yytext`  : reference to the lexer value which belongs to the last lexer token used\n *                             to match this rule. This is *not* the look-ahead token, but the last token\n *                             that's actually part of this rule.\n *\n *                 Formulated another way, `yytext` is the value of the token immediately preceeding\n *                 the current look-ahead token.\n *                 Caveats apply for rules which don't require look-ahead, such as epsilon rules.\n *\n *               - `yyleng`  : ditto as `yytext`, only now for the lexer.yyleng value.\n *\n *               - `yylineno`: ditto as `yytext`, only now for the lexer.yylineno value.\n *\n *               - `yyloc`   : ditto as `yytext`, only now for the lexer.yylloc lexer token location info.\n *\n *                               WARNING: since jison 0.4.18-186 this entry may be NULL/UNDEFINED instead\n *                               of an empty object when no suitable location info can be provided.\n *\n *               - `yystate` : the current parser state number, used internally for dispatching and\n *                               executing the action code chunk matching the rule currently being reduced.\n *\n *               - `yysp`    : the current state stack position (a.k.a. 'stack pointer')\n *\n *                 This one comes in handy when you are going to do advanced things to the parser\n *                 stacks, all of which are accessible from your action code (see the next entries below).\n *\n *                 Also note that you can access this and other stack index values using the new double-hash\n *                 syntax, i.e. `##$ === ##0 === yysp`, while `##1` is the stack index for all things\n *                 related to the first rule term, just like you have `$1`, `@1` and `#1`.\n *                 This is made available to write very advanced grammar action rules, e.g. when you want\n *                 to investigate the parse state stack in your action code, which would, for example,\n *                 be relevant when you wish to implement error diagnostics and reporting schemes similar\n *                 to the work described here:\n *\n *                 + Pottier, F., 2016. Reachability and error diagnosis in LR(1) automata.\n *                   In Journées Francophones des Languages Applicatifs.\n *\n *                 + Jeffery, C.L., 2003. Generating LR syntax error messages from examples.\n *                   ACM Transactions on Programming Languages and Systems (TOPLAS), 25(5), pp.631–640.\n *\n *               - `yyrulelength`: the current rule's term count, i.e. the number of entries occupied on the stack.\n *\n *                 This one comes in handy when you are going to do advanced things to the parser\n *                 stacks, all of which are accessible from your action code (see the next entries below).\n *\n *               - `yyvstack`: reference to the parser value stack. Also accessed via the `$1` etc.\n *                             constructs.\n *\n *               - `yylstack`: reference to the parser token location stack. Also accessed via\n *                             the `@1` etc. constructs.\n *\n *                             WARNING: since jison 0.4.18-186 this array MAY contain slots which are\n *                             UNDEFINED rather than an empty (location) object, when the lexer/parser\n *                             action code did not provide a suitable location info object when such a\n *                             slot was filled!\n *\n *               - `yystack` : reference to the parser token id stack. Also accessed via the\n *                             `#1` etc. constructs.\n *\n *                 Note: this is a bit of a **white lie** as we can statically decode any `#n` reference to\n *                 its numeric token id value, hence that code wouldn't need the `yystack` but *you* might\n *                 want access this array for your own purposes, such as error analysis as mentioned above!\n *\n *                 Note that this stack stores the current stack of *tokens*, that is the sequence of\n *                 already parsed=reduced *nonterminals* (tokens representing rules) and *terminals*\n *                 (lexer tokens *shifted* onto the stack until the rule they belong to is found and\n *                 *reduced*.\n *\n *               - `yysstack`: reference to the parser state stack. This one carries the internal parser\n *                             *states* such as the one in `yystate`, which are used to represent\n *                             the parser state machine in the *parse table*. *Very* *internal* stuff,\n *                             what can I say? If you access this one, you're clearly doing wicked things\n *\n *               - `...`     : the extra arguments you specified in the `%parse-param` statement in your\n *                             grammar definition file.\n *\n *    table: [...],\n *               State transition table\n *               ----------------------\n *\n *               index levels are:\n *               - `state`  --> hash table\n *               - `symbol` --> action (number or array)\n *\n *                 If the `action` is an array, these are the elements' meaning:\n *                 - index [0]: 1 = shift, 2 = reduce, 3 = accept\n *                 - index [1]: GOTO `state`\n *\n *                 If the `action` is a number, it is the GOTO `state`\n *\n *    defaultActions: {...},\n *\n *    parseError: function(str, hash, ExceptionClass),\n *    yyError: function(str, ...),\n *    yyRecovering: function(),\n *    yyErrOk: function(),\n *    yyClearIn: function(),\n *\n *    constructParseErrorInfo: function(error_message, exception_object, expected_token_set, is_recoverable),\n *               Helper function **which will be set up during the first invocation of the `parse()` method**.\n *               Produces a new errorInfo 'hash object' which can be passed into `parseError()`.\n *               See it's use in this parser kernel in many places; example usage:\n *\n *                   var infoObj = parser.constructParseErrorInfo('fail!', null,\n *                                     parser.collect_expected_token_set(state), true);\n *                   var retVal = parser.parseError(infoObj.errStr, infoObj, parser.JisonParserError);\n *\n *    originalParseError: function(str, hash, ExceptionClass),\n *               The basic `parseError` handler provided by JISON.\n *               `cleanupAfterParse()` will clean up and reset `parseError()` to reference this function\n *               at the end of the `parse()`.\n *\n *    options: { ... parser %options ... },\n *\n *    parse: function(input[, args...]),\n *               Parse the given `input` and return the parsed value (or `true` when none was provided by\n *               the root action, in which case the parser is acting as a *matcher*).\n *               You MAY use the additional `args...` parameters as per `%parse-param` spec of this grammar:\n *               these extra `args...` are added verbatim to the `yy` object reference as member variables.\n *\n *               WARNING:\n *               Parser's additional `args...` parameters (via `%parse-param`) MAY conflict with\n *               any attributes already added to `yy` by the jison run-time;\n *               when such a collision is detected an exception is thrown to prevent the generated run-time\n *               from silently accepting this confusing and potentially hazardous situation!\n *\n *               The lexer MAY add its own set of additional parameters (via the `%parse-param` line in\n *               the lexer section of the grammar spec): these will be inserted in the `yy` shared state\n *               object and any collision with those will be reported by the lexer via a thrown exception.\n *\n *    cleanupAfterParse: function(resultValue, invoke_post_methods, do_not_nuke_errorinfos),\n *               Helper function **which will be set up during the first invocation of the `parse()` method**.\n *               This helper API is invoked at the end of the `parse()` call, unless an exception was thrown\n *               and `%options no-try-catch` has been defined for this grammar: in that case this helper MAY\n *               be invoked by calling user code to ensure the `post_parse` callbacks are invoked and\n *               the internal parser gets properly garbage collected under these particular circumstances.\n *\n *    yyMergeLocationInfo: function(first_index, last_index, first_yylloc, last_yylloc, dont_look_back),\n *               Helper function **which will be set up during the first invocation of the `parse()` method**.\n *               This helper API can be invoked to calculate a spanning `yylloc` location info object.\n *\n *               Note: %epsilon rules MAY specify no `first_index` and `first_yylloc`, in which case\n *               this function will attempt to obtain a suitable location marker by inspecting the location stack\n *               backwards.\n *\n *               For more info see the documentation comment further below, immediately above this function's\n *               implementation.\n *\n *    lexer: {\n *        yy: {...},           A reference to the so-called \"shared state\" `yy` once\n *                             received via a call to the `.setInput(input, yy)` lexer API.\n *        EOF: 1,\n *        ERROR: 2,\n *        JisonLexerError: function(msg, hash),\n *        parseError: function(str, hash, ExceptionClass),\n *        setInput: function(input, [yy]),\n *        input: function(),\n *        unput: function(str),\n *        more: function(),\n *        reject: function(),\n *        less: function(n),\n *        pastInput: function(n),\n *        upcomingInput: function(n),\n *        showPosition: function(),\n *        test_match: function(regex_match_array, rule_index, ...),\n *        next: function(...),\n *        lex: function(...),\n *        begin: function(condition),\n *        pushState: function(condition),\n *        popState: function(),\n *        topState: function(),\n *        _currentRules: function(),\n *        stateStackSize: function(),\n *        cleanupAfterLex: function()\n *\n *        options: { ... lexer %options ... },\n *\n *        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START, ...),\n *        rules: [...],\n *        conditions: {associative list: name ==> set},\n *    }\n *  }\n *\n *\n *  token location info (@$, _$, etc.): {\n *    first_line: n,\n *    last_line: n,\n *    first_column: n,\n *    last_column: n,\n *    range: [start_number, end_number]\n *               (where the numbers are indexes into the input string, zero-based)\n *  }\n *\n * ---\n *\n * The `parseError` function receives a 'hash' object with these members for lexer and\n * parser errors:\n *\n *  {\n *    text:        (matched text)\n *    token:       (the produced terminal token, if any)\n *    token_id:    (the produced terminal token numeric ID, if any)\n *    line:        (yylineno)\n *    loc:         (yylloc)\n *  }\n *\n * parser (grammar) errors will also provide these additional members:\n *\n *  {\n *    expected:    (array describing the set of expected tokens;\n *                  may be UNDEFINED when we cannot easily produce such a set)\n *    state:       (integer (or array when the table includes grammar collisions);\n *                  represents the current internal state of the parser kernel.\n *                  can, for example, be used to pass to the `collect_expected_token_set()`\n *                  API to obtain the expected token set)\n *    action:      (integer; represents the current internal action which will be executed)\n *    new_state:   (integer; represents the next/planned internal state, once the current\n *                  action has executed)\n *    recoverable: (boolean: TRUE when the parser MAY have an error recovery rule\n *                  available for this particular error)\n *    state_stack: (array: the current parser LALR/LR internal state stack; this can be used,\n *                  for instance, for advanced error analysis and reporting)\n *    value_stack: (array: the current parser LALR/LR internal `$$` value stack; this can be used,\n *                  for instance, for advanced error analysis and reporting)\n *    location_stack: (array: the current parser LALR/LR internal location stack; this can be used,\n *                  for instance, for advanced error analysis and reporting)\n *    yy:          (object: the current parser internal \"shared state\" `yy`\n *                  as is also available in the rule actions; this can be used,\n *                  for instance, for advanced error analysis and reporting)\n *    lexer:       (reference to the current lexer instance used by the parser)\n *    parser:      (reference to the current parser instance)\n *  }\n *\n * while `this` will reference the current parser instance.\n *\n * When `parseError` is invoked by the lexer, `this` will still reference the related *parser*\n * instance, while these additional `hash` fields will also be provided:\n *\n *  {\n *    lexer:       (reference to the current lexer instance which reported the error)\n *  }\n *\n * When `parseError` is invoked by the parser due to a **JavaScript exception** being fired\n * from either the parser or lexer, `this` will still reference the related *parser*\n * instance, while these additional `hash` fields will also be provided:\n *\n *  {\n *    exception:   (reference to the exception thrown)\n *  }\n *\n * Please do note that in the latter situation, the `expected` field will be omitted as\n * this type of failure is assumed not to be due to *parse errors* but rather due to user\n * action code in either parser or lexer failing unexpectedly.\n *\n * ---\n *\n * You can specify parser options by setting / modifying the `.yy` object of your Parser instance.\n * These options are available:\n *\n * ### options which are global for all parser instances\n *\n *  Parser.pre_parse: function(yy)\n *                 optional: you can specify a pre_parse() function in the chunk following\n *                 the grammar, i.e. after the last `%%`.\n *  Parser.post_parse: function(yy, retval, parseInfo) { return retval; }\n *                 optional: you can specify a post_parse() function in the chunk following\n *                 the grammar, i.e. after the last `%%`. When it does not return any value,\n *                 the parser will return the original `retval`.\n *\n * ### options which can be set up per parser instance\n *\n *  yy: {\n *      pre_parse:  function(yy)\n *                 optional: is invoked before the parse cycle starts (and before the first\n *                 invocation of `lex()`) but immediately after the invocation of\n *                 `parser.pre_parse()`).\n *      post_parse: function(yy, retval, parseInfo) { return retval; }\n *                 optional: is invoked when the parse terminates due to success ('accept')\n *                 or failure (even when exceptions are thrown).\n *                 `retval` contains the return value to be produced by `Parser.parse()`;\n *                 this function can override the return value by returning another.\n *                 When it does not return any value, the parser will return the original\n *                 `retval`.\n *                 This function is invoked immediately before `parser.post_parse()`.\n *\n *      parseError: function(str, hash, ExceptionClass)\n *                 optional: overrides the default `parseError` function.\n *      quoteName: function(name),\n *                 optional: overrides the default `quoteName` function.\n *  }\n *\n *  parser.lexer.options: {\n *      pre_lex:  function()\n *                 optional: is invoked before the lexer is invoked to produce another token.\n *                 `this` refers to the Lexer object.\n *      post_lex: function(token) { return token; }\n *                 optional: is invoked when the lexer has produced a token `token`;\n *                 this function can override the returned token value by returning another.\n *                 When it does not return any (truthy) value, the lexer will return\n *                 the original `token`.\n *                 `this` refers to the Lexer object.\n *\n *      ranges: boolean\n *                 optional: `true` ==> token location info will include a .range[] member.\n *      flex: boolean\n *                 optional: `true` ==> flex-like lexing behaviour where the rules are tested\n *                 exhaustively to find the longest match.\n *      backtrack_lexer: boolean\n *                 optional: `true` ==> lexer regexes are tested in order and for invoked;\n *                 the lexer terminates the scan when a token is returned by the action code.\n *      xregexp: boolean\n *                 optional: `true` ==> lexer rule regexes are \"extended regex format\" requiring the\n *                 `XRegExp` library. When this `%option` has not been specified at compile time, all lexer\n *                 rule regexes have been written as standard JavaScript RegExp expressions.\n *  }\n */\n\n        \n    \n            var c_grammar = (function () {\n\n\n// See also:\n// http://stackoverflow.com/questions/1382107/whats-a-good-way-to-extend-error-in-javascript/#35881508\n// but we keep the prototype.constructor and prototype.name assignment lines too for compatibility\n// with userland code which might access the derived class in a 'classic' way.\nfunction JisonParserError(msg, hash) {\n    Object.defineProperty(this, 'name', {\n        enumerable: false,\n        writable: false,\n        value: 'JisonParserError'\n    });\n\n    if (msg == null) msg = '???';\n\n    Object.defineProperty(this, 'message', {\n        enumerable: false,\n        writable: true,\n        value: msg\n    });\n\n    this.hash = hash;\n\n    var stacktrace;\n    if (hash && hash.exception instanceof Error) {\n        var ex2 = hash.exception;\n        this.message = ex2.message || msg;\n        stacktrace = ex2.stack;\n    }\n    if (!stacktrace) {\n        if (Error.hasOwnProperty('captureStackTrace')) {        // V8/Chrome engine\n            Error.captureStackTrace(this, this.constructor);\n        } else {\n            stacktrace = (new Error(msg)).stack;\n        }\n    }\n    if (stacktrace) {\n        Object.defineProperty(this, 'stack', {\n            enumerable: false,\n            writable: false,\n            value: stacktrace\n        });\n    }\n}\n\nif (typeof Object.setPrototypeOf === 'function') {\n    Object.setPrototypeOf(JisonParserError.prototype, Error.prototype);\n} else {\n    JisonParserError.prototype = Object.create(Error.prototype);\n}\nJisonParserError.prototype.constructor = JisonParserError;\nJisonParserError.prototype.name = 'JisonParserError';\n\n\n\n\n        // helper: reconstruct the productions[] table\n        function bp(s) {\n            var rv = [];\n            var p = s.pop;\n            var r = s.rule;\n            for (var i = 0, l = p.length; i < l; i++) {\n                rv.push([\n                    p[i],\n                    r[i]\n                ]);\n            }\n            return rv;\n        }\n    \n\n\n        // helper: reconstruct the defaultActions[] table\n        function bda(s) {\n            var rv = {};\n            var d = s.idx;\n            var g = s.goto;\n            for (var i = 0, l = d.length; i < l; i++) {\n                var j = d[i];\n                rv[j] = g[i];\n            }\n            return rv;\n        }\n    \n\n\n        // helper: reconstruct the 'goto' table\n        function bt(s) {\n            var rv = [];\n            var d = s.len;\n            var y = s.symbol;\n            var t = s.type;\n            var a = s.state;\n            var m = s.mode;\n            var g = s.goto;\n            for (var i = 0, l = d.length; i < l; i++) {\n                var n = d[i];\n                var q = {};\n                for (var j = 0; j < n; j++) {\n                    var z = y.shift();\n                    switch (t.shift()) {\n                    case 2:\n                        q[z] = [\n                            m.shift(),\n                            g.shift()\n                        ];\n                        break;\n\n                    case 0:\n                        q[z] = a.shift();\n                        break;\n\n                    default:\n                        // type === 1: accept\n                        q[z] = [\n                            3\n                        ];\n                    }\n                }\n                rv.push(q);\n            }\n            return rv;\n        }\n    \n\n\n        // helper: runlength encoding with increment step: code, length: step (default step = 0)\n        // `this` references an array\n        function s(c, l, a) {\n            a = a || 0;\n            for (var i = 0; i < l; i++) {\n                this.push(c);\n                c += a;\n            }\n        }\n\n        // helper: duplicate sequence from *relative* offset and length.\n        // `this` references an array\n        function c(i, l) {\n            i = this.length - i;\n            for (l += i; i < l; i++) {\n                this.push(this[i]);\n            }\n        }\n\n        // helper: unpack an array using helpers and data, all passed in an array argument 'a'.\n        function u(a) {\n            var rv = [];\n            for (var i = 0, l = a.length; i < l; i++) {\n                var e = a[i];\n                // Is this entry a helper function?\n                if (typeof e === 'function') {\n                    i++;\n                    e.apply(rv, a[i]);\n                } else {\n                    rv.push(e);\n                }\n            }\n            return rv;\n        }\n    \n\nvar parser = {\n    // Code Generator Information Report\n    // ---------------------------------\n    //\n    // Options:\n    //\n    //   default action mode: ............. [\"none\",\"merge\"]\n    //   test-compile action mode: ........ \"parser:*,lexer:*\"\n    //   try..catch: ...................... true\n    //   default resolve on conflict: ..... true\n    //   on-demand look-ahead: ............ false\n    //   error recovery token skip maximum: 3\n    //   yyerror in parse actions is: ..... NOT recoverable,\n    //   yyerror in lexer actions and other non-fatal lexer are:\n    //   .................................. NOT recoverable,\n    //   debug grammar/output: ............ false\n    //   has partial LR conflict upgrade:   true\n    //   rudimentary token-stack support:   false\n    //   parser table compression mode: ... 2\n    //   export debug tables: ............. false\n    //   export *all* tables: ............. false\n    //   module type: ..................... commonjs\n    //   parser engine type: .............. lalr\n    //   output main() in the module: ..... true\n    //   has user-specified main(): ....... false\n    //   has user-specified require()/import modules for main():\n    //   .................................. false\n    //   number of expected conflicts: .... 0\n    //\n    //\n    // Parser Analysis flags:\n    //\n    //   no significant actions (parser is a language matcher only):\n    //   .................................. false\n    //   uses yyleng: ..................... false\n    //   uses yylineno: ................... false\n    //   uses yytext: ..................... true\n    //   uses yylloc: ..................... false\n    //   uses ParseError API: ............. false\n    //   uses YYERROR: .................... false\n    //   uses YYRECOVERING: ............... false\n    //   uses YYERROK: .................... false\n    //   uses YYCLEARIN: .................. false\n    //   tracks rule values: .............. true\n    //   assigns rule values: ............. true\n    //   uses location tracking: .......... true\n    //   assigns location: ................ true\n    //   uses yystack: .................... false\n    //   uses yysstack: ................... false\n    //   uses yysp: ....................... true\n    //   uses yyrulelength: ............... false\n    //   uses yyMergeLocationInfo API: .... true\n    //   has error recovery: .............. false\n    //   has error reporting: ............. false\n    //\n    // --------- END OF REPORT -----------\n\ntrace: function no_op_trace() { },\nJisonParserError: JisonParserError,\nyy: {},\noptions: {\n  type: \"lalr\",\n  hasPartialLrUpgradeOnConflict: true,\n  errorRecoveryTokenDiscardCount: 3\n},\nsymbols_: {\n  \"!\": 14,\n  \"$accept\": 0,\n  \"$end\": 1,\n  \"%\": 16,\n  \"&\": 9,\n  \"(\": 3,\n  \")\": 4,\n  \"*\": 10,\n  \"+\": 11,\n  \",\": 8,\n  \"-\": 12,\n  \".\": 7,\n  \"/\": 15,\n  \":\": 22,\n  \";\": 24,\n  \"<\": 17,\n  \"=\": 23,\n  \">\": 18,\n  \"?\": 21,\n  \"ADD_ASSIGN\": 49,\n  \"AND_ASSIGN\": 53,\n  \"AND_OP\": 44,\n  \"BREAK\": 87,\n  \"CASE\": 77,\n  \"CHAR\": 60,\n  \"CONST\": 73,\n  \"CONSTANT_CHAR\": 32,\n  \"CONSTANT_FLOAT\": 28,\n  \"CONSTANT_HEX\": 29,\n  \"CONSTANT_INT\": 31,\n  \"CONSTANT_OCTAL\": 30,\n  \"CONTINUE\": 86,\n  \"DEC_OP\": 36,\n  \"DEFAULT\": 78,\n  \"DIV_ASSIGN\": 47,\n  \"DO\": 83,\n  \"DOUBLE\": 65,\n  \"ELLIPSIS\": 76,\n  \"ELSE\": 80,\n  \"ENUM\": 72,\n  \"EOF\": 1,\n  \"EQ_OP\": 42,\n  \"EXTERN\": 57,\n  \"FLOAT\": 64,\n  \"FOR\": 84,\n  \"GE_OP\": 41,\n  \"GOTO\": 85,\n  \"IDENTIFIER\": 27,\n  \"IF\": 79,\n  \"IMPORT\": 75,\n  \"INC_OP\": 35,\n  \"INLINE\": 74,\n  \"INT\": 62,\n  \"LEFT_ASSIGN\": 51,\n  \"LEFT_OP\": 38,\n  \"LE_OP\": 40,\n  \"LONG\": 63,\n  \"MOD_ASSIGN\": 48,\n  \"MUL_ASSIGN\": 46,\n  \"NE_OP\": 43,\n  \"OR_ASSIGN\": 55,\n  \"OR_OP\": 45,\n  \"PTR_OP\": 34,\n  \"RETURN\": 88,\n  \"RIGHT_ASSIGN\": 52,\n  \"RIGHT_OP\": 39,\n  \"SHORT\": 61,\n  \"SIGNED\": 66,\n  \"SIZEOF\": 37,\n  \"STATIC\": 58,\n  \"STRING_LITERAL\": 33,\n  \"STRUCT\": 70,\n  \"SUB_ASSIGN\": 50,\n  \"SWITCH\": 81,\n  \"TYPEDEF\": 56,\n  \"TYPE_NAME\": 69,\n  \"UNION\": 71,\n  \"UNSIGNED\": 67,\n  \"VOID\": 59,\n  \"WHILE\": 82,\n  \"XOR_ASSIGN\": 54,\n  \"[\": 5,\n  \"]\": 6,\n  \"^\": 19,\n  \"_BOOL\": 68,\n  \"abstract_declarator\": 141,\n  \"additive_expression\": 101,\n  \"and_expression\": 105,\n  \"argument_expression_list\": 96,\n  \"assignment_expression\": 111,\n  \"assignment_operator\": 112,\n  \"ast_tree\": 89,\n  \"block_item\": 149,\n  \"block_item_list\": 148,\n  \"cast_expression\": 99,\n  \"compound_statement\": 147,\n  \"concat_string_literals\": 93,\n  \"conditional_expression\": 110,\n  \"constant\": 91,\n  \"constant_expression\": 114,\n  \"declaration\": 115,\n  \"declaration_specifiers\": 116,\n  \"declarator\": 133,\n  \"direct_abstract_declarator\": 142,\n  \"direct_declarator\": 134,\n  \"enum_specifier\": 128,\n  \"enumerator\": 130,\n  \"enumerator_list\": 129,\n  \"equality_expression\": 104,\n  \"error\": 2,\n  \"exclusive_or_expression\": 106,\n  \"expression\": 113,\n  \"expression_statement\": 150,\n  \"external_declaration\": 155,\n  \"function_definition\": 156,\n  \"function_specifier\": 132,\n  \"identifier\": 90,\n  \"inclusive_or_expression\": 107,\n  \"init_declarator\": 118,\n  \"init_declarator_list\": 117,\n  \"initializer\": 143,\n  \"initializer_list\": 144,\n  \"iteration_statement\": 152,\n  \"jump_statement\": 153,\n  \"labeled_statement\": 146,\n  \"logical_and_expression\": 108,\n  \"logical_or_expression\": 109,\n  \"multiplicative_expression\": 100,\n  \"parameter_declaration\": 139,\n  \"parameter_list\": 138,\n  \"parameter_type_list\": 137,\n  \"pointer\": 135,\n  \"postfix_expression\": 95,\n  \"primary_expression\": 94,\n  \"relational_expression\": 103,\n  \"selection_statement\": 151,\n  \"shift_expression\": 102,\n  \"specifier_qualifier_list\": 125,\n  \"statement\": 145,\n  \"storage_class_specifier\": 119,\n  \"string_literal\": 92,\n  \"struct_declaration\": 124,\n  \"struct_declaration_list\": 123,\n  \"struct_declarator\": 127,\n  \"struct_declarator_list\": 126,\n  \"struct_or_union\": 122,\n  \"struct_or_union_specifier\": 121,\n  \"translation_unit\": 154,\n  \"type_name\": 140,\n  \"type_qualifier\": 131,\n  \"type_qualifier_list\": 136,\n  \"type_specifier\": 120,\n  \"unary_expression\": 97,\n  \"unary_operator\": 98,\n  \"{\": 25,\n  \"|\": 20,\n  \"}\": 26,\n  \"~\": 13\n},\nterminals_: {\n  1: \"EOF\",\n  2: \"error\",\n  3: \"(\",\n  4: \")\",\n  5: \"[\",\n  6: \"]\",\n  7: \".\",\n  8: \",\",\n  9: \"&\",\n  10: \"*\",\n  11: \"+\",\n  12: \"-\",\n  13: \"~\",\n  14: \"!\",\n  15: \"/\",\n  16: \"%\",\n  17: \"<\",\n  18: \">\",\n  19: \"^\",\n  20: \"|\",\n  21: \"?\",\n  22: \":\",\n  23: \"=\",\n  24: \";\",\n  25: \"{\",\n  26: \"}\",\n  27: \"IDENTIFIER\",\n  28: \"CONSTANT_FLOAT\",\n  29: \"CONSTANT_HEX\",\n  30: \"CONSTANT_OCTAL\",\n  31: \"CONSTANT_INT\",\n  32: \"CONSTANT_CHAR\",\n  33: \"STRING_LITERAL\",\n  34: \"PTR_OP\",\n  35: \"INC_OP\",\n  36: \"DEC_OP\",\n  37: \"SIZEOF\",\n  38: \"LEFT_OP\",\n  39: \"RIGHT_OP\",\n  40: \"LE_OP\",\n  41: \"GE_OP\",\n  42: \"EQ_OP\",\n  43: \"NE_OP\",\n  44: \"AND_OP\",\n  45: \"OR_OP\",\n  46: \"MUL_ASSIGN\",\n  47: \"DIV_ASSIGN\",\n  48: \"MOD_ASSIGN\",\n  49: \"ADD_ASSIGN\",\n  50: \"SUB_ASSIGN\",\n  51: \"LEFT_ASSIGN\",\n  52: \"RIGHT_ASSIGN\",\n  53: \"AND_ASSIGN\",\n  54: \"XOR_ASSIGN\",\n  55: \"OR_ASSIGN\",\n  56: \"TYPEDEF\",\n  57: \"EXTERN\",\n  58: \"STATIC\",\n  59: \"VOID\",\n  60: \"CHAR\",\n  61: \"SHORT\",\n  62: \"INT\",\n  63: \"LONG\",\n  64: \"FLOAT\",\n  65: \"DOUBLE\",\n  66: \"SIGNED\",\n  67: \"UNSIGNED\",\n  68: \"_BOOL\",\n  69: \"TYPE_NAME\",\n  70: \"STRUCT\",\n  71: \"UNION\",\n  72: \"ENUM\",\n  73: \"CONST\",\n  74: \"INLINE\",\n  75: \"IMPORT\",\n  76: \"ELLIPSIS\",\n  77: \"CASE\",\n  78: \"DEFAULT\",\n  79: \"IF\",\n  80: \"ELSE\",\n  81: \"SWITCH\",\n  82: \"WHILE\",\n  83: \"DO\",\n  84: \"FOR\",\n  85: \"GOTO\",\n  86: \"CONTINUE\",\n  87: \"BREAK\",\n  88: \"RETURN\"\n},\nTERROR: 2,\n    EOF: 1,\n\n    // internals: defined here so the object *structure* doesn't get modified by parse() et al,\n    // thus helping JIT compilers like Chrome V8.\n    originalQuoteName: null,\n    originalParseError: null,\n    cleanupAfterParse: null,\n    constructParseErrorInfo: null,\n    yyMergeLocationInfo: null,\n\n    __reentrant_call_depth: 0,      // INTERNAL USE ONLY\n    __error_infos: [],              // INTERNAL USE ONLY: the set of parseErrorInfo objects created since the last cleanup\n    __error_recovery_infos: [],     // INTERNAL USE ONLY: the set of parseErrorInfo objects created since the last cleanup\n\n    // APIs which will be set up depending on user action code analysis:\n    //yyRecovering: 0,\n    //yyErrOk: 0,\n    //yyClearIn: 0,\n\n    // Helper APIs\n    // -----------\n\n    // Helper function which can be overridden by user code later on: put suitable quotes around\n    // literal IDs in a description string.\n    quoteName: function parser_quoteName(id_str) {\n        return '\"' + id_str + '\"';\n    },\n\n    // Return the name of the given symbol (terminal or non-terminal) as a string, when available.\n    //\n    // Return NULL when the symbol is unknown to the parser.\n    getSymbolName: function parser_getSymbolName(symbol) {\n        if (this.terminals_[symbol]) {\n            return this.terminals_[symbol];\n        }\n\n        // Otherwise... this might refer to a RULE token i.e. a non-terminal: see if we can dig that one up.\n        //\n        // An example of this may be where a rule's action code contains a call like this:\n        //\n        //      parser.getSymbolName(#$)\n        //\n        // to obtain a human-readable name of the current grammar rule.\n        var s = this.symbols_;\n        for (var key in s) {\n            if (s[key] === symbol) {\n                return key;\n            }\n        }\n        return null;\n    },\n\n    // Return a more-or-less human-readable description of the given symbol, when available,\n    // or the symbol itself, serving as its own 'description' for lack of something better to serve up.\n    //\n    // Return NULL when the symbol is unknown to the parser.\n    describeSymbol: function parser_describeSymbol(symbol) {\n        if (symbol !== this.EOF && this.terminal_descriptions_ && this.terminal_descriptions_[symbol]) {\n            return this.terminal_descriptions_[symbol];\n        }\n        else if (symbol === this.EOF) {\n            return 'end of input';\n        }\n        var id = this.getSymbolName(symbol);\n        if (id) {\n            return this.quoteName(id);\n        }\n        return null;\n    },\n\n    // Produce a (more or less) human-readable list of expected tokens at the point of failure.\n    //\n    // The produced list may contain token or token set descriptions instead of the tokens\n    // themselves to help turning this output into something that easier to read by humans\n    // unless `do_not_describe` parameter is set, in which case a list of the raw, *numeric*,\n    // expected terminals and nonterminals is produced.\n    //\n    // The returned list (array) will not contain any duplicate entries.\n    collect_expected_token_set: function parser_collect_expected_token_set(state, do_not_describe) {\n        var TERROR = this.TERROR;\n        var tokenset = [];\n        var check = {};\n        // Has this (error?) state been outfitted with a custom expectations description text for human consumption?\n        // If so, use that one instead of the less palatable token set.\n        if (!do_not_describe && this.state_descriptions_ && this.state_descriptions_[state]) {\n            return [\n                this.state_descriptions_[state]\n            ];\n        }\n        for (var p in this.table[state]) {\n            p = +p;\n            if (p !== TERROR) {\n                var d = do_not_describe ? p : this.describeSymbol(p);\n                if (d && !check[d]) {\n                    tokenset.push(d);\n                    check[d] = true;        // Mark this token description as already mentioned to prevent outputting duplicate entries.\n                }\n            }\n        }\n        return tokenset;\n    },\nproductions_: bp({\n  pop: u([\n  89,\n  89,\n  90,\n  s,\n  [91, 5],\n  92,\n  93,\n  93,\n  s,\n  [94, 4],\n  s,\n  [95, 8],\n  96,\n  96,\n  s,\n  [97, 6],\n  s,\n  [98, 6],\n  99,\n  99,\n  s,\n  [100, 4],\n  s,\n  [101, 3],\n  s,\n  [102, 3],\n  s,\n  [103, 5],\n  s,\n  [104, 3],\n  105,\n  105,\n  106,\n  106,\n  107,\n  107,\n  108,\n  108,\n  109,\n  109,\n  110,\n  110,\n  111,\n  111,\n  s,\n  [112, 11],\n  113,\n  113,\n  114,\n  115,\n  115,\n  s,\n  [116, 8],\n  117,\n  117,\n  118,\n  118,\n  s,\n  [119, 3],\n  s,\n  [120, 13],\n  s,\n  [121, 3],\n  122,\n  122,\n  123,\n  123,\n  124,\n  s,\n  [125, 4],\n  126,\n  126,\n  127,\n  s,\n  [128, 5],\n  129,\n  129,\n  130,\n  130,\n  131,\n  132,\n  132,\n  133,\n  133,\n  s,\n  [134, 6],\n  s,\n  [135, 4],\n  136,\n  136,\n  137,\n  137,\n  138,\n  138,\n  s,\n  [139, 3],\n  140,\n  140,\n  s,\n  [141, 3],\n  s,\n  [142, 9],\n  s,\n  [143, 3],\n  144,\n  144,\n  s,\n  [145, 6],\n  s,\n  [146, 3],\n  147,\n  147,\n  148,\n  148,\n  149,\n  149,\n  150,\n  150,\n  s,\n  [151, 3],\n  s,\n  [152, 6],\n  s,\n  [153, 5],\n  154,\n  154,\n  155,\n  155,\n  156\n]),\n  rule: u([\n  2,\n  s,\n  [1, 9],\n  c,\n  [10, 4],\n  3,\n  1,\n  4,\n  3,\n  4,\n  3,\n  3,\n  2,\n  2,\n  c,\n  [10, 3],\n  s,\n  [2, 4],\n  4,\n  s,\n  [1, 7],\n  4,\n  1,\n  s,\n  [3, 3],\n  c,\n  [4, 3],\n  c,\n  [3, 6],\n  c,\n  [8, 7],\n  c,\n  [36, 3],\n  c,\n  [4, 6],\n  5,\n  c,\n  [4, 3],\n  s,\n  [1, 11],\n  c,\n  [59, 3],\n  c,\n  [3, 3],\n  c,\n  [80, 3],\n  c,\n  [4, 4],\n  c,\n  [32, 4],\n  s,\n  [1, 15],\n  5,\n  4,\n  c,\n  [107, 4],\n  2,\n  3,\n  c,\n  [31, 4],\n  c,\n  [114, 4],\n  5,\n  5,\n  6,\n  c,\n  [40, 8],\n  c,\n  [17, 4],\n  c,\n  [130, 4],\n  c,\n  [125, 3],\n  c,\n  [67, 4],\n  c,\n  [21, 3],\n  c,\n  [139, 3],\n  c,\n  [22, 4],\n  c,\n  [46, 3],\n  3,\n  3,\n  4,\n  c,\n  [4, 4],\n  c,\n  [33, 3],\n  c,\n  [83, 8],\n  c,\n  [41, 3],\n  c,\n  [39, 5],\n  c,\n  [31, 3],\n  5,\n  7,\n  5,\n  5,\n  7,\n  6,\n  7,\n  6,\n  7,\n  c,\n  [49, 3],\n  c,\n  [20, 6],\n  3\n])\n}),\nperformAction: function parser__PerformAction(yytext, yyloc, yystate /* action[1] */, yysp, yyvstack, yylstack) {\n\n          /* this == yyval */\n\n          // the JS engine itself can go and remove these statements when `yy` turns out to be unused in any action code!\n          var yy = this.yy;\n          var yyparser = yy.parser;\n          var yylexer = yy.lexer;\n\n          \n\n          switch (yystate) {\ncase 0:\n    /*! Production::    $accept : ast_tree $end */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,-,-,LT,LA,-,-):\n    this.$ = undefined;\n    this._$ = yylstack[yysp - 1];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,-,-,LT,LA,-,-)\n    break;\n\ncase 1:\n    /*! Production::    ast_tree : translation_unit EOF */\n\n    // default action (generated by JISON mode none/merge :: 2,VT,VA,-,-,LT,LA,-,-):\n    this.$ = undefined;\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 1, yysp);\n    // END of default action (generated by JISON mode none/merge :: 2,VT,VA,-,-,LT,LA,-,-)\n    \n    \n    return yyvstack[yysp - 1];\n    break;\n\ncase 2:\n    /*! Production::    ast_tree : EOF */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,-,-,LT,LA,-,-):\n    this.$ = undefined;\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,-,-,LT,LA,-,-)\n    \n    \n    return [];\n    break;\n\ncase 3:\n    /*! Production::    identifier : IDENTIFIER */\ncase 9:\n    /*! Production::    string_literal : STRING_LITERAL */\ncase 100:\n    /*! Production::    storage_class_specifier : TYPEDEF */\ncase 101:\n    /*! Production::    storage_class_specifier : EXTERN */\ncase 102:\n    /*! Production::    storage_class_specifier : STATIC */\ncase 103:\n    /*! Production::    type_specifier : VOID */\ncase 104:\n    /*! Production::    type_specifier : CHAR */\ncase 105:\n    /*! Production::    type_specifier : SHORT */\ncase 106:\n    /*! Production::    type_specifier : INT */\ncase 107:\n    /*! Production::    type_specifier : LONG */\ncase 108:\n    /*! Production::    type_specifier : FLOAT */\ncase 109:\n    /*! Production::    type_specifier : DOUBLE */\ncase 110:\n    /*! Production::    type_specifier : SIGNED */\ncase 111:\n    /*! Production::    type_specifier : UNSIGNED */\ncase 142:\n    /*! Production::    function_specifier : IMPORT */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-)\n    \n    \n    this.$ = (yytext);\n    break;\n\ncase 4:\n    /*! Production::    constant : CONSTANT_FLOAT */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.Constant(this._$, yytext, \"float\"));\n    break;\n\ncase 5:\n    /*! Production::    constant : CONSTANT_HEX */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.Constant(this._$, yytext, \"hex\"));\n    break;\n\ncase 6:\n    /*! Production::    constant : CONSTANT_OCTAL */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.Constant(this._$, yytext, \"oct\"));\n    break;\n\ncase 7:\n    /*! Production::    constant : CONSTANT_INT */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.Constant(this._$, yytext, \"int\"));\n    break;\n\ncase 8:\n    /*! Production::    constant : CONSTANT_CHAR */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.Constant(this._$, yytext, \"char\"));\n    break;\n\ncase 10:\n    /*! Production::    concat_string_literals : string_literal */\ncase 13:\n    /*! Production::    primary_expression : constant */\ncase 16:\n    /*! Production::    postfix_expression : primary_expression */\ncase 26:\n    /*! Production::    unary_expression : postfix_expression */\ncase 38:\n    /*! Production::    cast_expression : unary_expression */\ncase 40:\n    /*! Production::    multiplicative_expression : cast_expression */\ncase 44:\n    /*! Production::    additive_expression : multiplicative_expression */\ncase 47:\n    /*! Production::    shift_expression : additive_expression */\ncase 50:\n    /*! Production::    relational_expression : shift_expression */\ncase 55:\n    /*! Production::    equality_expression : relational_expression */\ncase 58:\n    /*! Production::    and_expression : equality_expression */\ncase 60:\n    /*! Production::    exclusive_or_expression : and_expression */\ncase 62:\n    /*! Production::    inclusive_or_expression : exclusive_or_expression */\ncase 64:\n    /*! Production::    logical_and_expression : inclusive_or_expression */\ncase 66:\n    /*! Production::    logical_or_expression : logical_and_expression */\ncase 68:\n    /*! Production::    conditional_expression : logical_or_expression */\ncase 70:\n    /*! Production::    assignment_expression : conditional_expression */\ncase 83:\n    /*! Production::    expression : assignment_expression */\ncase 98:\n    /*! Production::    init_declarator : declarator */\ncase 113:\n    /*! Production::    type_specifier : struct_or_union_specifier */\ncase 114:\n    /*! Production::    type_specifier : enum_specifier */\ncase 130:\n    /*! Production::    struct_declarator : declarator */\ncase 144:\n    /*! Production::    declarator : direct_declarator */\ncase 167:\n    /*! Production::    abstract_declarator : direct_abstract_declarator */\ncase 178:\n    /*! Production::    initializer : assignment_expression */\ncase 183:\n    /*! Production::    statement : labeled_statement */\ncase 184:\n    /*! Production::    statement : compound_statement */\ncase 185:\n    /*! Production::    statement : expression_statement */\ncase 186:\n    /*! Production::    statement : selection_statement */\ncase 187:\n    /*! Production::    statement : iteration_statement */\ncase 188:\n    /*! Production::    statement : jump_statement */\ncase 196:\n    /*! Production::    block_item : declaration */\ncase 197:\n    /*! Production::    block_item : statement */\ncase 216:\n    /*! Production::    external_declaration : function_definition */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-)\n    \n    \n    this.$ = (yyvstack[yysp]);\n    break;\n\ncase 11:\n    /*! Production::    concat_string_literals : concat_string_literals string_literal */\n\n    // default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,-,-):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 1, yysp);\n    // END of default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,-,-)\n    \n    \n    this.$ = (yyvstack[yysp - 1] + yyvstack[yysp]);\n    break;\n\ncase 12:\n    /*! Production::    primary_expression : identifier */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.Identifier(this._$, yytext));\n    break;\n\ncase 14:\n    /*! Production::    primary_expression : concat_string_literals */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.StringLiteral(this._$, yyvstack[yysp]));\n    break;\n\ncase 15:\n    /*! Production::    primary_expression : \"(\" expression \")\" */\ncase 146:\n    /*! Production::    direct_declarator : \"(\" declarator \")\" */\ncase 169:\n    /*! Production::    direct_abstract_declarator : \"(\" abstract_declarator \")\" */\ncase 179:\n    /*! Production::    initializer : \"{\" initializer_list \"}\" */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,-,-):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,-,-)\n    \n    \n    this.$ = (yyvstack[yysp - 1]);\n    break;\n\ncase 17:\n    /*! Production::    postfix_expression : postfix_expression \"[\" expression \"]\" */\n\n    // default action (generated by JISON mode none/merge :: 4,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 3, yysp);\n    // END of default action (generated by JISON mode none/merge :: 4,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.BinaryExpression(this._$, \"arraySubscript\", yyvstack[yysp - 3], yyvstack[yysp - 1]));\n    break;\n\ncase 18:\n    /*! Production::    postfix_expression : postfix_expression \"(\" \")\" */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.FunctionCallExpression(this._$, yyvstack[yysp - 2]));\n    break;\n\ncase 19:\n    /*! Production::    postfix_expression : postfix_expression \"(\" argument_expression_list \")\" */\n\n    // default action (generated by JISON mode none/merge :: 4,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 3, yysp);\n    // END of default action (generated by JISON mode none/merge :: 4,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.FunctionCallExpression(this._$, yyvstack[yysp - 3], yyvstack[yysp - 1]));\n    break;\n\ncase 20:\n    /*! Production::    postfix_expression : postfix_expression \".\" identifier */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.MemberAccessExpression(this._$, false, yyvstack[yysp - 2], yyvstack[yysp]));\n    break;\n\ncase 21:\n    /*! Production::    postfix_expression : postfix_expression PTR_OP identifier */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.MemberAccessExpression(this._$, true, yyvstack[yysp - 2], yyvstack[yysp]));\n    break;\n\ncase 22:\n    /*! Production::    postfix_expression : postfix_expression INC_OP */\n\n    // default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 1, yysp);\n    // END of default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.UnaryExpression(this._$, \"postfixIncrement\", yyvstack[yysp - 1]));\n    break;\n\ncase 23:\n    /*! Production::    postfix_expression : postfix_expression DEC_OP */\n\n    // default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 1, yysp);\n    // END of default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.UnaryExpression(this._$, \"postfixDecrement\", yyvstack[yysp - 1]));\n    break;\n\ncase 24:\n    /*! Production::    argument_expression_list : assignment_expression */\ncase 96:\n    /*! Production::    init_declarator_list : init_declarator */\ncase 121:\n    /*! Production::    struct_declaration_list : struct_declaration */\ncase 128:\n    /*! Production::    struct_declarator_list : struct_declarator */\ncase 136:\n    /*! Production::    enumerator_list : enumerator */\ncase 155:\n    /*! Production::    type_qualifier_list : type_qualifier */\ncase 159:\n    /*! Production::    parameter_list : parameter_declaration */\ncase 181:\n    /*! Production::    initializer_list : initializer */\ncase 194:\n    /*! Production::    block_item_list : block_item */\ncase 214:\n    /*! Production::    translation_unit : external_declaration */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-)\n    \n    \n    this.$ = ([yyvstack[yysp]]);\n    break;\n\ncase 25:\n    /*! Production::    argument_expression_list : argument_expression_list \",\" assignment_expression */\ncase 97:\n    /*! Production::    init_declarator_list : init_declarator_list \",\" init_declarator */\ncase 129:\n    /*! Production::    struct_declarator_list : struct_declarator_list \",\" struct_declarator */\ncase 137:\n    /*! Production::    enumerator_list : enumerator_list \",\" enumerator */\ncase 160:\n    /*! Production::    parameter_list : parameter_list \",\" parameter_declaration */\ncase 182:\n    /*! Production::    initializer_list : initializer_list \",\" initializer */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,-,-):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,-,-)\n    \n    \n    this.$ = ((yyvstack[yysp - 2].push(yyvstack[yysp]), yyvstack[yysp - 2]));\n    break;\n\ncase 27:\n    /*! Production::    unary_expression : INC_OP unary_expression */\n\n    // default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 1, yysp);\n    // END of default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.UnaryExpression(this._$, \"prefixIncrement\", yyvstack[yysp]));\n    break;\n\ncase 28:\n    /*! Production::    unary_expression : DEC_OP unary_expression */\n\n    // default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 1, yysp);\n    // END of default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.UnaryExpression(this._$, \"prefixDecrement\", yyvstack[yysp]));\n    break;\n\ncase 29:\n    /*! Production::    unary_expression : unary_operator cast_expression */\n\n    // default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 1, yysp);\n    // END of default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.UnaryExpression(this._$, yyvstack[yysp - 1], yyvstack[yysp]));\n    break;\n\ncase 30:\n    /*! Production::    unary_expression : SIZEOF unary_expression */\n\n    // default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 1, yysp);\n    // END of default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.SizeofExpression(this._$, yyvstack[yysp]));\n    break;\n\ncase 31:\n    /*! Production::    unary_expression : SIZEOF \"(\" type_name \")\" */\n\n    // default action (generated by JISON mode none/merge :: 4,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 3, yysp);\n    // END of default action (generated by JISON mode none/merge :: 4,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.SizeofExpression(this._$, yyvstack[yysp - 1]));\n    break;\n\ncase 32:\n    /*! Production::    unary_operator : \"&\" */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-)\n    \n    \n    this.$ = (\"addressOf\");\n    break;\n\ncase 33:\n    /*! Production::    unary_operator : \"*\" */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-)\n    \n    \n    this.$ = (\"dereference\");\n    break;\n\ncase 34:\n    /*! Production::    unary_operator : \"+\" */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-)\n    \n    \n    this.$ = (\"unaryPlus\");\n    break;\n\ncase 35:\n    /*! Production::    unary_operator : \"-\" */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-)\n    \n    \n    this.$ = (\"unaryMinus\");\n    break;\n\ncase 36:\n    /*! Production::    unary_operator : \"~\" */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-)\n    \n    \n    this.$ = (\"bitwiseNot\");\n    break;\n\ncase 37:\n    /*! Production::    unary_operator : \"!\" */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-)\n    \n    \n    this.$ = (\"logicalNot\");\n    break;\n\ncase 39:\n    /*! Production::    cast_expression : \"(\" type_name \")\" cast_expression */\n\n    // default action (generated by JISON mode none/merge :: 4,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 3, yysp);\n    // END of default action (generated by JISON mode none/merge :: 4,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.CastExpression(this._$, yyvstack[yysp - 2], yyvstack[yysp]));\n    break;\n\ncase 41:\n    /*! Production::    multiplicative_expression : multiplicative_expression \"*\" cast_expression */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.BinaryExpression(this._$, \"mul\", yyvstack[yysp - 2], yyvstack[yysp]));\n    break;\n\ncase 42:\n    /*! Production::    multiplicative_expression : multiplicative_expression \"/\" cast_expression */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.BinaryExpression(this._$, \"div\", yyvstack[yysp - 2], yyvstack[yysp]));\n    break;\n\ncase 43:\n    /*! Production::    multiplicative_expression : multiplicative_expression \"%\" cast_expression */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.BinaryExpression(this._$, \"mod\", yyvstack[yysp - 2], yyvstack[yysp]));\n    break;\n\ncase 45:\n    /*! Production::    additive_expression : additive_expression \"+\" multiplicative_expression */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.BinaryExpression(this._$, \"add\", yyvstack[yysp - 2], yyvstack[yysp]));\n    break;\n\ncase 46:\n    /*! Production::    additive_expression : additive_expression \"-\" multiplicative_expression */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.BinaryExpression(this._$, \"sub\", yyvstack[yysp - 2], yyvstack[yysp]));\n    break;\n\ncase 48:\n    /*! Production::    shift_expression : shift_expression LEFT_OP additive_expression */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.BinaryExpression(this._$, \"bitwiseShiftLeft\", yyvstack[yysp - 2], yyvstack[yysp]));\n    break;\n\ncase 49:\n    /*! Production::    shift_expression : shift_expression RIGHT_OP additive_expression */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.BinaryExpression(this._$, \"bitwiseShiftRight\", yyvstack[yysp - 2], yyvstack[yysp]));\n    break;\n\ncase 51:\n    /*! Production::    relational_expression : relational_expression \"<\" shift_expression */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.BinaryExpression(this._$, \"relationalLT\", yyvstack[yysp - 2], yyvstack[yysp]));\n    break;\n\ncase 52:\n    /*! Production::    relational_expression : relational_expression \">\" shift_expression */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.BinaryExpression(this._$, \"relationalGT\", yyvstack[yysp - 2], yyvstack[yysp]));\n    break;\n\ncase 53:\n    /*! Production::    relational_expression : relational_expression LE_OP shift_expression */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.BinaryExpression(this._$, \"relationalLEq\", yyvstack[yysp - 2], yyvstack[yysp]));\n    break;\n\ncase 54:\n    /*! Production::    relational_expression : relational_expression GE_OP shift_expression */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.BinaryExpression(this._$, \"relationalGEq\", yyvstack[yysp - 2], yyvstack[yysp]));\n    break;\n\ncase 56:\n    /*! Production::    equality_expression : equality_expression EQ_OP relational_expression */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.BinaryExpression(this._$, \"relationalEq\", yyvstack[yysp - 2], yyvstack[yysp]));\n    break;\n\ncase 57:\n    /*! Production::    equality_expression : equality_expression NE_OP relational_expression */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.BinaryExpression(this._$, \"relationalNEq\", yyvstack[yysp - 2], yyvstack[yysp]));\n    break;\n\ncase 59:\n    /*! Production::    and_expression : and_expression \"&\" equality_expression */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.BinaryExpression(this._$, \"bitwiseAnd\", yyvstack[yysp - 2], yyvstack[yysp]));\n    break;\n\ncase 61:\n    /*! Production::    exclusive_or_expression : exclusive_or_expression \"^\" and_expression */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.BinaryExpression(this._$, \"bitwiseXor\", yyvstack[yysp - 2], yyvstack[yysp]));\n    break;\n\ncase 63:\n    /*! Production::    inclusive_or_expression : inclusive_or_expression \"|\" exclusive_or_expression */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.BinaryExpression(this._$, \"bitwiseOr\", yyvstack[yysp - 2], yyvstack[yysp]));\n    break;\n\ncase 65:\n    /*! Production::    logical_and_expression : logical_and_expression AND_OP inclusive_or_expression */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.BinaryExpression(this._$, \"logicalAnd\", yyvstack[yysp - 2], yyvstack[yysp]));\n    break;\n\ncase 67:\n    /*! Production::    logical_or_expression : logical_or_expression OR_OP logical_and_expression */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.BinaryExpression(this._$, \"logicalOr\", yyvstack[yysp - 2], yyvstack[yysp]));\n    break;\n\ncase 69:\n    /*! Production::    conditional_expression : logical_or_expression \"?\" expression \":\" conditional_expression */\n\n    // default action (generated by JISON mode none/merge :: 5,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 4, yysp);\n    // END of default action (generated by JISON mode none/merge :: 5,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.ConditionalExpression(this._$, yyvstack[yysp - 4], yyvstack[yysp - 2], yyvstack[yysp]));\n    break;\n\ncase 71:\n    /*! Production::    assignment_expression : unary_expression assignment_operator assignment_expression */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.AssignmentExpression(this._$, yyvstack[yysp - 1], yyvstack[yysp - 2], yyvstack[yysp]));\n    break;\n\ncase 72:\n    /*! Production::    assignment_operator : \"=\" */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-)\n    \n    \n    this.$ = (undefined);\n    break;\n\ncase 73:\n    /*! Production::    assignment_operator : MUL_ASSIGN */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-)\n    \n    \n    this.$ = (\"mul\");\n    break;\n\ncase 74:\n    /*! Production::    assignment_operator : DIV_ASSIGN */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-)\n    \n    \n    this.$ = (\"div\");\n    break;\n\ncase 75:\n    /*! Production::    assignment_operator : MOD_ASSIGN */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-)\n    \n    \n    this.$ = (\"mod\");\n    break;\n\ncase 76:\n    /*! Production::    assignment_operator : ADD_ASSIGN */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-)\n    \n    \n    this.$ = (\"add\");\n    break;\n\ncase 77:\n    /*! Production::    assignment_operator : SUB_ASSIGN */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-)\n    \n    \n    this.$ = (\"sub\");\n    break;\n\ncase 78:\n    /*! Production::    assignment_operator : LEFT_ASSIGN */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-)\n    \n    \n    this.$ = (\"leftShift\");\n    break;\n\ncase 79:\n    /*! Production::    assignment_operator : RIGHT_ASSIGN */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-)\n    \n    \n    this.$ = (\"rightShift\");\n    break;\n\ncase 80:\n    /*! Production::    assignment_operator : AND_ASSIGN */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-)\n    \n    \n    this.$ = (\"bitwiseAnd\");\n    break;\n\ncase 81:\n    /*! Production::    assignment_operator : XOR_ASSIGN */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-)\n    \n    \n    this.$ = (\"bitwiseXor\");\n    break;\n\ncase 82:\n    /*! Production::    assignment_operator : OR_ASSIGN */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-)\n    \n    \n    this.$ = (\"bitwiseOr\");\n    break;\n\ncase 84:\n    /*! Production::    expression : expression \",\" assignment_expression */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.BinaryExpression(this._$, \"comma\", yyvstack[yysp - 2], yyvstack[yysp]));\n    break;\n\ncase 85:\n    /*! Production::    constant_expression : conditional_expression */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.ConstantExpression(this._$, yyvstack[yysp]));\n    break;\n\ncase 86:\n    /*! Production::    declaration : declaration_specifiers \";\" */\n\n    // default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 1, yysp);\n    // END of default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.Declaration(this._$, yyvstack[yysp - 1]));\n    break;\n\ncase 87:\n    /*! Production::    declaration : declaration_specifiers init_declarator_list \";\" */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.Declaration(this._$, yyvstack[yysp - 2], yyvstack[yysp - 1]));\n    break;\n\ncase 88:\n    /*! Production::    declaration_specifiers : storage_class_specifier */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.DeclarationSpecifiers(this._$, [], [], [yyvstack[yysp]], []));\n    break;\n\ncase 89:\n    /*! Production::    declaration_specifiers : storage_class_specifier declaration_specifiers */\n\n    // default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 1, yysp);\n    // END of default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.DeclarationSpecifiers(this._$, yyvstack[yysp].specifierList, yyvstack[yysp].qualifierList, [yyvstack[yysp - 1], ...yyvstack[yysp].storageList], yyvstack[yysp].fnSpecifierList));\n    break;\n\ncase 90:\n    /*! Production::    declaration_specifiers : type_specifier */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.DeclarationSpecifiers(this._$, [yyvstack[yysp]], [], [], []));\n    break;\n\ncase 91:\n    /*! Production::    declaration_specifiers : type_specifier declaration_specifiers */\n\n    // default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 1, yysp);\n    // END of default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.DeclarationSpecifiers(this._$, [yyvstack[yysp - 1], ...yyvstack[yysp].specifierList], yyvstack[yysp].qualifierList, yyvstack[yysp].storageList, yyvstack[yysp].fnSpecifierList));\n    break;\n\ncase 92:\n    /*! Production::    declaration_specifiers : type_qualifier */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.DeclarationSpecifiers(this._$, [], [yyvstack[yysp]], [], []));\n    break;\n\ncase 93:\n    /*! Production::    declaration_specifiers : type_qualifier declaration_specifiers */\n\n    // default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 1, yysp);\n    // END of default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.DeclarationSpecifiers(this._$, yyvstack[yysp].specifierList, [yyvstack[yysp - 1], ...yyvstack[yysp].qualifierList], yyvstack[yysp].storageList, yyvstack[yysp].fnSpecifierList));\n    break;\n\ncase 94:\n    /*! Production::    declaration_specifiers : function_specifier */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.DeclarationSpecifiers(this._$, [], [], [], [yyvstack[yysp]]));\n    break;\n\ncase 95:\n    /*! Production::    declaration_specifiers : function_specifier declaration_specifiers */\n\n    // default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 1, yysp);\n    // END of default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.DeclarationSpecifiers(this._$, yyvstack[yysp].specifierList, yyvstack[yysp].qualifierList, yyvstack[yysp].storageList, [yyvstack[yysp - 1], ...yyvstack[yysp].fnSpecifierList]));\n    break;\n\ncase 99:\n    /*! Production::    init_declarator : declarator \"=\" initializer */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.InitDeclarator(this._$, yyvstack[yysp - 2], yyvstack[yysp]));\n    break;\n\ncase 112:\n    /*! Production::    type_specifier : _BOOL */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-)\n    \n    \n    this.$ = (\"bool\");\n    break;\n\ncase 115:\n    /*! Production::    type_specifier : TYPE_NAME */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.CustomTypeSpecifier(this._$, yyvstack[yysp]));\n    break;\n\ncase 116:\n    /*! Production::    struct_or_union_specifier : struct_or_union identifier \"{\" struct_declaration_list \"}\" */\n\n    // default action (generated by JISON mode none/merge :: 5,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 4, yysp);\n    // END of default action (generated by JISON mode none/merge :: 5,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.StructUnionSpecifier(this._$, yyvstack[yysp - 4], yyvstack[yysp - 3], yyvstack[yysp - 1]));\n    break;\n\ncase 117:\n    /*! Production::    struct_or_union_specifier : struct_or_union \"{\" struct_declaration_list \"}\" */\n\n    // default action (generated by JISON mode none/merge :: 4,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 3, yysp);\n    // END of default action (generated by JISON mode none/merge :: 4,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.StructUnionSpecifier(this._$, yyvstack[yysp - 3], undefined, yyvstack[yysp - 1]));\n    break;\n\ncase 118:\n    /*! Production::    struct_or_union_specifier : struct_or_union identifier */\n\n    // default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 1, yysp);\n    // END of default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.StructUnionSpecifier(this._$, yyvstack[yysp - 1], yyvstack[yysp]));\n    break;\n\ncase 119:\n    /*! Production::    struct_or_union : STRUCT */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-)\n    \n    \n    this.$ = (\"struct\");\n    break;\n\ncase 120:\n    /*! Production::    struct_or_union : UNION */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-)\n    \n    \n    this.$ = (\"union\");\n    break;\n\ncase 122:\n    /*! Production::    struct_declaration_list : struct_declaration_list struct_declaration */\ncase 156:\n    /*! Production::    type_qualifier_list : type_qualifier_list type_qualifier */\ncase 195:\n    /*! Production::    block_item_list : block_item_list block_item */\ncase 215:\n    /*! Production::    translation_unit : translation_unit external_declaration */\n\n    // default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,-,-):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 1, yysp);\n    // END of default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,-,-)\n    \n    \n    this.$ = ((yyvstack[yysp - 1].push(yyvstack[yysp]), yyvstack[yysp - 1]));\n    break;\n\ncase 123:\n    /*! Production::    struct_declaration : specifier_qualifier_list struct_declarator_list \";\" */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.StructDeclaration(this._$, yyvstack[yysp - 2], yyvstack[yysp - 1]));\n    break;\n\ncase 124:\n    /*! Production::    specifier_qualifier_list : type_specifier specifier_qualifier_list */\n\n    // default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 1, yysp);\n    // END of default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.SpecifierQualifiers(this._$, [yyvstack[yysp - 1], ...yyvstack[yysp].specifierList], yyvstack[yysp].qualifierList));\n    break;\n\ncase 125:\n    /*! Production::    specifier_qualifier_list : type_specifier */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.SpecifierQualifiers(this._$, [yyvstack[yysp]], []));\n    break;\n\ncase 126:\n    /*! Production::    specifier_qualifier_list : type_qualifier specifier_qualifier_list */\n\n    // default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 1, yysp);\n    // END of default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.SpecifierQualifiers(this._$, yyvstack[yysp].specifierList, [yyvstack[yysp - 1], ...yyvstack[yysp].qualifierList]));\n    break;\n\ncase 127:\n    /*! Production::    specifier_qualifier_list : type_qualifier */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.SpecifierQualifiers(this._$, [], [yyvstack[yysp]]));\n    break;\n\ncase 131:\n    /*! Production::    enum_specifier : ENUM \"{\" enumerator_list \"}\" */\n\n    // default action (generated by JISON mode none/merge :: 4,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 3, yysp);\n    // END of default action (generated by JISON mode none/merge :: 4,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.EnumSpecifier(this._$, undefined, yyvstack[yysp - 1]));\n    break;\n\ncase 132:\n    /*! Production::    enum_specifier : ENUM identifier \"{\" enumerator_list \"}\" */\n\n    // default action (generated by JISON mode none/merge :: 5,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 4, yysp);\n    // END of default action (generated by JISON mode none/merge :: 5,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.EnumSpecifier(this._$, yyvstack[yysp - 3], yyvstack[yysp - 1]));\n    break;\n\ncase 133:\n    /*! Production::    enum_specifier : ENUM \"{\" enumerator_list \",\" \"}\" */\n\n    // default action (generated by JISON mode none/merge :: 5,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 4, yysp);\n    // END of default action (generated by JISON mode none/merge :: 5,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.EnumSpecifier(this._$, undefined, yyvstack[yysp - 2]));\n    break;\n\ncase 134:\n    /*! Production::    enum_specifier : ENUM identifier \"{\" enumerator_list \",\" \"}\" */\n\n    // default action (generated by JISON mode none/merge :: 6,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 5, yysp);\n    // END of default action (generated by JISON mode none/merge :: 6,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.EnumSpecifier(this._$, yyvstack[yysp - 4], yyvstack[yysp - 2]));\n    break;\n\ncase 135:\n    /*! Production::    enum_specifier : ENUM identifier */\n\n    // default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 1, yysp);\n    // END of default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.EnumSpecifier(this._$, yyvstack[yysp]));\n    break;\n\ncase 138:\n    /*! Production::    enumerator : identifier */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.Enumerator(this._$, yyvstack[yysp]));\n    break;\n\ncase 139:\n    /*! Production::    enumerator : identifier \"=\" constant_expression */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.Enumerator(this._$, yyvstack[yysp - 2], yyvstack[yysp]));\n    break;\n\ncase 140:\n    /*! Production::    type_qualifier : CONST */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-)\n    \n    \n    this.$ = (\"const\");\n    break;\n\ncase 141:\n    /*! Production::    function_specifier : INLINE */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-)\n    \n    \n    this.$ = (\"inline\");\n    break;\n\ncase 143:\n    /*! Production::    declarator : pointer direct_declarator */\n\n    // default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 1, yysp);\n    // END of default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.PointerDeclarator(this._$, yyvstack[yysp - 1], yyvstack[yysp]));\n    break;\n\ncase 145:\n    /*! Production::    direct_declarator : identifier */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.IdentifierDeclarator(this._$, yyvstack[yysp]));\n    break;\n\ncase 147:\n    /*! Production::    direct_declarator : direct_declarator \"[\" constant_expression \"]\" */\n\n    // default action (generated by JISON mode none/merge :: 4,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 3, yysp);\n    // END of default action (generated by JISON mode none/merge :: 4,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.ArrayDeclarator(this._$, yyvstack[yysp - 3], yyvstack[yysp - 1]));\n    break;\n\ncase 148:\n    /*! Production::    direct_declarator : direct_declarator \"[\" \"]\" */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.ArrayDeclarator(this._$, yyvstack[yysp - 2]));\n    break;\n\ncase 149:\n    /*! Production::    direct_declarator : direct_declarator \"(\" parameter_type_list \")\" */\n\n    // default action (generated by JISON mode none/merge :: 4,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 3, yysp);\n    // END of default action (generated by JISON mode none/merge :: 4,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.FunctionDeclarator(this._$, yyvstack[yysp - 3], yyvstack[yysp - 1], yyvstack[yysp - 1].variadic));\n    break;\n\ncase 150:\n    /*! Production::    direct_declarator : direct_declarator \"(\" \")\" */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.FunctionDeclarator(this._$, yyvstack[yysp - 2]));\n    break;\n\ncase 151:\n    /*! Production::    pointer : \"*\" */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.Pointer(this._$));\n    break;\n\ncase 152:\n    /*! Production::    pointer : \"*\" type_qualifier_list */\n\n    // default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 1, yysp);\n    // END of default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.Pointer(this._$, yyvstack[yysp]));\n    break;\n\ncase 153:\n    /*! Production::    pointer : \"*\" pointer */\n\n    // default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 1, yysp);\n    // END of default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.Pointer(this._$, undefined, yyvstack[yysp]));\n    break;\n\ncase 154:\n    /*! Production::    pointer : \"*\" type_qualifier_list pointer */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.Pointer(this._$, yyvstack[yysp - 1], yyvstack[yysp]));\n    break;\n\ncase 157:\n    /*! Production::    parameter_type_list : parameter_list */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-)\n    \n    \n    this.$ = ((yyvstack[yysp].variadic = false, yyvstack[yysp]));\n    break;\n\ncase 158:\n    /*! Production::    parameter_type_list : parameter_list \",\" ELLIPSIS */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,-,-):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,-,-)\n    \n    \n    this.$ = ((yyvstack[yysp - 2].variadic = true, yyvstack[yysp - 2]));\n    break;\n\ncase 161:\n    /*! Production::    parameter_declaration : declaration_specifiers declarator */\ncase 162:\n    /*! Production::    parameter_declaration : declaration_specifiers abstract_declarator */\n\n    // default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 1, yysp);\n    // END of default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.ParameterDeclaration(this._$, yyvstack[yysp - 1], yyvstack[yysp]));\n    break;\n\ncase 163:\n    /*! Production::    parameter_declaration : declaration_specifiers */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.ParameterDeclaration(this._$, yyvstack[yysp]));\n    break;\n\ncase 164:\n    /*! Production::    type_name : specifier_qualifier_list */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.TypeName(this._$, yyvstack[yysp]));\n    break;\n\ncase 165:\n    /*! Production::    type_name : specifier_qualifier_list abstract_declarator */\n\n    // default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 1, yysp);\n    // END of default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.TypeName(this._$, yyvstack[yysp - 1], yyvstack[yysp]));\n    break;\n\ncase 166:\n    /*! Production::    abstract_declarator : pointer */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.AbstractPointerDeclarator(this._$, yyvstack[yysp]));\n    break;\n\ncase 168:\n    /*! Production::    abstract_declarator : pointer direct_abstract_declarator */\n\n    // default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 1, yysp);\n    // END of default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.AbstractPointerDeclarator(this._$, yyvstack[yysp - 1], yyvstack[yysp]));\n    break;\n\ncase 170:\n    /*! Production::    direct_abstract_declarator : \"[\" \"]\" */\n\n    // default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 1, yysp);\n    // END of default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.AbstractArrayDeclarator(this._$));\n    break;\n\ncase 171:\n    /*! Production::    direct_abstract_declarator : \"[\" constant_expression \"]\" */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.AbstractArrayDeclarator(this._$, undefined, yyvstack[yysp - 1]));\n    break;\n\ncase 172:\n    /*! Production::    direct_abstract_declarator : direct_abstract_declarator \"[\" \"]\" */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.AbstractArrayDeclarator(this._$, yyvstack[yysp - 2]));\n    break;\n\ncase 173:\n    /*! Production::    direct_abstract_declarator : direct_abstract_declarator \"[\" constant_expression \"]\" */\n\n    // default action (generated by JISON mode none/merge :: 4,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 3, yysp);\n    // END of default action (generated by JISON mode none/merge :: 4,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.AbstractArrayDeclarator(this._$, yyvstack[yysp - 3], yyvstack[yysp - 1]));\n    break;\n\ncase 174:\n    /*! Production::    direct_abstract_declarator : \"(\" \")\" */\n\n    // default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 1, yysp);\n    // END of default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.AbstractFunctionDeclarator(this._$));\n    break;\n\ncase 175:\n    /*! Production::    direct_abstract_declarator : \"(\" parameter_type_list \")\" */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.AbstractFunctionDeclarator(this._$, undefined, yyvstack[yysp - 1], yyvstack[yysp - 1].variadic));\n    break;\n\ncase 176:\n    /*! Production::    direct_abstract_declarator : direct_abstract_declarator \"(\" \")\" */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.AbstractFunctionDeclarator(this._$, yyvstack[yysp - 2]));\n    break;\n\ncase 177:\n    /*! Production::    direct_abstract_declarator : direct_abstract_declarator \"(\" parameter_type_list \")\" */\n\n    // default action (generated by JISON mode none/merge :: 4,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 3, yysp);\n    // END of default action (generated by JISON mode none/merge :: 4,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.AbstractFunctionDeclarator(this._$, yyvstack[yysp - 3], yyvstack[yysp - 1], yyvstack[yysp - 1].variadic));\n    break;\n\ncase 180:\n    /*! Production::    initializer : \"{\" initializer_list \",\" \"}\" */\n\n    // default action (generated by JISON mode none/merge :: 4,VT,VA,VU,-,LT,LA,-,-):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 3, yysp);\n    // END of default action (generated by JISON mode none/merge :: 4,VT,VA,VU,-,LT,LA,-,-)\n    \n    \n    this.$ = (yyvstack[yysp - 2]);\n    break;\n\ncase 189:\n    /*! Production::    labeled_statement : identifier \":\" statement */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,-,-):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,-,-)\n    \n    \n    this.$ = (yyvstack[yysp].setLabel(yyvstack[yysp - 2]));\n    break;\n\ncase 190:\n    /*! Production::    labeled_statement : CASE constant_expression \":\" statement */\n\n    // default action (generated by JISON mode none/merge :: 4,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 3, yysp);\n    // END of default action (generated by JISON mode none/merge :: 4,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.CaseStatement(this._$, yyvstack[yysp - 2], yyvstack[yysp]));\n    break;\n\ncase 191:\n    /*! Production::    labeled_statement : DEFAULT \":\" statement */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.DefaultStatement(this._$, yyvstack[yysp]));\n    break;\n\ncase 192:\n    /*! Production::    compound_statement : \"{\" \"}\" */\n\n    // default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 1, yysp);\n    // END of default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.CompoundStatement(this._$, []));\n    break;\n\ncase 193:\n    /*! Production::    compound_statement : \"{\" block_item_list \"}\" */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.CompoundStatement(this._$, yyvstack[yysp - 1]));\n    break;\n\ncase 198:\n    /*! Production::    expression_statement : \";\" */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.NoOp(this._$));\n    break;\n\ncase 199:\n    /*! Production::    expression_statement : expression \";\" */\n\n    // default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 1, yysp);\n    // END of default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.ExpressionStatement(this._$, yyvstack[yysp - 1]));\n    break;\n\ncase 200:\n    /*! Production::    selection_statement : IF \"(\" expression \")\" statement */\n\n    // default action (generated by JISON mode none/merge :: 5,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 4, yysp);\n    // END of default action (generated by JISON mode none/merge :: 5,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.IfStatement(this._$, yyvstack[yysp - 2], yyvstack[yysp]));\n    break;\n\ncase 201:\n    /*! Production::    selection_statement : IF \"(\" expression \")\" statement ELSE statement */\n\n    // default action (generated by JISON mode none/merge :: 7,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 6, yysp);\n    // END of default action (generated by JISON mode none/merge :: 7,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.IfStatement(this._$, yyvstack[yysp - 4], yyvstack[yysp - 2], yyvstack[yysp]));\n    break;\n\ncase 202:\n    /*! Production::    selection_statement : SWITCH \"(\" expression \")\" statement */\n\n    // default action (generated by JISON mode none/merge :: 5,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 4, yysp);\n    // END of default action (generated by JISON mode none/merge :: 5,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.SwitchStatement(this._$, yyvstack[yysp - 2], yyvstack[yysp]));\n    break;\n\ncase 203:\n    /*! Production::    iteration_statement : WHILE \"(\" expression \")\" statement */\n\n    // default action (generated by JISON mode none/merge :: 5,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 4, yysp);\n    // END of default action (generated by JISON mode none/merge :: 5,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.WhileLoop(this._$, yyvstack[yysp - 2], yyvstack[yysp]));\n    break;\n\ncase 204:\n    /*! Production::    iteration_statement : DO statement WHILE \"(\" expression \")\" \";\" */\n\n    // default action (generated by JISON mode none/merge :: 7,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 6, yysp);\n    // END of default action (generated by JISON mode none/merge :: 7,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.DoWhileLoop(this._$, yyvstack[yysp - 5], yyvstack[yysp - 2]));\n    break;\n\ncase 205:\n    /*! Production::    iteration_statement : FOR \"(\" expression_statement expression_statement \")\" statement */\ncase 207:\n    /*! Production::    iteration_statement : FOR \"(\" declaration expression_statement \")\" statement */\n\n    // default action (generated by JISON mode none/merge :: 6,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 5, yysp);\n    // END of default action (generated by JISON mode none/merge :: 6,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.ForLoop(this._$, yyvstack[yysp - 3], yyvstack[yysp - 2], undefined, yyvstack[yysp]));\n    break;\n\ncase 206:\n    /*! Production::    iteration_statement : FOR \"(\" expression_statement expression_statement expression \")\" statement */\ncase 208:\n    /*! Production::    iteration_statement : FOR \"(\" declaration expression_statement expression \")\" statement */\n\n    // default action (generated by JISON mode none/merge :: 7,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 6, yysp);\n    // END of default action (generated by JISON mode none/merge :: 7,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.ForLoop(this._$, yyvstack[yysp - 4], yyvstack[yysp - 3], yyvstack[yysp - 2], yyvstack[yysp]));\n    break;\n\ncase 209:\n    /*! Production::    jump_statement : GOTO identifier \";\" */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.GotoStatement(this._$, yyvstack[yysp - 1]));\n    break;\n\ncase 210:\n    /*! Production::    jump_statement : CONTINUE \";\" */\n\n    // default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 1, yysp);\n    // END of default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.ContinueStatement(this._$));\n    break;\n\ncase 211:\n    /*! Production::    jump_statement : BREAK \";\" */\n\n    // default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 1, yysp);\n    // END of default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.BreakStatement(this._$));\n    break;\n\ncase 212:\n    /*! Production::    jump_statement : RETURN \";\" */\n\n    // default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 1, yysp);\n    // END of default action (generated by JISON mode none/merge :: 2,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.ReturnStatement(this._$));\n    break;\n\ncase 213:\n    /*! Production::    jump_statement : RETURN expression \";\" */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.ReturnStatement(this._$, yyvstack[yysp - 1]));\n    break;\n\ncase 217:\n    /*! Production::    external_declaration : declaration */\n\n    // default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-):\n    this._$ = yylstack[yysp];\n    // END of default action (generated by JISON mode none/merge :: 1,VT,VA,VU,-,LT,LA,-,-)\n    \n    \n    this.$ = ((yylexer.externalDeclaration(yyvstack[yysp]), yyvstack[yysp]));\n    break;\n\ncase 218:\n    /*! Production::    function_definition : declaration_specifiers declarator compound_statement */\n\n    // default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA):\n    this._$ = yyparser.yyMergeLocationInfo(yysp - 2, yysp);\n    // END of default action (generated by JISON mode none/merge :: 3,VT,VA,VU,-,LT,LA,LU,LUbA)\n    \n    \n    this.$ = (new t.FunctionDefinition(this._$, yyvstack[yysp - 2], yyvstack[yysp - 1], yyvstack[yysp]));\n    break;\n\n}\n},\ntable: bt({\n  len: u([\n  34,\n  1,\n  32,\n  s,\n  [0, 4],\n  10,\n  s,\n  [35, 4],\n  s,\n  [0, 19],\n  3,\n  3,\n  s,\n  [0, 4],\n  5,\n  0,\n  2,\n  4,\n  7,\n  0,\n  10,\n  0,\n  7,\n  s,\n  [0, 5],\n  28,\n  23,\n  4,\n  28,\n  0,\n  40,\n  91,\n  0,\n  8,\n  7,\n  39,\n  32,\n  9,\n  0,\n  0,\n  1,\n  23,\n  23,\n  0,\n  9,\n  26,\n  26,\n  2,\n  0,\n  3,\n  4,\n  0,\n  0,\n  41,\n  0,\n  37,\n  8,\n  42,\n  25,\n  25,\n  26,\n  25,\n  c,\n  [25, 3],\n  s,\n  [0, 5],\n  10,\n  0,\n  0,\n  44,\n  61,\n  11,\n  s,\n  [0, 6],\n  12,\n  0,\n  14,\n  18,\n  20,\n  22,\n  25,\n  0,\n  0,\n  90,\n  c,\n  [25, 6],\n  s,\n  [0, 4],\n  39,\n  38,\n  1,\n  0,\n  2,\n  s,\n  [1, 3],\n  59,\n  1,\n  c,\n  [6, 3],\n  40,\n  c,\n  [113, 3],\n  1,\n  s,\n  [0, 3],\n  c,\n  [19, 3],\n  c,\n  [45, 3],\n  0,\n  0,\n  23,\n  0,\n  c,\n  [9, 3],\n  s,\n  [0, 4],\n  4,\n  38,\n  2,\n  2,\n  0,\n  38,\n  s,\n  [0, 11],\n  39,\n  35,\n  39,\n  40,\n  c,\n  [19, 3],\n  c,\n  [9, 3],\n  s,\n  [0, 3],\n  61,\n  34,\n  33,\n  c,\n  [68, 3],\n  7,\n  32,\n  31,\n  30,\n  30,\n  s,\n  [29, 4],\n  28,\n  28,\n  27,\n  27,\n  s,\n  [26, 3],\n  0,\n  0,\n  59,\n  1,\n  59,\n  0,\n  38,\n  s,\n  [39, 3],\n  1,\n  70,\n  c,\n  [85, 4],\n  c,\n  [46, 3],\n  30,\n  0,\n  0,\n  8,\n  4,\n  42,\n  c,\n  [51, 3],\n  8,\n  c,\n  [85, 5],\n  c,\n  [174, 3],\n  2,\n  9,\n  2,\n  c,\n  [99, 5],\n  1,\n  10,\n  11,\n  0,\n  26,\n  c,\n  [103, 3],\n  12,\n  14,\n  18,\n  18,\n  s,\n  [20, 4],\n  22,\n  22,\n  25,\n  c,\n  [168, 3],\n  c,\n  [67, 3],\n  c,\n  [56, 3],\n  2,\n  2,\n  1,\n  41,\n  41,\n  c,\n  [49, 5],\n  39,\n  32,\n  1,\n  c,\n  [156, 3],\n  c,\n  [77, 4],\n  0,\n  37,\n  0,\n  c,\n  [144, 5],\n  s,\n  [59, 3],\n  39,\n  40,\n  40,\n  c,\n  [21, 8],\n  0,\n  52,\n  c,\n  [47, 3],\n  59,\n  2,\n  59,\n  c,\n  [82, 3],\n  59,\n  1,\n  c,\n  [60, 3],\n  c,\n  [62, 3],\n  0,\n  0\n]),\n  symbol: u([\n  1,\n  s,\n  [56, 20, 1],\n  89,\n  115,\n  116,\n  s,\n  [119, 4, 1],\n  128,\n  131,\n  132,\n  154,\n  155,\n  156,\n  1,\n  c,\n  [35, 21],\n  c,\n  [34, 9],\n  155,\n  156,\n  3,\n  10,\n  24,\n  27,\n  90,\n  117,\n  118,\n  133,\n  134,\n  135,\n  3,\n  4,\n  5,\n  8,\n  c,\n  [13, 3],\n  c,\n  [48, 20],\n  c,\n  [47, 8],\n  c,\n  [35, 105],\n  25,\n  27,\n  90,\n  c,\n  [3, 3],\n  8,\n  23,\n  24,\n  25,\n  147,\n  8,\n  24,\n  3,\n  27,\n  90,\n  134,\n  c,\n  [52, 4],\n  c,\n  [14, 3],\n  c,\n  [59, 5],\n  27,\n  73,\n  131,\n  135,\n  136,\n  3,\n  10,\n  27,\n  90,\n  c,\n  [181, 9],\n  25,\n  c,\n  [77, 21],\n  c,\n  [17, 15],\n  s,\n  [120, 6, 1],\n  128,\n  131,\n  27,\n  90,\n  129,\n  130,\n  c,\n  [55, 28],\n  3,\n  s,\n  [9, 6, 1],\n  25,\n  s,\n  [27, 7, 1],\n  35,\n  36,\n  37,\n  s,\n  [90, 6, 1],\n  s,\n  [97, 15, 1],\n  143,\n  c,\n  [40, 7],\n  s,\n  [24, 10, 1],\n  c,\n  [42, 3],\n  c,\n  [80, 20],\n  77,\n  78,\n  79,\n  s,\n  [81, 8, 1],\n  c,\n  [73, 21],\n  113,\n  c,\n  [398, 9],\n  s,\n  [145, 9, 1],\n  c,\n  [221, 4],\n  c,\n  [403, 8],\n  c,\n  [246, 4],\n  6,\n  c,\n  [107, 6],\n  c,\n  [146, 30],\n  114,\n  4,\n  c,\n  [338, 28],\n  137,\n  138,\n  139,\n  c,\n  [317, 9],\n  4,\n  c,\n  [282, 23],\n  26,\n  c,\n  [24, 18],\n  c,\n  [23, 4],\n  c,\n  [142, 4],\n  126,\n  127,\n  c,\n  [143, 6],\n  10,\n  27,\n  c,\n  [36, 18],\n  c,\n  [35, 4],\n  c,\n  [26, 25],\n  8,\n  26,\n  8,\n  23,\n  26,\n  c,\n  [371, 5],\n  c,\n  [343, 39],\n  144,\n  4,\n  6,\n  s,\n  [8, 5, 1],\n  s,\n  [15, 10, 1],\n  26,\n  s,\n  [38, 18, 1],\n  112,\n  c,\n  [37, 3],\n  21,\n  22,\n  24,\n  26,\n  45,\n  s,\n  [3, 10, 1],\n  c,\n  [48, 11],\n  34,\n  35,\n  36,\n  c,\n  [51, 18],\n  c,\n  [128, 7],\n  c,\n  [127, 18],\n  c,\n  [25, 50],\n  99,\n  c,\n  [26, 25],\n  c,\n  [151, 7],\n  44,\n  45,\n  c,\n  [9, 3],\n  c,\n  [140, 3],\n  c,\n  [10, 4],\n  c,\n  [162, 21],\n  s,\n  [33, 4, 1],\n  c,\n  [163, 18],\n  92,\n  c,\n  [88, 17],\n  c,\n  [339, 15],\n  c,\n  [576, 22],\n  c,\n  [361, 6],\n  140,\n  c,\n  [115, 3],\n  c,\n  [94, 4],\n  c,\n  [126, 7],\n  9,\n  c,\n  [12, 18],\n  c,\n  [109, 4],\n  c,\n  [14, 4],\n  c,\n  [134, 6],\n  24,\n  26,\n  c,\n  [127, 6],\n  c,\n  [18, 12],\n  c,\n  [147, 8],\n  c,\n  [20, 4],\n  11,\n  12,\n  c,\n  [22, 20],\n  c,\n  [199, 11],\n  c,\n  [25, 10],\n  c,\n  [778, 85],\n  c,\n  [777, 7],\n  c,\n  [1182, 9],\n  5,\n  c,\n  [325, 16],\n  c,\n  [486, 46],\n  c,\n  [810, 13],\n  22,\n  c,\n  [1109, 3],\n  s,\n  [3, 3],\n  c,\n  [183, 8],\n  c,\n  [46, 10],\n  c,\n  [162, 33],\n  c,\n  [153, 3],\n  c,\n  [152, 5],\n  27,\n  90,\n  24,\n  24,\n  c,\n  [64, 8],\n  c,\n  [722, 31],\n  113,\n  c,\n  [963, 3],\n  6,\n  4,\n  4,\n  8,\n  c,\n  [895, 6],\n  c,\n  [1205, 4],\n  141,\n  142,\n  c,\n  [874, 23],\n  8,\n  24,\n  c,\n  [811, 3],\n  c,\n  [810, 8],\n  c,\n  [196, 31],\n  c,\n  [857, 3],\n  26,\n  c,\n  [42, 37],\n  111,\n  c,\n  [38, 38],\n  113,\n  c,\n  [39, 35],\n  c,\n  [74, 40],\n  4,\n  c,\n  [40, 22],\n  s,\n  [96, 16, 1],\n  27,\n  90,\n  27,\n  90,\n  c,\n  [157, 56],\n  c,\n  [794, 44],\n  c,\n  [100, 34],\n  c,\n  [34, 33],\n  4,\n  8,\n  4,\n  c,\n  [1252, 4],\n  c,\n  [443, 3],\n  c,\n  [43, 32],\n  c,\n  [32, 31],\n  c,\n  [31, 30],\n  c,\n  [30, 59],\n  c,\n  [29, 115],\n  c,\n  [28, 55],\n  c,\n  [27, 53],\n  c,\n  [26, 59],\n  c,\n  [993, 52],\n  22,\n  c,\n  [1053, 60],\n  c,\n  [918, 111],\n  c,\n  [39, 43],\n  82,\n  c,\n  [1204, 18],\n  c,\n  [1449, 20],\n  c,\n  [1438, 31],\n  150,\n  24,\n  8,\n  24,\n  s,\n  [56, 21, 1],\n  c,\n  [33, 8],\n  c,\n  [2155, 5],\n  c,\n  [2486, 3],\n  142,\n  c,\n  [8, 4],\n  c,\n  [2076, 5],\n  c,\n  [102, 21],\n  c,\n  [47, 8],\n  c,\n  [1299, 3],\n  c,\n  [2207, 3],\n  c,\n  [859, 3],\n  c,\n  [2280, 38],\n  c,\n  [2192, 4],\n  c,\n  [2191, 4],\n  c,\n  [1324, 11],\n  c,\n  [1658, 12],\n  c,\n  [2135, 22],\n  8,\n  22,\n  c,\n  [1948, 9],\n  6,\n  8,\n  c,\n  [974, 3],\n  c,\n  [1953, 10],\n  c,\n  [1848, 11],\n  c,\n  [587, 27],\n  4,\n  5,\n  c,\n  [205, 4],\n  10,\n  c,\n  [2403, 28],\n  c,\n  [197, 6],\n  c,\n  [1916, 56],\n  c,\n  [1934, 30],\n  c,\n  [20, 60],\n  c,\n  [1994, 22],\n  c,\n  [2016, 43],\n  c,\n  [2041, 34],\n  c,\n  [805, 50],\n  c,\n  [387, 3],\n  c,\n  [391, 3],\n  c,\n  [1924, 9],\n  c,\n  [697, 32],\n  150,\n  c,\n  [41, 42],\n  c,\n  [627, 4],\n  c,\n  [2865, 70],\n  c,\n  [549, 3],\n  c,\n  [856, 37],\n  c,\n  [1009, 45],\n  c,\n  [1106, 59],\n  c,\n  [59, 118],\n  c,\n  [2030, 56],\n  c,\n  [40, 56],\n  6,\n  4,\n  c,\n  [2640, 43],\n  s,\n  [80, 9, 1],\n  c,\n  [588, 3],\n  c,\n  [653, 60],\n  c,\n  [61, 120],\n  c,\n  [2629, 9],\n  c,\n  [475, 110]\n]),\n  type: u([\n  s,\n  [2, 21],\n  s,\n  [0, 13],\n  1,\n  c,\n  [35, 32],\n  c,\n  [15, 10],\n  s,\n  [2, 27],\n  c,\n  [45, 12],\n  c,\n  [35, 103],\n  c,\n  [3, 6],\n  c,\n  [5, 8],\n  c,\n  [52, 15],\n  c,\n  [69, 6],\n  c,\n  [76, 31],\n  c,\n  [92, 25],\n  c,\n  [55, 46],\n  c,\n  [338, 16],\n  c,\n  [314, 13],\n  s,\n  [2, 47],\n  s,\n  [0, 40],\n  c,\n  [43, 8],\n  c,\n  [73, 46],\n  c,\n  [491, 36],\n  c,\n  [333, 19],\n  c,\n  [409, 26],\n  c,\n  [142, 15],\n  c,\n  [97, 21],\n  c,\n  [26, 38],\n  c,\n  [35, 21],\n  c,\n  [253, 26],\n  c,\n  [329, 34],\n  s,\n  [2, 67],\n  c,\n  [112, 25],\n  c,\n  [25, 33],\n  c,\n  [51, 43],\n  c,\n  [146, 46],\n  c,\n  [576, 61],\n  s,\n  [2, 173],\n  c,\n  [777, 42],\n  c,\n  [1182, 34],\n  c,\n  [105, 50],\n  c,\n  [162, 65],\n  c,\n  [428, 23],\n  c,\n  [409, 35],\n  c,\n  [874, 32],\n  c,\n  [927, 19],\n  c,\n  [1006, 54],\n  c,\n  [42, 27],\n  c,\n  [576, 39],\n  c,\n  [74, 74],\n  c,\n  [40, 24],\n  c,\n  [1420, 3],\n  c,\n  [1389, 71],\n  c,\n  [794, 46],\n  c,\n  [34, 50],\n  c,\n  [1657, 13],\n  c,\n  [43, 29],\n  c,\n  [32, 31],\n  c,\n  [31, 30],\n  c,\n  [30, 59],\n  c,\n  [29, 115],\n  c,\n  [28, 55],\n  c,\n  [27, 53],\n  c,\n  [26, 69],\n  c,\n  [1357, 73],\n  c,\n  [623, 63],\n  c,\n  [918, 78],\n  c,\n  [922, 61],\n  c,\n  [1438, 53],\n  c,\n  [56, 33],\n  c,\n  [2037, 26],\n  c,\n  [902, 45],\n  c,\n  [314, 25],\n  c,\n  [1413, 8],\n  c,\n  [97, 20],\n  c,\n  [1822, 76],\n  c,\n  [116, 13],\n  c,\n  [200, 38],\n  s,\n  [2, 266],\n  c,\n  [865, 54],\n  c,\n  [48, 41],\n  c,\n  [89, 45],\n  c,\n  [2865, 60],\n  c,\n  [73, 33],\n  c,\n  [2165, 68],\n  c,\n  [1166, 59],\n  c,\n  [59, 105],\n  c,\n  [2030, 63],\n  c,\n  [938, 93],\n  c,\n  [2875, 93],\n  c,\n  [61, 121],\n  c,\n  [475, 88]\n]),\n  state: u([\n  1,\n  s,\n  [6, 4, 1],\n  25,\n  31,\n  26,\n  10,\n  11,\n  2,\n  s,\n  [4, 6, 1],\n  c,\n  [12, 5],\n  36,\n  5,\n  44,\n  39,\n  42,\n  37,\n  41,\n  40,\n  47,\n  c,\n  [16, 7],\n  48,\n  c,\n  [8, 7],\n  49,\n  c,\n  [8, 7],\n  50,\n  c,\n  [8, 7],\n  51,\n  54,\n  55,\n  44,\n  60,\n  65,\n  64,\n  63,\n  44,\n  66,\n  41,\n  40,\n  71,\n  25,\n  31,\n  68,\n  69,\n  70,\n  26,\n  72,\n  75,\n  73,\n  74,\n  97,\n  98,\n  107,\n  99,\n  89,\n  83,\n  81,\n  86,\n  s,\n  [115, 6, -1],\n  108,\n  101,\n  96,\n  88,\n  82,\n  80,\n  78,\n  77,\n  128,\n  c,\n  [22, 19],\n  142,\n  132,\n  119,\n  121,\n  c,\n  [76, 7],\n  120,\n  122,\n  123,\n  117,\n  118,\n  s,\n  [124, 4, 1],\n  44,\n  143,\n  144,\n  41,\n  40,\n  c,\n  [67, 6],\n  148,\n  c,\n  [45, 12],\n  147,\n  145,\n  153,\n  c,\n  [43, 7],\n  149,\n  151,\n  152,\n  155,\n  154,\n  c,\n  [112, 3],\n  157,\n  c,\n  [112, 4],\n  c,\n  [8, 3],\n  159,\n  c,\n  [7, 3],\n  44,\n  160,\n  161,\n  162,\n  c,\n  [133, 5],\n  163,\n  c,\n  [19, 5],\n  164,\n  c,\n  [137, 3],\n  168,\n  c,\n  [137, 22],\n  170,\n  169,\n  171,\n  c,\n  [24, 6],\n  191,\n  86,\n  c,\n  [8, 6],\n  193,\n  c,\n  [8, 7],\n  148,\n  86,\n  194,\n  c,\n  [9, 6],\n  195,\n  86,\n  199,\n  c,\n  [58, 20],\n  142,\n  200,\n  c,\n  [89, 3],\n  202,\n  26,\n  72,\n  201,\n  c,\n  [202, 34],\n  219,\n  c,\n  [201, 5],\n  39,\n  42,\n  c,\n  [202, 23],\n  221,\n  c,\n  [66, 22],\n  228,\n  s,\n  [122, 6, 1],\n  230,\n  c,\n  [125, 21],\n  234,\n  44,\n  238,\n  41,\n  240,\n  239,\n  241,\n  c,\n  [239, 7],\n  75,\n  248,\n  c,\n  [88, 20],\n  249,\n  c,\n  [58, 20],\n  254,\n  c,\n  [79, 21],\n  255,\n  c,\n  [64, 17],\n  256,\n  c,\n  [40, 21],\n  257,\n  c,\n  [22, 6],\n  259,\n  c,\n  [23, 14],\n  260,\n  261,\n  262,\n  c,\n  [290, 22],\n  c,\n  [312, 28],\n  263,\n  c,\n  [115, 16],\n  264,\n  c,\n  [17, 15],\n  265,\n  269,\n  268,\n  241,\n  c,\n  [19, 14],\n  271,\n  c,\n  [15, 13],\n  272,\n  c,\n  [14, 12],\n  273,\n  c,\n  [13, 12],\n  274,\n  c,\n  [13, 11],\n  275,\n  c,\n  [12, 11],\n  276,\n  c,\n  [12, 11],\n  277,\n  c,\n  [12, 11],\n  278,\n  c,\n  [12, 10],\n  279,\n  c,\n  [11, 10],\n  280,\n  c,\n  [11, 9],\n  281,\n  c,\n  [10, 9],\n  282,\n  c,\n  [10, 8],\n  283,\n  c,\n  [9, 8],\n  284,\n  c,\n  [9, 8],\n  285,\n  c,\n  [454, 22],\n  286,\n  s,\n  [122, 7, 1],\n  c,\n  [29, 21],\n  288,\n  c,\n  [29, 6],\n  c,\n  [295, 20],\n  289,\n  c,\n  [316, 21],\n  290,\n  c,\n  [22, 21],\n  291,\n  c,\n  [22, 21],\n  292,\n  c,\n  [22, 21],\n  132,\n  295,\n  c,\n  [665, 8],\n  294,\n  c,\n  [833, 8],\n  299,\n  44,\n  60,\n  300,\n  44,\n  c,\n  [13, 8],\n  66,\n  41,\n  240,\n  305,\n  151,\n  152,\n  303,\n  c,\n  [378, 15],\n  c,\n  [593, 6],\n  307,\n  44,\n  308,\n  c,\n  [854, 3],\n  c,\n  [621, 8],\n  c,\n  [841, 15],\n  311,\n  c,\n  [50, 8],\n  317,\n  300,\n  c,\n  [76, 8],\n  269,\n  c,\n  [74, 5],\n  c,\n  [251, 22],\n  318,\n  c,\n  [251, 26],\n  142,\n  132,\n  323,\n  c,\n  [23, 22],\n  324,\n  c,\n  [149, 20],\n  326,\n  c,\n  [110, 8],\n  328,\n  151,\n  152,\n  c,\n  [32, 19],\n  332,\n  c,\n  [75, 20],\n  333,\n  c,\n  [148, 22],\n  334,\n  c,\n  [428, 28],\n  335,\n  c,\n  [29, 28],\n  336,\n  c,\n  [206, 27],\n  337,\n  c,\n  [22, 21],\n  339,\n  c,\n  [22, 21],\n  341,\n  c,\n  [95, 22],\n  346,\n  c,\n  [124, 28],\n  348,\n  c,\n  [29, 28],\n  350,\n  c,\n  [29, 28],\n  352,\n  c,\n  [29, 28],\n  353,\n  c,\n  [29, 6]\n]),\n  mode: u([\n  s,\n  [1, 46],\n  s,\n  [2, 7],\n  c,\n  [27, 101],\n  c,\n  [31, 5],\n  1,\n  c,\n  [27, 7],\n  c,\n  [9, 3],\n  c,\n  [43, 8],\n  c,\n  [18, 5],\n  c,\n  [12, 8],\n  s,\n  [2, 20],\n  c,\n  [100, 22],\n  c,\n  [44, 38],\n  s,\n  [1, 57],\n  c,\n  [96, 6],\n  c,\n  [327, 43],\n  c,\n  [218, 8],\n  c,\n  [369, 35],\n  c,\n  [20, 35],\n  c,\n  [299, 11],\n  c,\n  [352, 20],\n  c,\n  [317, 10],\n  c,\n  [250, 19],\n  c,\n  [24, 7],\n  c,\n  [67, 6],\n  c,\n  [289, 19],\n  c,\n  [310, 86],\n  c,\n  [146, 12],\n  c,\n  [412, 22],\n  c,\n  [440, 60],\n  c,\n  [236, 15],\n  c,\n  [65, 20],\n  c,\n  [8, 22],\n  c,\n  [34, 18],\n  c,\n  [30, 22],\n  c,\n  [87, 7],\n  c,\n  [55, 20],\n  c,\n  [271, 60],\n  c,\n  [246, 30],\n  c,\n  [688, 75],\n  c,\n  [561, 7],\n  c,\n  [502, 7],\n  s,\n  [1, 217],\n  c,\n  [219, 219],\n  s,\n  [1, 232],\n  c,\n  [680, 7],\n  c,\n  [458, 70],\n  c,\n  [1605, 13],\n  c,\n  [1062, 14],\n  c,\n  [1676, 26],\n  c,\n  [123, 26],\n  c,\n  [1116, 48],\n  c,\n  [1134, 38],\n  c,\n  [20, 60],\n  c,\n  [1194, 23],\n  c,\n  [1216, 42],\n  c,\n  [1241, 80],\n  c,\n  [2006, 28],\n  c,\n  [690, 216],\n  s,\n  [2, 42],\n  c,\n  [538, 11],\n  s,\n  [1, 155]\n]),\n  goto: u([\n  3,\n  s,\n  [12, 13, 1],\n  27,\n  33,\n  34,\n  32,\n  28,\n  29,\n  30,\n  35,\n  c,\n  [21, 20],\n  45,\n  43,\n  38,\n  46,\n  s,\n  [88, 7],\n  c,\n  [31, 20],\n  s,\n  [90, 7],\n  c,\n  [27, 20],\n  s,\n  [92, 7],\n  c,\n  [27, 20],\n  s,\n  [94, 7],\n  c,\n  [27, 20],\n  52,\n  46,\n  53,\n  46,\n  98,\n  56,\n  98,\n  57,\n  59,\n  58,\n  45,\n  46,\n  62,\n  144,\n  61,\n  s,\n  [144, 4],\n  s,\n  [151, 4],\n  43,\n  151,\n  28,\n  45,\n  43,\n  46,\n  s,\n  [118, 6],\n  67,\n  s,\n  [118, 21],\n  c,\n  [74, 15],\n  46,\n  s,\n  [135, 6],\n  76,\n  s,\n  [135, 21],\n  100,\n  s,\n  [90, 6, 1],\n  79,\n  46,\n  s,\n  [102, 5, 1],\n  109,\n  84,\n  85,\n  87,\n  c,\n  [18, 7],\n  131,\n  57,\n  116,\n  c,\n  [20, 10],\n  c,\n  [159, 20],\n  129,\n  130,\n  s,\n  [133, 9, 1],\n  c,\n  [144, 3],\n  62,\n  143,\n  61,\n  s,\n  [143, 4],\n  100,\n  146,\n  c,\n  [62, 6],\n  c,\n  [59, 10],\n  150,\n  c,\n  [60, 20],\n  s,\n  [152, 4],\n  43,\n  152,\n  28,\n  156,\n  c,\n  [25, 15],\n  158,\n  c,\n  [16, 15],\n  c,\n  [88, 3],\n  s,\n  [125, 5],\n  c,\n  [23, 15],\n  s,\n  [127, 5],\n  c,\n  [20, 15],\n  166,\n  165,\n  138,\n  167,\n  138,\n  46,\n  c,\n  [206, 18],\n  s,\n  [38, 15],\n  172,\n  s,\n  [38, 10],\n  s,\n  [173, 10, 1],\n  s,\n  [68, 3],\n  183,\n  s,\n  [68, 3],\n  184,\n  186,\n  26,\n  185,\n  26,\n  187,\n  s,\n  [26, 16],\n  188,\n  189,\n  190,\n  s,\n  [26, 18],\n  192,\n  c,\n  [230, 16],\n  c,\n  [17, 17],\n  c,\n  [138, 7],\n  c,\n  [17, 10],\n  196,\n  c,\n  [17, 16],\n  s,\n  [66, 7],\n  197,\n  66,\n  s,\n  [64, 3],\n  198,\n  s,\n  [64, 6],\n  s,\n  [14, 21],\n  109,\n  s,\n  [14, 21],\n  c,\n  [96, 17],\n  c,\n  [272, 15],\n  s,\n  [62, 3],\n  203,\n  s,\n  [62, 7],\n  s,\n  [60, 3],\n  204,\n  s,\n  [60, 8],\n  s,\n  [58, 10],\n  205,\n  206,\n  58,\n  58,\n  s,\n  [55, 4],\n  207,\n  208,\n  s,\n  [55, 6],\n  209,\n  210,\n  s,\n  [55, 4],\n  s,\n  [50, 12],\n  211,\n  212,\n  s,\n  [50, 6],\n  s,\n  [47, 4],\n  213,\n  214,\n  s,\n  [47, 16],\n  s,\n  [44, 4],\n  215,\n  44,\n  44,\n  216,\n  217,\n  s,\n  [44, 16],\n  c,\n  [576, 9],\n  218,\n  c,\n  [576, 43],\n  38,\n  46,\n  s,\n  [12, 15],\n  220,\n  s,\n  [12, 23],\n  c,\n  [248, 17],\n  222,\n  224,\n  223,\n  225,\n  226,\n  227,\n  c,\n  [117, 9],\n  c,\n  [25, 10],\n  c,\n  [96, 11],\n  229,\n  46,\n  231,\n  232,\n  c,\n  [34, 7],\n  233,\n  c,\n  [33, 10],\n  c,\n  [860, 3],\n  235,\n  236,\n  157,\n  237,\n  242,\n  163,\n  243,\n  163,\n  43,\n  46,\n  244,\n  c,\n  [160, 15],\n  246,\n  245,\n  247,\n  c,\n  [590, 8],\n  c,\n  [50, 10],\n  251,\n  250,\n  253,\n  252,\n  c,\n  [21, 17],\n  c,\n  [17, 52],\n  258,\n  c,\n  [18, 16],\n  46,\n  c,\n  [109, 18],\n  c,\n  [482, 32],\n  c,\n  [49, 34],\n  266,\n  224,\n  267,\n  270,\n  164,\n  243,\n  43,\n  c,\n  [178, 69],\n  c,\n  [17, 193],\n  c,\n  [539, 23],\n  287,\n  c,\n  [31, 30],\n  c,\n  [129, 68],\n  293,\n  c,\n  [99, 8],\n  c,\n  [784, 30],\n  296,\n  224,\n  297,\n  c,\n  [23, 20],\n  298,\n  242,\n  166,\n  243,\n  166,\n  46,\n  302,\n  167,\n  301,\n  167,\n  242,\n  304,\n  243,\n  43,\n  46,\n  c,\n  [35, 20],\n  100,\n  306,\n  c,\n  [115, 16],\n  c,\n  [1337, 3],\n  309,\n  c,\n  [1293, 9],\n  310,\n  c,\n  [24, 10],\n  224,\n  312,\n  s,\n  [67, 7],\n  197,\n  67,\n  313,\n  224,\n  314,\n  315,\n  316,\n  s,\n  [65, 3],\n  198,\n  s,\n  [65, 6],\n  s,\n  [63, 3],\n  203,\n  s,\n  [63, 7],\n  c,\n  [193, 17],\n  270,\n  166,\n  243,\n  270,\n  c,\n  [124, 3],\n  c,\n  [123, 20],\n  s,\n  [61, 3],\n  204,\n  s,\n  [61, 8],\n  s,\n  [59, 10],\n  205,\n  206,\n  59,\n  59,\n  s,\n  [56, 4],\n  207,\n  208,\n  s,\n  [56, 6],\n  209,\n  210,\n  s,\n  [56, 4],\n  s,\n  [57, 4],\n  207,\n  208,\n  s,\n  [57, 6],\n  209,\n  210,\n  s,\n  [57, 4],\n  s,\n  [51, 12],\n  211,\n  212,\n  s,\n  [51, 6],\n  s,\n  [52, 12],\n  211,\n  212,\n  s,\n  [52, 6],\n  s,\n  [53, 12],\n  211,\n  212,\n  s,\n  [53, 6],\n  s,\n  [54, 12],\n  211,\n  212,\n  s,\n  [54, 6],\n  s,\n  [48, 4],\n  213,\n  214,\n  s,\n  [48, 16],\n  s,\n  [49, 4],\n  213,\n  214,\n  s,\n  [49, 16],\n  s,\n  [45, 4],\n  215,\n  45,\n  45,\n  216,\n  217,\n  s,\n  [45, 16],\n  s,\n  [46, 4],\n  215,\n  46,\n  46,\n  216,\n  217,\n  s,\n  [46, 16],\n  c,\n  [554, 30],\n  319,\n  224,\n  320,\n  224,\n  321,\n  224,\n  322,\n  c,\n  [492, 18],\n  c,\n  [18, 18],\n  302,\n  168,\n  301,\n  168,\n  100,\n  325,\n  c,\n  [358, 16],\n  327,\n  c,\n  [352, 20],\n  329,\n  330,\n  331,\n  c,\n  [738, 64],\n  c,\n  [30, 67],\n  c,\n  [107, 11],\n  338,\n  c,\n  [18, 17],\n  340,\n  c,\n  [18, 16],\n  342,\n  343,\n  s,\n  [200, 43],\n  344,\n  s,\n  [200, 8],\n  345,\n  224,\n  c,\n  [139, 30],\n  347,\n  c,\n  [32, 31],\n  349,\n  c,\n  [32, 31],\n  351,\n  c,\n  [264, 60]\n])\n}),\ndefaultActions: bda({\n  idx: u([\n  s,\n  [3, 4, 1],\n  s,\n  [12, 19, 1],\n  s,\n  [33, 4, 1],\n  38,\n  42,\n  44,\n  s,\n  [46, 5, 1],\n  55,\n  58,\n  64,\n  65,\n  69,\n  74,\n  77,\n  78,\n  80,\n  s,\n  [89, 7, 1],\n  97,\n  98,\n  s,\n  [102, 6, 1],\n  109,\n  115,\n  116,\n  118,\n  119,\n  120,\n  s,\n  [122, 6, 1],\n  131,\n  142,\n  143,\n  146,\n  147,\n  s,\n  [148, 4, 2],\n  155,\n  156,\n  158,\n  159,\n  s,\n  [161, 5, 1],\n  170,\n  s,\n  [172, 11, 1],\n  189,\n  190,\n  191,\n  193,\n  194,\n  195,\n  199,\n  218,\n  219,\n  223,\n  231,\n  232,\n  233,\n  235,\n  236,\n  238,\n  239,\n  244,\n  245,\n  s,\n  [247, 4, 1],\n  252,\n  254,\n  258,\n  260,\n  261,\n  262,\n  266,\n  268,\n  s,\n  [283, 4, 1],\n  288,\n  289,\n  s,\n  [296, 4, 1],\n  304,\n  306,\n  s,\n  [308, 4, 1],\n  313,\n  314,\n  316,\n  317,\n  318,\n  325,\n  327,\n  s,\n  [329, 5, 1],\n  335,\n  336,\n  342,\n  343,\n  346,\n  348,\n  s,\n  [350, 4, 1]\n]),\n  goto: u([\n  2,\n  214,\n  216,\n  217,\n  s,\n  [100, 16, 1],\n  140,\n  141,\n  142,\n  119,\n  120,\n  1,\n  215,\n  86,\n  96,\n  145,\n  3,\n  s,\n  [89, 4, 2],\n  218,\n  87,\n  153,\n  155,\n  121,\n  136,\n  99,\n  178,\n  70,\n  16,\n  s,\n  [32, 6, 1],\n  12,\n  13,\n  s,\n  [4, 5, 1],\n  10,\n  9,\n  40,\n  192,\n  194,\n  196,\n  197,\n  s,\n  [183, 6, 1],\n  198,\n  83,\n  97,\n  148,\n  85,\n  38,\n  150,\n  159,\n  154,\n  156,\n  146,\n  117,\n  122,\n  128,\n  130,\n  124,\n  126,\n  131,\n  181,\n  s,\n  [72, 11, 1],\n  22,\n  23,\n  s,\n  [27, 4, 1],\n  11,\n  193,\n  195,\n  199,\n  210,\n  211,\n  212,\n  147,\n  149,\n  161,\n  162,\n  116,\n  123,\n  133,\n  137,\n  139,\n  132,\n  179,\n  71,\n  18,\n  24,\n  20,\n  21,\n  15,\n  165,\n  41,\n  42,\n  43,\n  189,\n  191,\n  84,\n  209,\n  213,\n  158,\n  160,\n  174,\n  170,\n  129,\n  134,\n  180,\n  182,\n  17,\n  19,\n  31,\n  39,\n  190,\n  172,\n  176,\n  169,\n  175,\n  171,\n  69,\n  25,\n  202,\n  203,\n  173,\n  177,\n  205,\n  207,\n  201,\n  204,\n  206,\n  208\n])\n}),\nparseError: function parseError(str, hash, ExceptionClass) {\n    if (hash.recoverable) {\n        if (typeof this.trace === 'function') {\n            this.trace(str);\n        }\n        hash.destroy();             // destroy... well, *almost*!\n    } else {\n        if (typeof this.trace === 'function') {\n            this.trace(str);\n        }\n        if (!ExceptionClass) {\n            ExceptionClass = this.JisonParserError;\n        }\n        throw new ExceptionClass(str, hash);\n    }\n},\nparse: function parse(input) {\n    var self = this;\n    var stack = new Array(128);         // token stack: stores token which leads to state at the same index (column storage)\n    var sstack = new Array(128);        // state stack: stores states (column storage)\n\n    var vstack = new Array(128);        // semantic value stack\n    var lstack = new Array(128);        // location stack\n    var table = this.table;\n    var sp = 0;                         // 'stack pointer': index into the stacks\n    var yyloc;\n    var yytext;\n    \n\n\n    var symbol = 0;\n\n\n\n    var TERROR = this.TERROR;\n    var EOF = this.EOF;\n    var ERROR_RECOVERY_TOKEN_DISCARD_COUNT = (this.options.errorRecoveryTokenDiscardCount | 0) || 3;\n    var NO_ACTION = [0, 354 /* === table.length :: ensures that anyone using this new state will fail dramatically! */];\n\n    var lexer;\n    if (this.__lexer__) {\n        lexer = this.__lexer__;\n    } else {\n        lexer = this.__lexer__ = Object.create(this.lexer);\n    }\n\n    var sharedState_yy = {\n        parseError: undefined,\n        quoteName: undefined,\n        lexer: undefined,\n        parser: undefined,\n        pre_parse: undefined,\n        post_parse: undefined,\n        pre_lex: undefined,\n        post_lex: undefined      // WARNING: must be written this way for the code expanders to work correctly in both ES5 and ES6 modes!\n    };\n\n    var ASSERT;\n    if (typeof assert !== 'function') {\n        ASSERT = function JisonAssert(cond, msg) {\n            if (!cond) {\n                throw new Error('assertion failed: ' + (msg || '***'));\n            }\n        };\n    } else {\n        ASSERT = assert;\n    }\n\n    this.yyGetSharedState = function yyGetSharedState() {\n        return sharedState_yy;\n    };\n\n\n    // shallow clone objects, straight copy of simple `src` values\n    // e.g. `lexer.yytext` MAY be a complex value object,\n    // rather than a simple string/value.\n    function shallow_copy(src) {\n        if (typeof src === 'object') {\n            var dst = {};\n            for (var k in src) {\n                if (Object.prototype.hasOwnProperty.call(src, k)) {\n                    dst[k] = src[k];\n                }\n            }\n            return dst;\n        }\n        return src;\n    }\n    function shallow_copy_noclobber(dst, src) {\n        for (var k in src) {\n            if (typeof dst[k] === 'undefined' && Object.prototype.hasOwnProperty.call(src, k)) {\n                dst[k] = src[k];\n            }\n        }\n    }\n    function copy_yylloc(loc) {\n        var rv = shallow_copy(loc);\n        if (rv && rv.range) {\n            rv.range = rv.range.slice(0);\n        }\n        return rv;\n    }\n\n    // copy state\n    shallow_copy_noclobber(sharedState_yy, this.yy);\n\n    sharedState_yy.lexer = lexer;\n    sharedState_yy.parser = this;\n\n\n\n\n\n\n    // Does the shared state override the default `parseError` that already comes with this instance?\n    if (typeof sharedState_yy.parseError === 'function') {\n        this.parseError = function parseErrorAlt(str, hash, ExceptionClass) {\n            if (!ExceptionClass) {\n                ExceptionClass = this.JisonParserError;\n            }\n            return sharedState_yy.parseError.call(this, str, hash, ExceptionClass);\n        };\n    } else {\n        this.parseError = this.originalParseError;\n    }\n\n    // Does the shared state override the default `quoteName` that already comes with this instance?\n    if (typeof sharedState_yy.quoteName === 'function') {\n        this.quoteName = function quoteNameAlt(id_str) {\n            return sharedState_yy.quoteName.call(this, id_str);\n        };\n    } else {\n        this.quoteName = this.originalQuoteName;\n    }\n\n    // set up the cleanup function; make it an API so that external code can re-use this one in case of\n    // calamities or when the `%options no-try-catch` option has been specified for the grammar, in which\n    // case this parse() API method doesn't come with a `finally { ... }` block any more!\n    //\n    // NOTE: as this API uses parse() as a closure, it MUST be set again on every parse() invocation,\n    //       or else your `sharedState`, etc. references will be *wrong*!\n    this.cleanupAfterParse = function parser_cleanupAfterParse(resultValue, invoke_post_methods, do_not_nuke_errorinfos) {\n        var rv;\n\n        if (invoke_post_methods) {\n            var hash;\n\n            if (sharedState_yy.post_parse || this.post_parse) {\n                // create an error hash info instance: we re-use this API in a **non-error situation**\n                // as this one delivers all parser internals ready for access by userland code.\n                hash = this.constructParseErrorInfo(null /* no error! */, null /* no exception! */, null, false);\n            }\n\n            if (sharedState_yy.post_parse) {\n                rv = sharedState_yy.post_parse.call(this, sharedState_yy, resultValue, hash);\n                if (typeof rv !== 'undefined') resultValue = rv;\n            }\n            if (this.post_parse) {\n                rv = this.post_parse.call(this, sharedState_yy, resultValue, hash);\n                if (typeof rv !== 'undefined') resultValue = rv;\n            }\n\n            // cleanup:\n            if (hash && hash.destroy) {\n                hash.destroy();\n            }\n        }\n\n        if (this.__reentrant_call_depth > 1) return resultValue;        // do not (yet) kill the sharedState when this is a reentrant run.\n\n        // clean up the lingering lexer structures as well:\n        if (lexer.cleanupAfterLex) {\n            lexer.cleanupAfterLex(do_not_nuke_errorinfos);\n        }\n\n        // prevent lingering circular references from causing memory leaks:\n        if (sharedState_yy) {\n            sharedState_yy.lexer = undefined;\n            sharedState_yy.parser = undefined;\n            if (lexer.yy === sharedState_yy) {\n                lexer.yy = undefined;\n            }\n        }\n        sharedState_yy = undefined;\n        this.parseError = this.originalParseError;\n        this.quoteName = this.originalQuoteName;\n\n        // nuke the vstack[] array at least as that one will still reference obsoleted user values.\n        // To be safe, we nuke the other internal stack columns as well...\n        stack.length = 0;               // fastest way to nuke an array without overly bothering the GC\n        sstack.length = 0;\n        lstack.length = 0;\n        vstack.length = 0;\n        sp = 0;\n\n        // nuke the error hash info instances created during this run.\n        // Userland code must COPY any data/references\n        // in the error hash instance(s) it is more permanently interested in.\n        if (!do_not_nuke_errorinfos) {\n            for (var i = this.__error_infos.length - 1; i >= 0; i--) {\n                var el = this.__error_infos[i];\n                if (el && typeof el.destroy === 'function') {\n                    el.destroy();\n                }\n            }\n            this.__error_infos.length = 0;\n\n\n        }\n\n        return resultValue;\n    };\n\n    // merge yylloc info into a new yylloc instance.\n    //\n    // `first_index` and `last_index` MAY be UNDEFINED/NULL or these are indexes into the `lstack[]` location stack array.\n    //\n    // `first_yylloc` and `last_yylloc` MAY be UNDEFINED/NULL or explicit (custom or regular) `yylloc` instances, in which\n    // case these override the corresponding first/last indexes.\n    //\n    // `dont_look_back` is an optional flag (default: FALSE), which instructs this merge operation NOT to search\n    // through the parse location stack for a location, which would otherwise be used to construct the new (epsilon!)\n    // yylloc info.\n    //\n    // Note: epsilon rule's yylloc situation is detected by passing both `first_index` and `first_yylloc` as UNDEFINED/NULL.\n    this.yyMergeLocationInfo = function parser_yyMergeLocationInfo(first_index, last_index, first_yylloc, last_yylloc, dont_look_back) {\n        var i1 = first_index | 0,\n            i2 = last_index | 0;\n        var l1 = first_yylloc,\n            l2 = last_yylloc;\n        var rv;\n\n        // rules:\n        // - first/last yylloc entries override first/last indexes\n\n        if (!l1) {\n            if (first_index != null) {\n                for (var i = i1; i <= i2; i++) {\n                    l1 = lstack[i];\n                    if (l1) {\n                        break;\n                    }\n                }\n            }\n        }\n\n        if (!l2) {\n            if (last_index != null) {\n                for (var i = i2; i >= i1; i--) {\n                    l2 = lstack[i];\n                    if (l2) {\n                        break;\n                    }\n                }\n            }\n        }\n\n        // - detect if an epsilon rule is being processed and act accordingly:\n        if (!l1 && first_index == null) {\n            // epsilon rule span merger. With optional look-ahead in l2.\n            if (!dont_look_back) {\n                for (var i = (i1 || sp) - 1; i >= 0; i--) {\n                    l1 = lstack[i];\n                    if (l1) {\n                        break;\n                    }\n                }\n            }\n            if (!l1) {\n                if (!l2) {\n                    // when we still don't have any valid yylloc info, we're looking at an epsilon rule\n                    // without look-ahead and no preceding terms and/or `dont_look_back` set:\n                    // in that case we ca do nothing but return NULL/UNDEFINED:\n                    return undefined;\n                } else {\n                    // shallow-copy L2: after all, we MAY be looking\n                    // at unconventional yylloc info objects...\n                    rv = shallow_copy(l2);\n                    if (rv.range) {\n                        // shallow copy the yylloc ranges info to prevent us from modifying the original arguments' entries:\n                        rv.range = rv.range.slice(0);\n                    }\n                    return rv;\n                }\n            } else {\n                // shallow-copy L1, then adjust first col/row 1 column past the end.\n                rv = shallow_copy(l1);\n                rv.first_line = rv.last_line;\n                rv.first_column = rv.last_column;\n                if (rv.range) {\n                    // shallow copy the yylloc ranges info to prevent us from modifying the original arguments' entries:\n                    rv.range = rv.range.slice(0);\n                    rv.range[0] = rv.range[1];\n                }\n\n                if (l2) {\n                    // shallow-mixin L2, then adjust last col/row accordingly.\n                    shallow_copy_noclobber(rv, l2);\n                    rv.last_line = l2.last_line;\n                    rv.last_column = l2.last_column;\n                    if (rv.range && l2.range) {\n                        rv.range[1] = l2.range[1];\n                    }\n                }\n                return rv;\n            }\n        }\n\n        if (!l1) {\n            l1 = l2;\n            l2 = null;\n        }\n        if (!l1) {\n            return undefined;\n        }\n\n        // shallow-copy L1|L2, before we try to adjust the yylloc values: after all, we MAY be looking\n        // at unconventional yylloc info objects...\n        rv = shallow_copy(l1);\n\n        // first_line: ...,\n        // first_column: ...,\n        // last_line: ...,\n        // last_column: ...,\n        if (rv.range) {\n            // shallow copy the yylloc ranges info to prevent us from modifying the original arguments' entries:\n            rv.range = rv.range.slice(0);\n        }\n\n        if (l2) {\n            shallow_copy_noclobber(rv, l2);\n            rv.last_line = l2.last_line;\n            rv.last_column = l2.last_column;\n            if (rv.range && l2.range) {\n                rv.range[1] = l2.range[1];\n            }\n        }\n\n        return rv;\n    };\n\n    // NOTE: as this API uses parse() as a closure, it MUST be set again on every parse() invocation,\n    //       or else your `lexer`, `sharedState`, etc. references will be *wrong*!\n    this.constructParseErrorInfo = function parser_constructParseErrorInfo(msg, ex, expected, recoverable) {\n        var pei = {\n            errStr: msg,\n            exception: ex,\n            text: lexer.match,\n            value: lexer.yytext,\n            token: this.describeSymbol(symbol) || symbol,\n            token_id: symbol,\n            line: lexer.yylineno,\n            loc: copy_yylloc(lexer.yylloc),\n            expected: expected,\n            recoverable: recoverable,\n            state: state,\n            action: action,\n            new_state: newState,\n            symbol_stack: stack,\n            state_stack: sstack,\n            value_stack: vstack,\n            location_stack: lstack,\n            stack_pointer: sp,\n            yy: sharedState_yy,\n            lexer: lexer,\n            parser: this,\n\n            // and make sure the error info doesn't stay due to potential\n            // ref cycle via userland code manipulations.\n            // These would otherwise all be memory leak opportunities!\n            //\n            // Note that only array and object references are nuked as those\n            // constitute the set of elements which can produce a cyclic ref.\n            // The rest of the members is kept intact as they are harmless.\n            destroy: function destructParseErrorInfo() {\n                // remove cyclic references added to error info:\n                // info.yy = null;\n                // info.lexer = null;\n                // info.value = null;\n                // info.value_stack = null;\n                // ...\n                var rec = !!this.recoverable;\n                for (var key in this) {\n                    if (this.hasOwnProperty(key) && typeof key === 'object') {\n                        this[key] = undefined;\n                    }\n                }\n                this.recoverable = rec;\n            }\n        };\n        // track this instance so we can `destroy()` it once we deem it superfluous and ready for garbage collection!\n        this.__error_infos.push(pei);\n        return pei;\n    };\n\n\n\n\n\n\n\n\n\n\n\n\n\n    function getNonTerminalFromCode(symbol) {\n        var tokenName = self.getSymbolName(symbol);\n        if (!tokenName) {\n            tokenName = symbol;\n        }\n        return tokenName;\n    }\n\n\n    function stdLex() {\n        var token = lexer.lex();\n        // if token isn't its numeric value, convert\n        if (typeof token !== 'number') {\n            token = self.symbols_[token] || token;\n        }\n\n        return token || EOF;\n    }\n\n    function fastLex() {\n        var token = lexer.fastLex();\n        // if token isn't its numeric value, convert\n        if (typeof token !== 'number') {\n            token = self.symbols_[token] || token;\n        }\n\n        return token || EOF;\n    }\n\n    var lex = stdLex;\n\n\n    var state, action, r, t;\n    var yyval = {\n        $: true,\n        _$: undefined,\n        yy: sharedState_yy\n    };\n    var p;\n    var yyrulelen;\n    var this_production;\n    var newState;\n    var retval = false;\n\n\n    try {\n        this.__reentrant_call_depth++;\n\n        lexer.setInput(input, sharedState_yy);\n\n        // NOTE: we *assume* no lexer pre/post handlers are set up *after* \n        // this initial `setInput()` call: hence we can now check and decide\n        // whether we'll go with the standard, slower, lex() API or the\n        // `fast_lex()` one:\n        if (typeof lexer.canIUse === 'function') {\n            var lexerInfo = lexer.canIUse();\n            if (lexerInfo.fastLex && typeof fastLex === 'function') {\n                lex = fastLex;\n            }\n        } \n\n        yyloc = lexer.yylloc;\n        lstack[sp] = yyloc;\n        vstack[sp] = null;\n        sstack[sp] = 0;\n        stack[sp] = 0;\n        ++sp;\n\n        yytext = lexer.yytext;\n\n\n\n        if (this.pre_parse) {\n            this.pre_parse.call(this, sharedState_yy);\n        }\n        if (sharedState_yy.pre_parse) {\n            sharedState_yy.pre_parse.call(this, sharedState_yy);\n        }\n\n        newState = sstack[sp - 1];\n        for (;;) {\n            // retrieve state number from top of stack\n            state = newState;               // sstack[sp - 1];\n\n            // use default actions if available\n            if (this.defaultActions[state]) {\n                action = 2;\n                newState = this.defaultActions[state];\n            } else {\n                // The single `==` condition below covers both these `===` comparisons in a single\n                // operation:\n                //\n                //     if (symbol === null || typeof symbol === 'undefined') ...\n                if (!symbol) {\n                    symbol = lex();\n                }\n                // read action for current state and first input\n                t = (table[state] && table[state][symbol]) || NO_ACTION;\n                newState = t[1];\n                action = t[0];\n\n\n\n\n\n\n\n\n\n\n\n                // handle parse error\n                if (!action) {\n                    var errStr;\n                    var errSymbolDescr = (this.describeSymbol(symbol) || symbol);\n                    var expected = this.collect_expected_token_set(state);\n\n                    // Report error\n                    if (typeof lexer.yylineno === 'number') {\n                        errStr = 'Parse error on line ' + (lexer.yylineno + 1) + ': ';\n                    } else {\n                        errStr = 'Parse error: ';\n                    }\n                    if (typeof lexer.showPosition === 'function') {\n                        errStr += '\\n' + lexer.showPosition(79 - 10, 10) + '\\n';\n                    }\n                    if (expected.length) {\n                        errStr += 'Expecting ' + expected.join(', ') + ', got unexpected ' + errSymbolDescr;\n                    } else {\n                        errStr += 'Unexpected ' + errSymbolDescr;\n                    }\n                    // we cannot recover from the error!\n                    p = this.constructParseErrorInfo(errStr, null, expected, false);\n                    r = this.parseError(p.errStr, p, this.JisonParserError);\n                    if (typeof r !== 'undefined') {\n                        retval = r;\n                    }\n                    break;\n                }\n\n\n            }\n\n\n\n\n\n\n\n\n\n\n            switch (action) {\n            // catch misc. parse failures:\n            default:\n                // this shouldn't happen, unless resolve defaults are off\n                if (action instanceof Array) {\n                    p = this.constructParseErrorInfo('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol, null, null, false);\n                    r = this.parseError(p.errStr, p, this.JisonParserError);\n                    if (typeof r !== 'undefined') {\n                        retval = r;\n                    }\n                    break;\n                }\n                // Another case of better safe than sorry: in case state transitions come out of another error recovery process\n                // or a buggy LUT (LookUp Table):\n                p = this.constructParseErrorInfo('Parsing halted. No viable error recovery approach available due to internal system failure.', null, null, false);\n                r = this.parseError(p.errStr, p, this.JisonParserError);\n                if (typeof r !== 'undefined') {\n                    retval = r;\n                }\n                break;\n\n            // shift:\n            case 1:\n                stack[sp] = symbol;\n                vstack[sp] = lexer.yytext;\n                lstack[sp] = copy_yylloc(lexer.yylloc);\n                sstack[sp] = newState; // push state\n\n                ++sp;\n                symbol = 0;\n\n\n\n\n                // Pick up the lexer details for the current symbol as that one is not 'look-ahead' any more:\n\n                yytext = lexer.yytext;\n\n                yyloc = lexer.yylloc;\n                continue;\n\n            // reduce:\n            case 2:\n\n\n\n                this_production = this.productions_[newState - 1];  // `this.productions_[]` is zero-based indexed while states start from 1 upwards...\n                yyrulelen = this_production[1];\n\n\n\n\n\n\n\n\n\n\n                r = this.performAction.call(yyval, yytext, yyloc, newState, sp - 1, vstack, lstack);\n\n                if (typeof r !== 'undefined') {\n                    retval = r;\n                    break;\n                }\n\n                // pop off stack\n                sp -= yyrulelen;\n\n                // don't overwrite the `symbol` variable: use a local var to speed things up:\n                var ntsymbol = this_production[0];    // push nonterminal (reduce)\n                stack[sp] = ntsymbol;\n                vstack[sp] = yyval.$;\n                lstack[sp] = yyval._$;\n                // goto new state = table[STATE][NONTERMINAL]\n                newState = table[sstack[sp - 1]][ntsymbol];\n                sstack[sp] = newState;\n                ++sp;\n\n\n\n\n\n\n\n\n\n                continue;\n\n            // accept:\n            case 3:\n                if (sp !== -2) {\n                    retval = true;\n                    // Return the `$accept` rule's `$$` result, if available.\n                    //\n                    // Also note that JISON always adds this top-most `$accept` rule (with implicit,\n                    // default, action):\n                    //\n                    //     $accept: <startSymbol> $end\n                    //                  %{ $$ = $1; @$ = @1; %}\n                    //\n                    // which, combined with the parse kernel's `$accept` state behaviour coded below,\n                    // will produce the `$$` value output of the <startSymbol> rule as the parse result,\n                    // IFF that result is *not* `undefined`. (See also the parser kernel code.)\n                    //\n                    // In code:\n                    //\n                    //                  %{\n                    //                      @$ = @1;            // if location tracking support is included\n                    //                      if (typeof $1 !== 'undefined')\n                    //                          return $1;\n                    //                      else\n                    //                          return true;           // the default parse result if the rule actions don't produce anything\n                    //                  %}\n                    sp--;\n                    if (typeof vstack[sp] !== 'undefined') {\n                        retval = vstack[sp];\n                    }\n                }\n                break;\n            }\n\n            // break out of loop: we accept or fail with error\n            break;\n        }\n    } catch (ex) {\n        // report exceptions through the parseError callback too, but keep the exception intact\n        // if it is a known parser or lexer error which has been thrown by parseError() already:\n        if (ex instanceof this.JisonParserError) {\n            throw ex;\n        }\n        else if (lexer && typeof lexer.JisonLexerError === 'function' && ex instanceof lexer.JisonLexerError) {\n            throw ex;\n        }\n\n        p = this.constructParseErrorInfo('Parsing aborted due to exception.', ex, null, false);\n        retval = false;\n        r = this.parseError(p.errStr, p, this.JisonParserError);\n        if (typeof r !== 'undefined') {\n            retval = r;\n        }\n    } finally {\n        retval = this.cleanupAfterParse(retval, true, true);\n        this.__reentrant_call_depth--;\n    }   // /finally\n\n    return retval;\n}\n};\nparser.originalParseError = parser.parseError;\nparser.originalQuoteName = parser.quoteName;\n\nconst t = require(\"../parsetree\");\n\nfunction Parser() {\n  this.yy = {};\n}\nParser.prototype = parser;\nparser.Parser = Parser;\n\nreturn new Parser();\n})();\n\n        \n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\n  exports.parser = c_grammar;\n  exports.Parser = c_grammar.Parser;\n  exports.parse = function () {\n    return c_grammar.parse.apply(c_grammar, arguments);\n  };\n  \n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module\n__webpack_require__(3648);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}